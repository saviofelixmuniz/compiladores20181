/*
 * generated by Xtext 2.14.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimportdecl
entryRuleimportdecl
:
{ before(grammarAccess.getImportdeclRule()); }
	 ruleimportdecl
{ after(grammarAccess.getImportdeclRule()); } 
	 EOF 
;

// Rule importdecl
ruleimportdecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportdeclAccess().getGroup()); }
		(rule__Importdecl__Group__0)
		{ after(grammarAccess.getImportdeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimportspec
entryRuleimportspec
:
{ before(grammarAccess.getImportspecRule()); }
	 ruleimportspec
{ after(grammarAccess.getImportspecRule()); } 
	 EOF 
;

// Rule importspec
ruleimportspec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportspecAccess().getGroup()); }
		(rule__Importspec__Group__0)
		{ after(grammarAccess.getImportspecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimportpath
entryRuleimportpath
:
{ before(grammarAccess.getImportpathRule()); }
	 ruleimportpath
{ after(grammarAccess.getImportpathRule()); } 
	 EOF 
;

// Rule importpath
ruleimportpath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportpathAccess().getString_litParserRuleCall()); }
		rulestring_lit
		{ after(grammarAccess.getImportpathAccess().getString_litParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepackageclause
entryRulepackageclause
:
{ before(grammarAccess.getPackageclauseRule()); }
	 rulepackageclause
{ after(grammarAccess.getPackageclauseRule()); } 
	 EOF 
;

// Rule packageclause
rulepackageclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageclauseAccess().getGroup()); }
		(rule__Packageclause__Group__0)
		{ after(grammarAccess.getPackageclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpressionaux
entryRuleexpressionaux
:
{ before(grammarAccess.getExpressionauxRule()); }
	 ruleexpressionaux
{ after(grammarAccess.getExpressionauxRule()); } 
	 EOF 
;

// Rule expressionaux
ruleexpressionaux 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionauxAccess().getGroup()); }
		(rule__Expressionaux__Group__0)
		{ after(grammarAccess.getExpressionauxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunaryexpr
entryRuleunaryexpr
:
{ before(grammarAccess.getUnaryexprRule()); }
	 ruleunaryexpr
{ after(grammarAccess.getUnaryexprRule()); } 
	 EOF 
;

// Rule unaryexpr
ruleunaryexpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryexprAccess().getAlternatives()); }
		(rule__Unaryexpr__Alternatives)
		{ after(grammarAccess.getUnaryexprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryexpr
entryRuleprimaryexpr
:
{ before(grammarAccess.getPrimaryexprRule()); }
	 ruleprimaryexpr
{ after(grammarAccess.getPrimaryexprRule()); } 
	 EOF 
;

// Rule primaryexpr
ruleprimaryexpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getAlternatives()); }
		(rule__Primaryexpr__Alternatives)
		{ after(grammarAccess.getPrimaryexprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprimaryexpraux
entryRuleprimaryexpraux
:
{ before(grammarAccess.getPrimaryexprauxRule()); }
	 ruleprimaryexpraux
{ after(grammarAccess.getPrimaryexprauxRule()); } 
	 EOF 
;

// Rule primaryexpraux
ruleprimaryexpraux 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getAlternatives()); }
		(rule__Primaryexpraux__Alternatives)
		{ after(grammarAccess.getPrimaryexprauxAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleindex
entryRuleindex
:
{ before(grammarAccess.getIndexRule()); }
	 ruleindex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule index
ruleindex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexAccess().getGroup()); }
		(rule__Index__Group__0)
		{ after(grammarAccess.getIndexAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleslice
entryRuleslice
:
{ before(grammarAccess.getSliceRule()); }
	 ruleslice
{ after(grammarAccess.getSliceRule()); } 
	 EOF 
;

// Rule slice
ruleslice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSliceAccess().getGroup()); }
		(rule__Slice__Group__0)
		{ after(grammarAccess.getSliceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemethodexpr
entryRulemethodexpr
:
{ before(grammarAccess.getMethodexprRule()); }
	 rulemethodexpr
{ after(grammarAccess.getMethodexprRule()); } 
	 EOF 
;

// Rule methodexpr
rulemethodexpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodexprAccess().getGroup()); }
		(rule__Methodexpr__Group__0)
		{ after(grammarAccess.getMethodexprAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereceivertype
entryRulereceivertype
:
{ before(grammarAccess.getReceivertypeRule()); }
	 rulereceivertype
{ after(grammarAccess.getReceivertypeRule()); } 
	 EOF 
;

// Rule receivertype
rulereceivertype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceivertypeAccess().getTypeParserRuleCall()); }
		ruletype
		{ after(grammarAccess.getReceivertypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconversion
entryRuleconversion
:
{ before(grammarAccess.getConversionRule()); }
	 ruleconversion
{ after(grammarAccess.getConversionRule()); } 
	 EOF 
;

// Rule conversion
ruleconversion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConversionAccess().getGroup()); }
		(rule__Conversion__Group__0)
		{ after(grammarAccess.getConversionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoperand
entryRuleoperand
:
{ before(grammarAccess.getOperandRule()); }
	 ruleoperand
{ after(grammarAccess.getOperandRule()); } 
	 EOF 
;

// Rule operand
ruleoperand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandAccess().getAlternatives()); }
		(rule__Operand__Alternatives)
		{ after(grammarAccess.getOperandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompositelit
entryRulecompositelit
:
{ before(grammarAccess.getCompositelitRule()); }
	 rulecompositelit
{ after(grammarAccess.getCompositelitRule()); } 
	 EOF 
;

// Rule compositelit
rulecompositelit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositelitAccess().getGroup()); }
		(rule__Compositelit__Group__0)
		{ after(grammarAccess.getCompositelitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteraltype
entryRuleliteraltype
:
{ before(grammarAccess.getLiteraltypeRule()); }
	 ruleliteraltype
{ after(grammarAccess.getLiteraltypeRule()); } 
	 EOF 
;

// Rule literaltype
ruleliteraltype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteraltypeAccess().getAlternatives()); }
		(rule__Literaltype__Alternatives)
		{ after(grammarAccess.getLiteraltypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteralvalue
entryRuleliteralvalue
:
{ before(grammarAccess.getLiteralvalueRule()); }
	 ruleliteralvalue
{ after(grammarAccess.getLiteralvalueRule()); } 
	 EOF 
;

// Rule literalvalue
ruleliteralvalue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralvalueAccess().getGroup()); }
		(rule__Literalvalue__Group__0)
		{ after(grammarAccess.getLiteralvalueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelementlist
entryRuleelementlist
:
{ before(grammarAccess.getElementlistRule()); }
	 ruleelementlist
{ after(grammarAccess.getElementlistRule()); } 
	 EOF 
;

// Rule elementlist
ruleelementlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementlistAccess().getGroup()); }
		(rule__Elementlist__Group__0)
		{ after(grammarAccess.getElementlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulekeyedelement
entryRulekeyedelement
:
{ before(grammarAccess.getKeyedelementRule()); }
	 rulekeyedelement
{ after(grammarAccess.getKeyedelementRule()); } 
	 EOF 
;

// Rule keyedelement
rulekeyedelement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyedelementAccess().getGroup()); }
		(rule__Keyedelement__Group__0)
		{ after(grammarAccess.getKeyedelementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulekey
entryRulekey
:
{ before(grammarAccess.getKeyRule()); }
	 rulekey
{ after(grammarAccess.getKeyRule()); } 
	 EOF 
;

// Rule key
rulekey 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyAccess().getAlternatives()); }
		(rule__Key__Alternatives)
		{ after(grammarAccess.getKeyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelement
entryRuleelement
:
{ before(grammarAccess.getElementRule()); }
	 ruleelement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule element
ruleelement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctionlit
entryRulefunctionlit
:
{ before(grammarAccess.getFunctionlitRule()); }
	 rulefunctionlit
{ after(grammarAccess.getFunctionlitRule()); } 
	 EOF 
;

// Rule functionlit
rulefunctionlit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionlitAccess().getGroup()); }
		(rule__Functionlit__Group__0)
		{ after(grammarAccess.getFunctionlitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeclaration
entryRuledeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruledeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule declaration
ruledeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getAlternatives()); }
		(rule__Declaration__Alternatives)
		{ after(grammarAccess.getDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevardecl
entryRulevardecl
:
{ before(grammarAccess.getVardeclRule()); }
	 rulevardecl
{ after(grammarAccess.getVardeclRule()); } 
	 EOF 
;

// Rule vardecl
rulevardecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVardeclAccess().getGroup()); }
		(rule__Vardecl__Group__0)
		{ after(grammarAccess.getVardeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevarspec
entryRulevarspec
:
{ before(grammarAccess.getVarspecRule()); }
	 rulevarspec
{ after(grammarAccess.getVarspecRule()); } 
	 EOF 
;

// Rule varspec
rulevarspec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarspecAccess().getGroup()); }
		(rule__Varspec__Group__0)
		{ after(grammarAccess.getVarspecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypedecl
entryRuletypedecl
:
{ before(grammarAccess.getTypedeclRule()); }
	 ruletypedecl
{ after(grammarAccess.getTypedeclRule()); } 
	 EOF 
;

// Rule typedecl
ruletypedecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedeclAccess().getGroup()); }
		(rule__Typedecl__Group__0)
		{ after(grammarAccess.getTypedeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypespec
entryRuletypespec
:
{ before(grammarAccess.getTypespecRule()); }
	 ruletypespec
{ after(grammarAccess.getTypespecRule()); } 
	 EOF 
;

// Rule typespec
ruletypespec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypespecAccess().getGroup()); }
		(rule__Typespec__Group__0)
		{ after(grammarAccess.getTypespecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypespecaux
entryRuletypespecaux
:
{ before(grammarAccess.getTypespecauxRule()); }
	 ruletypespecaux
{ after(grammarAccess.getTypespecauxRule()); } 
	 EOF 
;

// Rule typespecaux
ruletypespecaux 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypespecauxAccess().getAlternatives()); }
		(rule__Typespecaux__Alternatives)
		{ after(grammarAccess.getTypespecauxAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypedef
entryRuletypedef
:
{ before(grammarAccess.getTypedefRule()); }
	 ruletypedef
{ after(grammarAccess.getTypedefRule()); } 
	 EOF 
;

// Rule typedef
ruletypedef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypedefAccess().getTypeAssignment()); }
		(rule__Typedef__TypeAssignment)
		{ after(grammarAccess.getTypedefAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulealiasdecl
entryRulealiasdecl
:
{ before(grammarAccess.getAliasdeclRule()); }
	 rulealiasdecl
{ after(grammarAccess.getAliasdeclRule()); } 
	 EOF 
;

// Rule aliasdecl
rulealiasdecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAliasdeclAccess().getGroup()); }
		(rule__Aliasdecl__Group__0)
		{ after(grammarAccess.getAliasdeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletopleveldecl
entryRuletopleveldecl
:
{ before(grammarAccess.getTopleveldeclRule()); }
	 ruletopleveldecl
{ after(grammarAccess.getTopleveldeclRule()); } 
	 EOF 
;

// Rule topleveldecl
ruletopleveldecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopleveldeclAccess().getAlternatives()); }
		(rule__Topleveldecl__Alternatives)
		{ after(grammarAccess.getTopleveldeclAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemethoddecl
entryRulemethoddecl
:
{ before(grammarAccess.getMethoddeclRule()); }
	 rulemethoddecl
{ after(grammarAccess.getMethoddeclRule()); } 
	 EOF 
;

// Rule methoddecl
rulemethoddecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethoddeclAccess().getGroup()); }
		(rule__Methoddecl__Group__0)
		{ after(grammarAccess.getMethoddeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereceiver
entryRulereceiver
:
{ before(grammarAccess.getReceiverRule()); }
	 rulereceiver
{ after(grammarAccess.getReceiverRule()); } 
	 EOF 
;

// Rule receiver
rulereceiver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
		ruleparameters
		{ after(grammarAccess.getReceiverAccess().getParametersParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctiondecl
entryRulefunctiondecl
:
{ before(grammarAccess.getFunctiondeclRule()); }
	 rulefunctiondecl
{ after(grammarAccess.getFunctiondeclRule()); } 
	 EOF 
;

// Rule functiondecl
rulefunctiondecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctiondeclAccess().getGroup()); }
		(rule__Functiondecl__Group__0)
		{ after(grammarAccess.getFunctiondeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctionname
entryRulefunctionname
:
{ before(grammarAccess.getFunctionnameRule()); }
	 rulefunctionname
{ after(grammarAccess.getFunctionnameRule()); } 
	 EOF 
;

// Rule functionname
rulefunctionname 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionnameAccess().getIDENTIFIERTerminalRuleCall()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getFunctionnameAccess().getIDENTIFIERTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstdecl
entryRuleconstdecl
:
{ before(grammarAccess.getConstdeclRule()); }
	 ruleconstdecl
{ after(grammarAccess.getConstdeclRule()); } 
	 EOF 
;

// Rule constdecl
ruleconstdecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstdeclAccess().getGroup()); }
		(rule__Constdecl__Group__0)
		{ after(grammarAccess.getConstdeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstspec
entryRuleconstspec
:
{ before(grammarAccess.getConstspecRule()); }
	 ruleconstspec
{ after(grammarAccess.getConstspecRule()); } 
	 EOF 
;

// Rule constspec
ruleconstspec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstspecAccess().getGroup()); }
		(rule__Constspec__Group__0)
		{ after(grammarAccess.getConstspecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimplestmt
entryRulesimplestmt
:
{ before(grammarAccess.getSimplestmtRule()); }
	 rulesimplestmt
{ after(grammarAccess.getSimplestmtRule()); } 
	 EOF 
;

// Rule simplestmt
rulesimplestmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimplestmtAccess().getAlternatives()); }
		(rule__Simplestmt__Alternatives)
		{ after(grammarAccess.getSimplestmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleshortvardecl
entryRuleshortvardecl
:
{ before(grammarAccess.getShortvardeclRule()); }
	 ruleshortvardecl
{ after(grammarAccess.getShortvardeclRule()); } 
	 EOF 
;

// Rule shortvardecl
ruleshortvardecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortvardeclAccess().getGroup()); }
		(rule__Shortvardecl__Group__0)
		{ after(grammarAccess.getShortvardeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledeferstmt
entryRuledeferstmt
:
{ before(grammarAccess.getDeferstmtRule()); }
	 ruledeferstmt
{ after(grammarAccess.getDeferstmtRule()); } 
	 EOF 
;

// Rule deferstmt
ruledeferstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeferstmtAccess().getGroup()); }
		(rule__Deferstmt__Group__0)
		{ after(grammarAccess.getDeferstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegotostmt
entryRulegotostmt
:
{ before(grammarAccess.getGotostmtRule()); }
	 rulegotostmt
{ after(grammarAccess.getGotostmtRule()); } 
	 EOF 
;

// Rule gotostmt
rulegotostmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGotostmtAccess().getGroup()); }
		(rule__Gotostmt__Group__0)
		{ after(grammarAccess.getGotostmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecontinuestmt
entryRulecontinuestmt
:
{ before(grammarAccess.getContinuestmtRule()); }
	 rulecontinuestmt
{ after(grammarAccess.getContinuestmtRule()); } 
	 EOF 
;

// Rule continuestmt
rulecontinuestmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinuestmtAccess().getGroup()); }
		(rule__Continuestmt__Group__0)
		{ after(grammarAccess.getContinuestmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebreakstmt
entryRulebreakstmt
:
{ before(grammarAccess.getBreakstmtRule()); }
	 rulebreakstmt
{ after(grammarAccess.getBreakstmtRule()); } 
	 EOF 
;

// Rule breakstmt
rulebreakstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakstmtAccess().getGroup()); }
		(rule__Breakstmt__Group__0)
		{ after(grammarAccess.getBreakstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulereturnstmt
entryRulereturnstmt
:
{ before(grammarAccess.getReturnstmtRule()); }
	 rulereturnstmt
{ after(grammarAccess.getReturnstmtRule()); } 
	 EOF 
;

// Rule returnstmt
rulereturnstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnstmtAccess().getGroup()); }
		(rule__Returnstmt__Group__0)
		{ after(grammarAccess.getReturnstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleselectstmt
entryRuleselectstmt
:
{ before(grammarAccess.getSelectstmtRule()); }
	 ruleselectstmt
{ after(grammarAccess.getSelectstmtRule()); } 
	 EOF 
;

// Rule selectstmt
ruleselectstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectstmtAccess().getGroup()); }
		(rule__Selectstmt__Group__0)
		{ after(grammarAccess.getSelectstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecommclause
entryRulecommclause
:
{ before(grammarAccess.getCommclauseRule()); }
	 rulecommclause
{ after(grammarAccess.getCommclauseRule()); } 
	 EOF 
;

// Rule commclause
rulecommclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommclauseAccess().getGroup()); }
		(rule__Commclause__Group__0)
		{ after(grammarAccess.getCommclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecommcase
entryRulecommcase
:
{ before(grammarAccess.getCommcaseRule()); }
	 rulecommcase
{ after(grammarAccess.getCommcaseRule()); } 
	 EOF 
;

// Rule commcase
rulecommcase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommcaseAccess().getAlternatives()); }
		(rule__Commcase__Alternatives)
		{ after(grammarAccess.getCommcaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerecvstmt
entryRulerecvstmt
:
{ before(grammarAccess.getRecvstmtRule()); }
	 rulerecvstmt
{ after(grammarAccess.getRecvstmtRule()); } 
	 EOF 
;

// Rule recvstmt
rulerecvstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvstmtAccess().getGroup()); }
		(rule__Recvstmt__Group__0)
		{ after(grammarAccess.getRecvstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerecvexpr
entryRulerecvexpr
:
{ before(grammarAccess.getRecvexprRule()); }
	 rulerecvexpr
{ after(grammarAccess.getRecvexprRule()); } 
	 EOF 
;

// Rule recvexpr
rulerecvexpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecvexprAccess().getExpressionParserRuleCall()); }
		ruleexpression
		{ after(grammarAccess.getRecvexprAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegotstmt
entryRulegotstmt
:
{ before(grammarAccess.getGotstmtRule()); }
	 rulegotstmt
{ after(grammarAccess.getGotstmtRule()); } 
	 EOF 
;

// Rule gotstmt
rulegotstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGotstmtAccess().getGroup()); }
		(rule__Gotstmt__Group__0)
		{ after(grammarAccess.getGotstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleforstmt
entryRuleforstmt
:
{ before(grammarAccess.getForstmtRule()); }
	 ruleforstmt
{ after(grammarAccess.getForstmtRule()); } 
	 EOF 
;

// Rule forstmt
ruleforstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForstmtAccess().getGroup()); }
		(rule__Forstmt__Group__0)
		{ after(grammarAccess.getForstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerangeclause
entryRulerangeclause
:
{ before(grammarAccess.getRangeclauseRule()); }
	 rulerangeclause
{ after(grammarAccess.getRangeclauseRule()); } 
	 EOF 
;

// Rule rangeclause
rulerangeclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeclauseAccess().getGroup()); }
		(rule__Rangeclause__Group__0)
		{ after(grammarAccess.getRangeclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleforclause
entryRuleforclause
:
{ before(grammarAccess.getForclauseRule()); }
	 ruleforclause
{ after(grammarAccess.getForclauseRule()); } 
	 EOF 
;

// Rule forclause
ruleforclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForclauseAccess().getGroup()); }
		(rule__Forclause__Group__0)
		{ after(grammarAccess.getForclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinitstmt
entryRuleinitstmt
:
{ before(grammarAccess.getInitstmtRule()); }
	 ruleinitstmt
{ after(grammarAccess.getInitstmtRule()); } 
	 EOF 
;

// Rule initstmt
ruleinitstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitstmtAccess().getSimplestmtParserRuleCall()); }
		rulesimplestmt
		{ after(grammarAccess.getInitstmtAccess().getSimplestmtParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepoststmt
entryRulepoststmt
:
{ before(grammarAccess.getPoststmtRule()); }
	 rulepoststmt
{ after(grammarAccess.getPoststmtRule()); } 
	 EOF 
;

// Rule poststmt
rulepoststmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPoststmtAccess().getSimplestmtParserRuleCall()); }
		rulesimplestmt
		{ after(grammarAccess.getPoststmtAccess().getSimplestmtParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecondition
entryRulecondition
:
{ before(grammarAccess.getConditionRule()); }
	 rulecondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule condition
rulecondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getExpressionParserRuleCall()); }
		ruleexpression
		{ after(grammarAccess.getConditionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleswitchstmt
entryRuleswitchstmt
:
{ before(grammarAccess.getSwitchstmtRule()); }
	 ruleswitchstmt
{ after(grammarAccess.getSwitchstmtRule()); } 
	 EOF 
;

// Rule switchstmt
ruleswitchstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchstmtAccess().getAlternatives()); }
		(rule__Switchstmt__Alternatives)
		{ after(grammarAccess.getSwitchstmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexprswitchstmt
entryRuleexprswitchstmt
:
{ before(grammarAccess.getExprswitchstmtRule()); }
	 ruleexprswitchstmt
{ after(grammarAccess.getExprswitchstmtRule()); } 
	 EOF 
;

// Rule exprswitchstmt
ruleexprswitchstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprswitchstmtAccess().getGroup()); }
		(rule__Exprswitchstmt__Group__0)
		{ after(grammarAccess.getExprswitchstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexprcaseclause
entryRuleexprcaseclause
:
{ before(grammarAccess.getExprcaseclauseRule()); }
	 ruleexprcaseclause
{ after(grammarAccess.getExprcaseclauseRule()); } 
	 EOF 
;

// Rule exprcaseclause
ruleexprcaseclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprcaseclauseAccess().getGroup()); }
		(rule__Exprcaseclause__Group__0)
		{ after(grammarAccess.getExprcaseclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexprswitchcase
entryRuleexprswitchcase
:
{ before(grammarAccess.getExprswitchcaseRule()); }
	 ruleexprswitchcase
{ after(grammarAccess.getExprswitchcaseRule()); } 
	 EOF 
;

// Rule exprswitchcase
ruleexprswitchcase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprswitchcaseAccess().getAlternatives()); }
		(rule__Exprswitchcase__Alternatives)
		{ after(grammarAccess.getExprswitchcaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeswitchstmt
entryRuletypeswitchstmt
:
{ before(grammarAccess.getTypeswitchstmtRule()); }
	 ruletypeswitchstmt
{ after(grammarAccess.getTypeswitchstmtRule()); } 
	 EOF 
;

// Rule typeswitchstmt
ruletypeswitchstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeswitchstmtAccess().getGroup()); }
		(rule__Typeswitchstmt__Group__0)
		{ after(grammarAccess.getTypeswitchstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeswitchguard
entryRuletypeswitchguard
:
{ before(grammarAccess.getTypeswitchguardRule()); }
	 ruletypeswitchguard
{ after(grammarAccess.getTypeswitchguardRule()); } 
	 EOF 
;

// Rule typeswitchguard
ruletypeswitchguard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeswitchguardAccess().getGroup()); }
		(rule__Typeswitchguard__Group__0)
		{ after(grammarAccess.getTypeswitchguardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypecaseclause
entryRuletypecaseclause
:
{ before(grammarAccess.getTypecaseclauseRule()); }
	 ruletypecaseclause
{ after(grammarAccess.getTypecaseclauseRule()); } 
	 EOF 
;

// Rule typecaseclause
ruletypecaseclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypecaseclauseAccess().getGroup()); }
		(rule__Typecaseclause__Group__0)
		{ after(grammarAccess.getTypecaseclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeswitchcase
entryRuletypeswitchcase
:
{ before(grammarAccess.getTypeswitchcaseRule()); }
	 ruletypeswitchcase
{ after(grammarAccess.getTypeswitchcaseRule()); } 
	 EOF 
;

// Rule typeswitchcase
ruletypeswitchcase 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeswitchcaseAccess().getAlternatives()); }
		(rule__Typeswitchcase__Alternatives)
		{ after(grammarAccess.getTypeswitchcaseAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypelist
entryRuletypelist
:
{ before(grammarAccess.getTypelistRule()); }
	 ruletypelist
{ after(grammarAccess.getTypelistRule()); } 
	 EOF 
;

// Rule typelist
ruletypelist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypelistAccess().getGroup()); }
		(rule__Typelist__Group__0)
		{ after(grammarAccess.getTypelistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleifstmt
entryRuleifstmt
:
{ before(grammarAccess.getIfstmtRule()); }
	 ruleifstmt
{ after(grammarAccess.getIfstmtRule()); } 
	 EOF 
;

// Rule ifstmt
ruleifstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfstmtAccess().getGroup()); }
		(rule__Ifstmt__Group__0)
		{ after(grammarAccess.getIfstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment
entryRuleassignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleassignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule assignment
ruleassignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleincdecstmt
entryRuleincdecstmt
:
{ before(grammarAccess.getIncdecstmtRule()); }
	 ruleincdecstmt
{ after(grammarAccess.getIncdecstmtRule()); } 
	 EOF 
;

// Rule incdecstmt
ruleincdecstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncdecstmtAccess().getGroup()); }
		(rule__Incdecstmt__Group__0)
		{ after(grammarAccess.getIncdecstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesendstmt
entryRulesendstmt
:
{ before(grammarAccess.getSendstmtRule()); }
	 rulesendstmt
{ after(grammarAccess.getSendstmtRule()); } 
	 EOF 
;

// Rule sendstmt
rulesendstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendstmtAccess().getGroup()); }
		(rule__Sendstmt__Group__0)
		{ after(grammarAccess.getSendstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechannel
entryRulechannel
:
{ before(grammarAccess.getChannelRule()); }
	 rulechannel
{ after(grammarAccess.getChannelRule()); } 
	 EOF 
;

// Rule channel
rulechannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelAccess().getExpressionParserRuleCall()); }
		ruleexpression
		{ after(grammarAccess.getChannelAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabeledstmt
entryRulelabeledstmt
:
{ before(grammarAccess.getLabeledstmtRule()); }
	 rulelabeledstmt
{ after(grammarAccess.getLabeledstmtRule()); } 
	 EOF 
;

// Rule labeledstmt
rulelabeledstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeledstmtAccess().getGroup()); }
		(rule__Labeledstmt__Group__0)
		{ after(grammarAccess.getLabeledstmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabel
entryRulelabel
:
{ before(grammarAccess.getLabelRule()); }
	 rulelabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule label
rulelabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getIDENTIFIERTerminalRuleCall()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getLabelAccess().getIDENTIFIERTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpressionstmt
entryRuleexpressionstmt
:
{ before(grammarAccess.getExpressionstmtRule()); }
	 ruleexpressionstmt
{ after(grammarAccess.getExpressionstmtRule()); } 
	 EOF 
;

// Rule expressionstmt
ruleexpressionstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionstmtAccess().getExpressionParserRuleCall()); }
		ruleexpression
		{ after(grammarAccess.getExpressionstmtAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleemptystmt
entryRuleemptystmt
:
{ before(grammarAccess.getEmptystmtRule()); }
	 ruleemptystmt
{ after(grammarAccess.getEmptystmtRule()); } 
	 EOF 
;

// Rule emptystmt
ruleemptystmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptystmtAccess().getSemicolonKeyword()); }
		';'
		{ after(grammarAccess.getEmptystmtAccess().getSemicolonKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefallthroughstmt
entryRulefallthroughstmt
:
{ before(grammarAccess.getFallthroughstmtRule()); }
	 rulefallthroughstmt
{ after(grammarAccess.getFallthroughstmtRule()); } 
	 EOF 
;

// Rule fallthroughstmt
rulefallthroughstmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallthroughstmtAccess().getFallthroughKeyword()); }
		'fallthrough'
		{ after(grammarAccess.getFallthroughstmtAccess().getFallthroughKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock
entryRuleblock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatementlist
entryRulestatementlist
:
{ before(grammarAccess.getStatementlistRule()); }
	 rulestatementlist
{ after(grammarAccess.getStatementlistRule()); } 
	 EOF 
;

// Rule statementlist
rulestatementlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementlistAccess().getGroup()); }
		(rule__Statementlist__Group__0)
		{ after(grammarAccess.getStatementlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctionbody
entryRulefunctionbody
:
{ before(grammarAccess.getFunctionbodyRule()); }
	 rulefunctionbody
{ after(grammarAccess.getFunctionbodyRule()); } 
	 EOF 
;

// Rule functionbody
rulefunctionbody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionbodyAccess().getBlockParserRuleCall()); }
		ruleblock
		{ after(grammarAccess.getFunctionbodyAccess().getBlockParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypeassertion
entryRuletypeassertion
:
{ before(grammarAccess.getTypeassertionRule()); }
	 ruletypeassertion
{ after(grammarAccess.getTypeassertionRule()); } 
	 EOF 
;

// Rule typeassertion
ruletypeassertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeassertionAccess().getGroup()); }
		(rule__Typeassertion__Group__0)
		{ after(grammarAccess.getTypeassertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearguments
entryRulearguments
:
{ before(grammarAccess.getArgumentsRule()); }
	 rulearguments
{ after(grammarAccess.getArgumentsRule()); } 
	 EOF 
;

// Rule arguments
rulearguments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup()); }
		(rule__Arguments__Group__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpressionlist
entryRuleexpressionlist
:
{ before(grammarAccess.getExpressionlistRule()); }
	 ruleexpressionlist
{ after(grammarAccess.getExpressionlistRule()); } 
	 EOF 
;

// Rule expressionlist
ruleexpressionlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionlistAccess().getGroup()); }
		(rule__Expressionlist__Group__0)
		{ after(grammarAccess.getExpressionlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleselector
entryRuleselector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleselector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule selector
ruleselector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup()); }
		(rule__Selector__Group__0)
		{ after(grammarAccess.getSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefieldname
entryRulefieldname
:
{ before(grammarAccess.getFieldnameRule()); }
	 rulefieldname
{ after(grammarAccess.getFieldnameRule()); } 
	 EOF 
;

// Rule fieldname
rulefieldname 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldnameAccess().getIDENTIFIERTerminalRuleCall()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getFieldnameAccess().getIDENTIFIERTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleliteral
entryRuleliteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleliteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule literal
ruleliteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebasiclit
entryRulebasiclit
:
{ before(grammarAccess.getBasiclitRule()); }
	 rulebasiclit
{ after(grammarAccess.getBasiclitRule()); } 
	 EOF 
;

// Rule basiclit
rulebasiclit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasiclitAccess().getAlternatives()); }
		(rule__Basiclit__Alternatives)
		{ after(grammarAccess.getBasiclitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoperandname
entryRuleoperandname
:
{ before(grammarAccess.getOperandnameRule()); }
	 ruleoperandname
{ after(grammarAccess.getOperandnameRule()); } 
	 EOF 
;

// Rule operandname
ruleoperandname 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperandnameAccess().getAlternatives()); }
		(rule__Operandname__Alternatives)
		{ after(grammarAccess.getOperandnameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulequalified_ident
entryRulequalified_ident
:
{ before(grammarAccess.getQualified_identRule()); }
	 rulequalified_ident
{ after(grammarAccess.getQualified_identRule()); } 
	 EOF 
;

// Rule qualified_ident
rulequalified_ident 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualified_identAccess().getGroup()); }
		(rule__Qualified_ident__Group__0)
		{ after(grammarAccess.getQualified_identAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleslicetype
entryRuleslicetype
:
{ before(grammarAccess.getSlicetypeRule()); }
	 ruleslicetype
{ after(grammarAccess.getSlicetypeRule()); } 
	 EOF 
;

// Rule slicetype
ruleslicetype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSlicetypeAccess().getGroup()); }
		(rule__Slicetype__Group__0)
		{ after(grammarAccess.getSlicetypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepointertype
entryRulepointertype
:
{ before(grammarAccess.getPointertypeRule()); }
	 rulepointertype
{ after(grammarAccess.getPointertypeRule()); } 
	 EOF 
;

// Rule pointertype
rulepointertype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointertypeAccess().getGroup()); }
		(rule__Pointertype__Group__0)
		{ after(grammarAccess.getPointertypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebasetype
entryRulebasetype
:
{ before(grammarAccess.getBasetypeRule()); }
	 rulebasetype
{ after(grammarAccess.getBasetypeRule()); } 
	 EOF 
;

// Rule basetype
rulebasetype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasetypeAccess().getTypeParserRuleCall()); }
		ruletype
		{ after(grammarAccess.getBasetypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulechanneltype
entryRulechanneltype
:
{ before(grammarAccess.getChanneltypeRule()); }
	 rulechanneltype
{ after(grammarAccess.getChanneltypeRule()); } 
	 EOF 
;

// Rule channeltype
rulechanneltype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChanneltypeAccess().getGroup()); }
		(rule__Channeltype__Group__0)
		{ after(grammarAccess.getChanneltypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemaptype
entryRulemaptype
:
{ before(grammarAccess.getMaptypeRule()); }
	 rulemaptype
{ after(grammarAccess.getMaptypeRule()); } 
	 EOF 
;

// Rule maptype
rulemaptype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaptypeAccess().getGroup()); }
		(rule__Maptype__Group__0)
		{ after(grammarAccess.getMaptypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulekeytype
entryRulekeytype
:
{ before(grammarAccess.getKeytypeRule()); }
	 rulekeytype
{ after(grammarAccess.getKeytypeRule()); } 
	 EOF 
;

// Rule keytype
rulekeytype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeytypeAccess().getTypeParserRuleCall()); }
		ruletype
		{ after(grammarAccess.getKeytypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleelementtype
entryRuleelementtype
:
{ before(grammarAccess.getElementtypeRule()); }
	 ruleelementtype
{ after(grammarAccess.getElementtypeRule()); } 
	 EOF 
;

// Rule elementtype
ruleelementtype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementtypeAccess().getTypeParserRuleCall()); }
		ruletype
		{ after(grammarAccess.getElementtypeAccess().getTypeParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinterfacetype
entryRuleinterfacetype
:
{ before(grammarAccess.getInterfacetypeRule()); }
	 ruleinterfacetype
{ after(grammarAccess.getInterfacetypeRule()); } 
	 EOF 
;

// Rule interfacetype
ruleinterfacetype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfacetypeAccess().getGroup()); }
		(rule__Interfacetype__Group__0)
		{ after(grammarAccess.getInterfacetypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemethodspec
entryRulemethodspec
:
{ before(grammarAccess.getMethodspecRule()); }
	 rulemethodspec
{ after(grammarAccess.getMethodspecRule()); } 
	 EOF 
;

// Rule methodspec
rulemethodspec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodspecAccess().getAlternatives()); }
		(rule__Methodspec__Alternatives)
		{ after(grammarAccess.getMethodspecAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemethodname
entryRulemethodname
:
{ before(grammarAccess.getMethodnameRule()); }
	 rulemethodname
{ after(grammarAccess.getMethodnameRule()); } 
	 EOF 
;

// Rule methodname
rulemethodname 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodnameAccess().getIDENTIFIERTerminalRuleCall()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getMethodnameAccess().getIDENTIFIERTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinterfacetypename
entryRuleinterfacetypename
:
{ before(grammarAccess.getInterfacetypenameRule()); }
	 ruleinterfacetypename
{ after(grammarAccess.getInterfacetypenameRule()); } 
	 EOF 
;

// Rule interfacetypename
ruleinterfacetypename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfacetypenameAccess().getTypenameParserRuleCall()); }
		ruletypename
		{ after(grammarAccess.getInterfacetypenameAccess().getTypenameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunctiontype
entryRulefunctiontype
:
{ before(grammarAccess.getFunctiontypeRule()); }
	 rulefunctiontype
{ after(grammarAccess.getFunctiontypeRule()); } 
	 EOF 
;

// Rule functiontype
rulefunctiontype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctiontypeAccess().getGroup()); }
		(rule__Functiontype__Group__0)
		{ after(grammarAccess.getFunctiontypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesignature
entryRulesignature
:
{ before(grammarAccess.getSignatureRule()); }
	 rulesignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule signature
rulesignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleresult
entryRuleresult
:
{ before(grammarAccess.getResultRule()); }
	 ruleresult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule result
ruleresult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameters
entryRuleparameters
:
{ before(grammarAccess.getParametersRule()); }
	 ruleparameters
{ after(grammarAccess.getParametersRule()); } 
	 EOF 
;

// Rule parameters
ruleparameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParametersAccess().getGroup()); }
		(rule__Parameters__Group__0)
		{ after(grammarAccess.getParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterlist
entryRuleparameterlist
:
{ before(grammarAccess.getParameterlistRule()); }
	 ruleparameterlist
{ after(grammarAccess.getParameterlistRule()); } 
	 EOF 
;

// Rule parameterlist
ruleparameterlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterlistAccess().getGroup()); }
		(rule__Parameterlist__Group__0)
		{ after(grammarAccess.getParameterlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterdecl
entryRuleparameterdecl
:
{ before(grammarAccess.getParameterdeclRule()); }
	 ruleparameterdecl
{ after(grammarAccess.getParameterdeclRule()); } 
	 EOF 
;

// Rule parameterdecl
ruleparameterdecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterdeclAccess().getGroup()); }
		(rule__Parameterdecl__Group__0)
		{ after(grammarAccess.getParameterdeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifierlist
entryRuleidentifierlist
:
{ before(grammarAccess.getIdentifierlistRule()); }
	 ruleidentifierlist
{ after(grammarAccess.getIdentifierlistRule()); } 
	 EOF 
;

// Rule identifierlist
ruleidentifierlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierlistAccess().getGroup()); }
		(rule__Identifierlist__Group__0)
		{ after(grammarAccess.getIdentifierlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestructtype
entryRulestructtype
:
{ before(grammarAccess.getStructtypeRule()); }
	 rulestructtype
{ after(grammarAccess.getStructtypeRule()); } 
	 EOF 
;

// Rule structtype
rulestructtype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructtypeAccess().getGroup()); }
		(rule__Structtype__Group__0)
		{ after(grammarAccess.getStructtypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefielddecl
entryRulefielddecl
:
{ before(grammarAccess.getFielddeclRule()); }
	 rulefielddecl
{ after(grammarAccess.getFielddeclRule()); } 
	 EOF 
;

// Rule fielddecl
rulefielddecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFielddeclAccess().getGroup()); }
		(rule__Fielddecl__Group__0)
		{ after(grammarAccess.getFielddeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleembeddedfield
entryRuleembeddedfield
:
{ before(grammarAccess.getEmbeddedfieldRule()); }
	 ruleembeddedfield
{ after(grammarAccess.getEmbeddedfieldRule()); } 
	 EOF 
;

// Rule embeddedfield
ruleembeddedfield 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmbeddedfieldAccess().getGroup()); }
		(rule__Embeddedfield__Group__0)
		{ after(grammarAccess.getEmbeddedfieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype
entryRuletype
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypelit
entryRuletypelit
:
{ before(grammarAccess.getTypelitRule()); }
	 ruletypelit
{ after(grammarAccess.getTypelitRule()); } 
	 EOF 
;

// Rule typelit
ruletypelit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypelitAccess().getAlternatives()); }
		(rule__Typelit__Alternatives)
		{ after(grammarAccess.getTypelitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulearraytype
entryRulearraytype
:
{ before(grammarAccess.getArraytypeRule()); }
	 rulearraytype
{ after(grammarAccess.getArraytypeRule()); } 
	 EOF 
;

// Rule arraytype
rulearraytype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArraytypeAccess().getGroup()); }
		(rule__Arraytype__Group__0)
		{ after(grammarAccess.getArraytypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletag
entryRuletag
:
{ before(grammarAccess.getTagRule()); }
	 ruletag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule tag
ruletag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getString_litParserRuleCall()); }
		rulestring_lit
		{ after(grammarAccess.getTagAccess().getString_litParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletypename
entryRuletypename
:
{ before(grammarAccess.getTypenameRule()); }
	 ruletypename
{ after(grammarAccess.getTypenameRule()); } 
	 EOF 
;

// Rule typename
ruletypename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypenameAccess().getAlternatives()); }
		(rule__Typename__Alternatives)
		{ after(grammarAccess.getTypenameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepackagename
entryRulepackagename
:
{ before(grammarAccess.getPackagenameRule()); }
	 rulepackagename
{ after(grammarAccess.getPackagenameRule()); } 
	 EOF 
;

// Rule packagename
rulepackagename 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackagenameAccess().getIDENTIFIERTerminalRuleCall()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getPackagenameAccess().getIDENTIFIERTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestring_lit
entryRulestring_lit
:
{ before(grammarAccess.getString_litRule()); }
	 rulestring_lit
{ after(grammarAccess.getString_litRule()); } 
	 EOF 
;

// Rule string_lit
rulestring_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getString_litAccess().getAlternatives()); }
		(rule__String_lit__Alternatives)
		{ after(grammarAccess.getString_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleraw_string_lit
entryRuleraw_string_lit
:
{ before(grammarAccess.getRaw_string_litRule()); }
	 ruleraw_string_lit
{ after(grammarAccess.getRaw_string_litRule()); } 
	 EOF 
;

// Rule raw_string_lit
ruleraw_string_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRaw_string_litAccess().getGroup()); }
		(rule__Raw_string_lit__Group__0)
		{ after(grammarAccess.getRaw_string_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinterpreted_string_lit
entryRuleinterpreted_string_lit
:
{ before(grammarAccess.getInterpreted_string_litRule()); }
	 ruleinterpreted_string_lit
{ after(grammarAccess.getInterpreted_string_litRule()); } 
	 EOF 
;

// Rule interpreted_string_lit
ruleinterpreted_string_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
		(rule__Interpreted_string_lit__Group__0)
		{ after(grammarAccess.getInterpreted_string_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerune_lit
entryRulerune_lit
:
{ before(grammarAccess.getRune_litRule()); }
	 rulerune_lit
{ after(grammarAccess.getRune_litRule()); } 
	 EOF 
;

// Rule rune_lit
rulerune_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRune_litAccess().getGroup()); }
		(rule__Rune_lit__Group__0)
		{ after(grammarAccess.getRune_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleint_lit
entryRuleint_lit
:
{ before(grammarAccess.getInt_litRule()); }
	 ruleint_lit
{ after(grammarAccess.getInt_litRule()); } 
	 EOF 
;

// Rule int_lit
ruleint_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInt_litAccess().getAlternatives()); }
		(rule__Int_lit__Alternatives)*
		{ after(grammarAccess.getInt_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulehex_lit
entryRulehex_lit
:
{ before(grammarAccess.getHex_litRule()); }
	 rulehex_lit
{ after(grammarAccess.getHex_litRule()); } 
	 EOF 
;

// Rule hex_lit
rulehex_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHex_litAccess().getGroup()); }
		(rule__Hex_lit__Group__0)
		{ after(grammarAccess.getHex_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimaginary_lit
entryRuleimaginary_lit
:
{ before(grammarAccess.getImaginary_litRule()); }
	 ruleimaginary_lit
{ after(grammarAccess.getImaginary_litRule()); } 
	 EOF 
;

// Rule imaginary_lit
ruleimaginary_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImaginary_litAccess().getGroup()); }
		(rule__Imaginary_lit__Group__0)
		{ after(grammarAccess.getImaginary_litAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefloat_lit
entryRulefloat_lit
:
{ before(grammarAccess.getFloat_litRule()); }
	 rulefloat_lit
{ after(grammarAccess.getFloat_litRule()); } 
	 EOF 
;

// Rule float_lit
rulefloat_lit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloat_litAccess().getAlternatives()); }
		(rule__Float_lit__Alternatives)
		{ after(grammarAccess.getFloat_litAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexponent
entryRuleexponent
:
{ before(grammarAccess.getExponentRule()); }
	 ruleexponent
{ after(grammarAccess.getExponentRule()); } 
	 EOF 
;

// Rule exponent
ruleexponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExponentAccess().getGroup()); }
		(rule__Exponent__Group__0)
		{ after(grammarAccess.getExponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledecimals
entryRuledecimals
:
{ before(grammarAccess.getDecimalsRule()); }
	 ruledecimals
{ after(grammarAccess.getDecimalsRule()); } 
	 EOF 
;

// Rule decimals
ruledecimals 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall()); }
			(RULE_DECIMAL_DIGIT)
			{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall()); }
		)
		(
			{ before(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall()); }
			(RULE_DECIMAL_DIGIT)*
			{ after(grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebyte_value
entryRulebyte_value
:
{ before(grammarAccess.getByte_valueRule()); }
	 rulebyte_value
{ after(grammarAccess.getByte_valueRule()); } 
	 EOF 
;

// Rule byte_value
rulebyte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getByte_valueAccess().getAlternatives()); }
		(rule__Byte_value__Alternatives)
		{ after(grammarAccess.getByte_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulehex_byte_value
entryRulehex_byte_value
:
{ before(grammarAccess.getHex_byte_valueRule()); }
	 rulehex_byte_value
{ after(grammarAccess.getHex_byte_valueRule()); } 
	 EOF 
;

// Rule hex_byte_value
rulehex_byte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHex_byte_valueAccess().getGroup()); }
		(rule__Hex_byte_value__Group__0)
		{ after(grammarAccess.getHex_byte_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoctal_byte_value
entryRuleoctal_byte_value
:
{ before(grammarAccess.getOctal_byte_valueRule()); }
	 ruleoctal_byte_value
{ after(grammarAccess.getOctal_byte_valueRule()); } 
	 EOF 
;

// Rule octal_byte_value
ruleoctal_byte_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOctal_byte_valueAccess().getGroup()); }
		(rule__Octal_byte_value__Group__0)
		{ after(grammarAccess.getOctal_byte_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunicode_value
entryRuleunicode_value
:
{ before(grammarAccess.getUnicode_valueRule()); }
	 ruleunicode_value
{ after(grammarAccess.getUnicode_valueRule()); } 
	 EOF 
;

// Rule unicode_value
ruleunicode_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnicode_valueAccess().getAlternatives()); }
		(rule__Unicode_value__Alternatives)
		{ after(grammarAccess.getUnicode_valueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebig_u_value
entryRulebig_u_value
:
{ before(grammarAccess.getBig_u_valueRule()); }
	 rulebig_u_value
{ after(grammarAccess.getBig_u_valueRule()); } 
	 EOF 
;

// Rule big_u_value
rulebig_u_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBig_u_valueAccess().getGroup()); }
		(rule__Big_u_value__Group__0)
		{ after(grammarAccess.getBig_u_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelittle_u_value
entryRulelittle_u_value
:
{ before(grammarAccess.getLittle_u_valueRule()); }
	 rulelittle_u_value
{ after(grammarAccess.getLittle_u_valueRule()); } 
	 EOF 
;

// Rule little_u_value
rulelittle_u_value 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLittle_u_valueAccess().getGroup()); }
		(rule__Little_u_value__Group__0)
		{ after(grammarAccess.getLittle_u_valueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportdeclAccess().getImportspecParserRuleCall_1_0()); }
		ruleimportspec
		{ after(grammarAccess.getImportdeclAccess().getImportspecParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportdeclAccess().getGroup_1_1()); }
		(rule__Importdecl__Group_1_1__0)
		{ after(grammarAccess.getImportdeclAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importspec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportspecAccess().getFullStopKeyword_0_0()); }
		'.'
		{ after(grammarAccess.getImportspecAccess().getFullStopKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportspecAccess().getPackagenameParserRuleCall_0_1()); }
		rulepackagename
		{ after(grammarAccess.getImportspecAccess().getPackagenameParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unaryexpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryexprAccess().getPrimaryexprAssignment_0()); }
		(rule__Unaryexpr__PrimaryexprAssignment_0)
		{ after(grammarAccess.getUnaryexprAccess().getPrimaryexprAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryexprAccess().getGroup_1()); }
		(rule__Unaryexpr__Group_1__0)
		{ after(grammarAccess.getUnaryexprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getGroup_0()); }
		(rule__Primaryexpr__Group_0__0)
		{ after(grammarAccess.getPrimaryexprAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryexprAccess().getGroup_1()); }
		(rule__Primaryexpr__Group_1__0)
		{ after(grammarAccess.getPrimaryexprAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryexprAccess().getGroup_2()); }
		(rule__Primaryexpr__Group_2__0)
		{ after(grammarAccess.getPrimaryexprAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getGroup_0()); }
		(rule__Primaryexpraux__Group_0__0)
		{ after(grammarAccess.getPrimaryexprauxAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getGroup_1()); }
		(rule__Primaryexpraux__Group_1__0)
		{ after(grammarAccess.getPrimaryexprauxAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getGroup_2()); }
		(rule__Primaryexpraux__Group_2__0)
		{ after(grammarAccess.getPrimaryexprauxAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getGroup_3()); }
		(rule__Primaryexpraux__Group_3__0)
		{ after(grammarAccess.getPrimaryexprauxAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getGroup_4()); }
		(rule__Primaryexpraux__Group_4__0)
		{ after(grammarAccess.getPrimaryexprauxAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getGroup_5()); }
		(rule__Primaryexpraux__Group_5__0)
		{ after(grammarAccess.getPrimaryexprauxAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getGroup_4_0()); }
		(rule__Slice__Group_4_0__0)
		{ after(grammarAccess.getSliceAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getSliceAccess().getExpressionAssignment_4_1()); }
		(rule__Slice__ExpressionAssignment_4_1)?
		{ after(grammarAccess.getSliceAccess().getExpressionAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getGroup_0()); }
		(rule__Operand__Group_0__0)
		{ after(grammarAccess.getOperandAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getLiteralAssignment_1()); }
		(rule__Operand__LiteralAssignment_1)
		{ after(grammarAccess.getOperandAccess().getLiteralAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperandAccess().getOperandnameAssignment_2()); }
		(rule__Operand__OperandnameAssignment_2)
		{ after(grammarAccess.getOperandAccess().getOperandnameAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraltypeAccess().getStructtypeAssignment_0()); }
		(rule__Literaltype__StructtypeAssignment_0)
		{ after(grammarAccess.getLiteraltypeAccess().getStructtypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteraltypeAccess().getGroup_1()); }
		(rule__Literaltype__Group_1__0)
		{ after(grammarAccess.getLiteraltypeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteraltypeAccess().getSlicetypeAssignment_2()); }
		(rule__Literaltype__SlicetypeAssignment_2)
		{ after(grammarAccess.getLiteraltypeAccess().getSlicetypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteraltypeAccess().getMaptypeAssignment_3()); }
		(rule__Literaltype__MaptypeAssignment_3)
		{ after(grammarAccess.getLiteraltypeAccess().getMaptypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteraltypeAccess().getTypenameAssignment_4()); }
		(rule__Literaltype__TypenameAssignment_4)
		{ after(grammarAccess.getLiteraltypeAccess().getTypenameAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getGroup_0()); }
		(rule__Key__Group_0__0)
		{ after(grammarAccess.getKeyAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
		(rule__Key__ExpressionAssignment_1)
		{ after(grammarAccess.getKeyAccess().getExpressionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getKeyAccess().getLiteralvalueAssignment_2()); }
		(rule__Key__LiteralvalueAssignment_2)
		{ after(grammarAccess.getKeyAccess().getLiteralvalueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getExpressionParserRuleCall_0()); }
		ruleexpression
		{ after(grammarAccess.getElementAccess().getExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getLiteralvalueParserRuleCall_1()); }
		ruleliteralvalue
		{ after(grammarAccess.getElementAccess().getLiteralvalueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
		(rule__Statement__DeclarationAssignment_0)
		{ after(grammarAccess.getStatementAccess().getDeclarationAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLabeledstmtAssignment_1()); }
		(rule__Statement__LabeledstmtAssignment_1)
		{ after(grammarAccess.getStatementAccess().getLabeledstmtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSimplestmtAssignment_2()); }
		(rule__Statement__SimplestmtAssignment_2)
		{ after(grammarAccess.getStatementAccess().getSimplestmtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGotstmtAssignment_3()); }
		(rule__Statement__GotstmtAssignment_3)
		{ after(grammarAccess.getStatementAccess().getGotstmtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnstmtAssignment_4()); }
		(rule__Statement__ReturnstmtAssignment_4)
		{ after(grammarAccess.getStatementAccess().getReturnstmtAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakstmtAssignment_5()); }
		(rule__Statement__BreakstmtAssignment_5)
		{ after(grammarAccess.getStatementAccess().getBreakstmtAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getContinuestmtAssignment_6()); }
		(rule__Statement__ContinuestmtAssignment_6)
		{ after(grammarAccess.getStatementAccess().getContinuestmtAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGotostmtAssignment_7()); }
		(rule__Statement__GotostmtAssignment_7)
		{ after(grammarAccess.getStatementAccess().getGotostmtAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughstmtAssignment_8()); }
		(rule__Statement__FallthroughstmtAssignment_8)
		{ after(grammarAccess.getStatementAccess().getFallthroughstmtAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
		(rule__Statement__BlockAssignment_9)
		{ after(grammarAccess.getStatementAccess().getBlockAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfstmtAssignment_10()); }
		(rule__Statement__IfstmtAssignment_10)
		{ after(grammarAccess.getStatementAccess().getIfstmtAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchstmtAssignment_11()); }
		(rule__Statement__SwitchstmtAssignment_11)
		{ after(grammarAccess.getStatementAccess().getSwitchstmtAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectstmtAssignment_12()); }
		(rule__Statement__SelectstmtAssignment_12)
		{ after(grammarAccess.getStatementAccess().getSelectstmtAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForstmtAssignment_13()); }
		(rule__Statement__ForstmtAssignment_13)
		{ after(grammarAccess.getStatementAccess().getForstmtAssignment_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDeferstmtAssignment_14()); }
		(rule__Statement__DeferstmtAssignment_14)
		{ after(grammarAccess.getStatementAccess().getDeferstmtAssignment_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstdeclAssignment_0()); }
		(rule__Declaration__ConstdeclAssignment_0)
		{ after(grammarAccess.getDeclarationAccess().getConstdeclAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getTypedeclAssignment_1()); }
		(rule__Declaration__TypedeclAssignment_1)
		{ after(grammarAccess.getDeclarationAccess().getTypedeclAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeclarationAccess().getVardeclAssignment_2()); }
		(rule__Declaration__VardeclAssignment_2)
		{ after(grammarAccess.getDeclarationAccess().getVardeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVardeclAccess().getVarspecAssignment_2_0()); }
		(rule__Vardecl__VarspecAssignment_2_0)
		{ after(grammarAccess.getVardeclAccess().getVarspecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVardeclAccess().getGroup_2_1()); }
		(rule__Vardecl__Group_2_1__0)
		{ after(grammarAccess.getVardeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarspecAccess().getGroup_1_0()); }
		(rule__Varspec__Group_1_0__0)
		{ after(grammarAccess.getVarspecAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarspecAccess().getGroup_1_1()); }
		(rule__Varspec__Group_1_1__0)
		{ after(grammarAccess.getVarspecAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedeclAccess().getTypespecAssignment_2_0()); }
		(rule__Typedecl__TypespecAssignment_2_0)
		{ after(grammarAccess.getTypedeclAccess().getTypespecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypedeclAccess().getGroup_2_1()); }
		(rule__Typedecl__Group_2_1__0)
		{ after(grammarAccess.getTypedeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typespecaux__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypespecauxAccess().getTypedefParserRuleCall_0()); }
		ruletypedef
		{ after(grammarAccess.getTypespecauxAccess().getTypedefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypespecauxAccess().getAliasdeclParserRuleCall_1()); }
		rulealiasdecl
		{ after(grammarAccess.getTypespecauxAccess().getAliasdeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topleveldecl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopleveldeclAccess().getDeclarationParserRuleCall_0()); }
		ruledeclaration
		{ after(grammarAccess.getTopleveldeclAccess().getDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTopleveldeclAccess().getFunctiondeclAssignment_1()); }
		(rule__Topleveldecl__FunctiondeclAssignment_1)
		{ after(grammarAccess.getTopleveldeclAccess().getFunctiondeclAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTopleveldeclAccess().getMethoddeclAssignment_2()); }
		(rule__Topleveldecl__MethoddeclAssignment_2)
		{ after(grammarAccess.getTopleveldeclAccess().getMethoddeclAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstdeclAccess().getConstspecAssignment_2_0()); }
		(rule__Constdecl__ConstspecAssignment_2_0)
		{ after(grammarAccess.getConstdeclAccess().getConstspecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstdeclAccess().getGroup_2_1()); }
		(rule__Constdecl__Group_2_1__0)
		{ after(grammarAccess.getConstdeclAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simplestmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimplestmtAccess().getEmptystmtAssignment_0()); }
		(rule__Simplestmt__EmptystmtAssignment_0)
		{ after(grammarAccess.getSimplestmtAccess().getEmptystmtAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimplestmtAccess().getExpressionstmtAssignment_1()); }
		(rule__Simplestmt__ExpressionstmtAssignment_1)
		{ after(grammarAccess.getSimplestmtAccess().getExpressionstmtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimplestmtAccess().getSendstmtAssignment_2()); }
		(rule__Simplestmt__SendstmtAssignment_2)
		{ after(grammarAccess.getSimplestmtAccess().getSendstmtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSimplestmtAccess().getIncdecstmtAssignment_3()); }
		(rule__Simplestmt__IncdecstmtAssignment_3)
		{ after(grammarAccess.getSimplestmtAccess().getIncdecstmtAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getSimplestmtAccess().getAssignmentAssignment_4()); }
		(rule__Simplestmt__AssignmentAssignment_4)
		{ after(grammarAccess.getSimplestmtAccess().getAssignmentAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getSimplestmtAccess().getShortvardeclAssignment_5()); }
		(rule__Simplestmt__ShortvardeclAssignment_5)
		{ after(grammarAccess.getSimplestmtAccess().getShortvardeclAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommcaseAccess().getGroup_0()); }
		(rule__Commcase__Group_0__0)
		{ after(grammarAccess.getCommcaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommcaseAccess().getGroup_1()); }
		(rule__Commcase__Group_1__0)
		{ after(grammarAccess.getCommcaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommcaseAccess().getSendstmtAssignment_0_1_0()); }
		(rule__Commcase__SendstmtAssignment_0_1_0)
		{ after(grammarAccess.getCommcaseAccess().getSendstmtAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommcaseAccess().getRecvstmtAssignment_0_1_1()); }
		(rule__Commcase__RecvstmtAssignment_0_1_1)
		{ after(grammarAccess.getCommcaseAccess().getRecvstmtAssignment_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvstmtAccess().getGroup_0_0()); }
		(rule__Recvstmt__Group_0_0__0)
		{ after(grammarAccess.getRecvstmtAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRecvstmtAccess().getGroup_0_1()); }
		(rule__Recvstmt__Group_0_1__0)
		{ after(grammarAccess.getRecvstmtAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forstmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForstmtAccess().getConditionParserRuleCall_1_0()); }
		rulecondition
		{ after(grammarAccess.getForstmtAccess().getConditionParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getForstmtAccess().getForclauseParserRuleCall_1_1()); }
		ruleforclause
		{ after(grammarAccess.getForstmtAccess().getForclauseParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getForstmtAccess().getRangeclauseParserRuleCall_1_2()); }
		rulerangeclause
		{ after(grammarAccess.getForstmtAccess().getRangeclauseParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeclauseAccess().getGroup_0_0()); }
		(rule__Rangeclause__Group_0_0__0)
		{ after(grammarAccess.getRangeclauseAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeclauseAccess().getGroup_0_1()); }
		(rule__Rangeclause__Group_0_1__0)
		{ after(grammarAccess.getRangeclauseAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switchstmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchstmtAccess().getExprswitchstmtAssignment_0()); }
		(rule__Switchstmt__ExprswitchstmtAssignment_0)
		{ after(grammarAccess.getSwitchstmtAccess().getExprswitchstmtAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchstmtAccess().getTypeswitchstmtAssignment_1()); }
		(rule__Switchstmt__TypeswitchstmtAssignment_1)
		{ after(grammarAccess.getSwitchstmtAccess().getTypeswitchstmtAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprswitchcaseAccess().getGroup_0()); }
		(rule__Exprswitchcase__Group_0__0)
		{ after(grammarAccess.getExprswitchcaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprswitchcaseAccess().getGroup_1()); }
		(rule__Exprswitchcase__Group_1__0)
		{ after(grammarAccess.getExprswitchcaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeswitchcaseAccess().getGroup_0()); }
		(rule__Typeswitchcase__Group_0__0)
		{ after(grammarAccess.getTypeswitchcaseAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeswitchcaseAccess().getGroup_1()); }
		(rule__Typeswitchcase__Group_1__0)
		{ after(grammarAccess.getTypeswitchcaseAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfstmtAccess().getIfstmtAssignment_4_1_0()); }
		(rule__Ifstmt__IfstmtAssignment_4_1_0)
		{ after(grammarAccess.getIfstmtAccess().getIfstmtAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfstmtAccess().getBlockAssignment_4_1_1()); }
		(rule__Ifstmt__BlockAssignment_4_1_1)
		{ after(grammarAccess.getIfstmtAccess().getBlockAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incdecstmt__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncdecstmtAccess().getPlusSignPlusSignKeyword_1_0()); }
		'++'
		{ after(grammarAccess.getIncdecstmtAccess().getPlusSignPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncdecstmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
		'--'
		{ after(grammarAccess.getIncdecstmtAccess().getHyphenMinusHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_0()); }
		(rule__Arguments__ExpressionlistAssignment_2_0_0)
		{ after(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
		(rule__Arguments__Group_2_0_1__0)
		{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasiclitAssignment_0()); }
		(rule__Literal__BasiclitAssignment_0)
		{ after(grammarAccess.getLiteralAccess().getBasiclitAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCompositelitAssignment_1()); }
		(rule__Literal__CompositelitAssignment_1)
		{ after(grammarAccess.getLiteralAccess().getCompositelitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionlitAssignment_2()); }
		(rule__Literal__FunctionlitAssignment_2)
		{ after(grammarAccess.getLiteralAccess().getFunctionlitAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Basiclit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasiclitAccess().getInt_litParserRuleCall_0()); }
		ruleint_lit
		{ after(grammarAccess.getBasiclitAccess().getInt_litParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasiclitAccess().getFloat_litParserRuleCall_1()); }
		rulefloat_lit
		{ after(grammarAccess.getBasiclitAccess().getFloat_litParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasiclitAccess().getImaginary_litParserRuleCall_2()); }
		ruleimaginary_lit
		{ after(grammarAccess.getBasiclitAccess().getImaginary_litParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasiclitAccess().getRune_litParserRuleCall_3()); }
		rulerune_lit
		{ after(grammarAccess.getBasiclitAccess().getRune_litParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasiclitAccess().getString_litParserRuleCall_4()); }
		rulestring_lit
		{ after(grammarAccess.getBasiclitAccess().getString_litParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operandname__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandnameAccess().getGroup_0()); }
		(rule__Operandname__Group_0__0)
		{ after(grammarAccess.getOperandnameAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperandnameAccess().getIDENTIFIERTerminalRuleCall_1()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getOperandnameAccess().getIDENTIFIERTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChanneltypeAccess().getChanKeyword_0_0()); }
		'chan'
		{ after(grammarAccess.getChanneltypeAccess().getChanKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getChanneltypeAccess().getGroup_0_1()); }
		(rule__Channeltype__Group_0_1__0)
		{ after(grammarAccess.getChanneltypeAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getChanneltypeAccess().getGroup_0_2()); }
		(rule__Channeltype__Group_0_2__0)
		{ after(grammarAccess.getChanneltypeAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodspec__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodspecAccess().getGroup_0()); }
		(rule__Methodspec__Group_0__0)
		{ after(grammarAccess.getMethodspecAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodspecAccess().getInterfacetypenameAssignment_1()); }
		(rule__Methodspec__InterfacetypenameAssignment_1)
		{ after(grammarAccess.getMethodspecAccess().getInterfacetypenameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getParametersParserRuleCall_0()); }
		(ruleparameters)
		{ after(grammarAccess.getResultAccess().getParametersParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getTypeParserRuleCall_1()); }
		ruletype
		{ after(grammarAccess.getResultAccess().getTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFielddeclAccess().getGroup_0_0()); }
		(rule__Fielddecl__Group_0_0__0)
		{ after(grammarAccess.getFielddeclAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFielddeclAccess().getEmbeddedfieldAssignment_0_1()); }
		(rule__Fielddecl__EmbeddedfieldAssignment_0_1)
		{ after(grammarAccess.getFielddeclAccess().getEmbeddedfieldAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypenameAssignment_0()); }
		(rule__Type__TypenameAssignment_0)
		{ after(grammarAccess.getTypeAccess().getTypenameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypelitAssignment_1()); }
		(rule__Type__TypelitAssignment_1)
		{ after(grammarAccess.getTypeAccess().getTypelitAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getGroup_2()); }
		(rule__Type__Group_2__0)
		{ after(grammarAccess.getTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getArraytypeAssignment_0()); }
		(rule__Typelit__ArraytypeAssignment_0)
		{ after(grammarAccess.getTypelitAccess().getArraytypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypelitAccess().getStructtypeAssignment_1()); }
		(rule__Typelit__StructtypeAssignment_1)
		{ after(grammarAccess.getTypelitAccess().getStructtypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypelitAccess().getPointertypeAssignment_2()); }
		(rule__Typelit__PointertypeAssignment_2)
		{ after(grammarAccess.getTypelitAccess().getPointertypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypelitAccess().getFunctiontypeAssignment_3()); }
		(rule__Typelit__FunctiontypeAssignment_3)
		{ after(grammarAccess.getTypelitAccess().getFunctiontypeAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypelitAccess().getInterfacetypeAssignment_4()); }
		(rule__Typelit__InterfacetypeAssignment_4)
		{ after(grammarAccess.getTypelitAccess().getInterfacetypeAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypelitAccess().getSlicetypeAssignment_5()); }
		(rule__Typelit__SlicetypeAssignment_5)
		{ after(grammarAccess.getTypelitAccess().getSlicetypeAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypelitAccess().getMaptypeAssignment_6()); }
		(rule__Typelit__MaptypeAssignment_6)
		{ after(grammarAccess.getTypelitAccess().getMaptypeAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getTypelitAccess().getChanneltypeAssignment_7()); }
		(rule__Typelit__ChanneltypeAssignment_7)
		{ after(grammarAccess.getTypelitAccess().getChanneltypeAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typename__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypenameAccess().getGroup_0()); }
		(rule__Typename__Group_0__0)
		{ after(grammarAccess.getTypenameAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypenameAccess().getPackagenameParserRuleCall_1()); }
		rulepackagename
		{ after(grammarAccess.getTypenameAccess().getPackagenameParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__String_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getString_litAccess().getRaw_string_litParserRuleCall_0()); }
		ruleraw_string_lit
		{ after(grammarAccess.getString_litAccess().getRaw_string_litParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getString_litAccess().getInterpreted_string_litParserRuleCall_1()); }
		ruleinterpreted_string_lit
		{ after(grammarAccess.getString_litAccess().getInterpreted_string_litParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRaw_string_litAccess().getLETTERTerminalRuleCall_1_0()); }
		RULE_LETTER
		{ after(grammarAccess.getRaw_string_litAccess().getLETTERTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRaw_string_litAccess().getDECIMAL_DIGITTerminalRuleCall_1_1()); }
		RULE_DECIMAL_DIGIT
		{ after(grammarAccess.getRaw_string_litAccess().getDECIMAL_DIGITTerminalRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getRaw_string_litAccess().getNKeyword_1_2()); }
		'\\n'
		{ after(grammarAccess.getRaw_string_litAccess().getNKeyword_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0()); }
		ruleunicode_value
		{ after(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
		rulebyte_value
		{ after(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRune_litAccess().getUnicode_valueParserRuleCall_1_0()); }
		ruleunicode_value
		{ after(grammarAccess.getRune_litAccess().getUnicode_valueParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRune_litAccess().getByte_valueParserRuleCall_1_1()); }
		rulebyte_value
		{ after(grammarAccess.getRune_litAccess().getByte_valueParserRuleCall_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Int_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInt_litAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
		RULE_DECIMAL_DIGIT
		{ after(grammarAccess.getInt_litAccess().getDECIMAL_DIGITTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_1()); }
		rulehex_lit
		{ after(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHex_litAccess().getXKeyword_1_0()); }
		'x'
		{ after(grammarAccess.getHex_litAccess().getXKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getHex_litAccess().getXKeyword_1_1()); }
		'X'
		{ after(grammarAccess.getHex_litAccess().getXKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImaginary_litAccess().getDecimalsParserRuleCall_0_0()); }
		ruledecimals
		{ after(grammarAccess.getImaginary_litAccess().getDecimalsParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImaginary_litAccess().getFloat_litParserRuleCall_0_1()); }
		rulefloat_lit
		{ after(grammarAccess.getImaginary_litAccess().getFloat_litParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_0()); }
		(rule__Float_lit__Group_0__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_1()); }
		(rule__Float_lit__Group_1__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getFloat_litAccess().getGroup_2()); }
		(rule__Float_lit__Group_2__0)
		{ after(grammarAccess.getFloat_litAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
		'e'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
		'E'
		{ after(grammarAccess.getExponentAccess().getEKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
		'+'
		{ after(grammarAccess.getExponentAccess().getPlusSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
		'-'
		{ after(grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Byte_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0()); }
		ruleoctal_byte_value
		{ after(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1()); }
		rulehex_byte_value
		{ after(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unicode_value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnicode_valueAccess().getAlternatives_0()); }
		(rule__Unicode_value__Alternatives_0)
		{ after(grammarAccess.getUnicode_valueAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1()); }
		rulelittle_u_value
		{ after(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2()); }
		rulebig_u_value
		{ after(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getESCAPED_CHARTerminalRuleCall_3()); }
		RULE_ESCAPED_CHAR
		{ after(grammarAccess.getUnicode_valueAccess().getESCAPED_CHARTerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unicode_value__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0_0()); }
		RULE_LETTER
		{ after(grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnicode_valueAccess().getDECIMAL_DIGITTerminalRuleCall_0_1()); }
		RULE_DECIMAL_DIGIT
		{ after(grammarAccess.getUnicode_valueAccess().getDECIMAL_DIGITTerminalRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importdecl__Group__0__Impl
	rule__Importdecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportdeclAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportdeclAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importdecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportdeclAccess().getAlternatives_1()); }
	(rule__Importdecl__Alternatives_1)
	{ after(grammarAccess.getImportdeclAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Importdecl__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importdecl__Group_1_1__0__Impl
	rule__Importdecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportdeclAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getImportdeclAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importdecl__Group_1_1__1__Impl
	rule__Importdecl__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportdeclAccess().getGroup_1_1_1()); }
	(rule__Importdecl__Group_1_1_1__0)*
	{ after(grammarAccess.getImportdeclAccess().getGroup_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importdecl__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportdeclAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getImportdeclAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Importdecl__Group_1_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importdecl__Group_1_1_1__0__Impl
	rule__Importdecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportdeclAccess().getImportspecParserRuleCall_1_1_1_0()); }
	ruleimportspec
	{ after(grammarAccess.getImportdeclAccess().getImportspecParserRuleCall_1_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importdecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Importdecl__Group_1_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportdeclAccess().getSemicolonKeyword_1_1_1_1()); }
	';'
	{ after(grammarAccess.getImportdeclAccess().getSemicolonKeyword_1_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Importspec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importspec__Group__0__Impl
	rule__Importspec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Importspec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportspecAccess().getAlternatives_0()); }
	(rule__Importspec__Alternatives_0)?
	{ after(grammarAccess.getImportspecAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Importspec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Importspec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Importspec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportspecAccess().getImportpathParserRuleCall_1()); }
	ruleimportpath
	{ after(grammarAccess.getImportspecAccess().getImportpathParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Packageclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Packageclause__Group__0__Impl
	rule__Packageclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Packageclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageclauseAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageclauseAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Packageclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Packageclause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Packageclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageclauseAccess().getPackagenameParserRuleCall_1()); }
	rulepackagename
	{ after(grammarAccess.getPackageclauseAccess().getPackagenameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getUnaryexprParserRuleCall_0()); }
	ruleunaryexpr
	{ after(grammarAccess.getExpressionAccess().getUnaryexprParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionauxAssignment_1()); }
	(rule__Expression__ExpressionauxAssignment_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionauxAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expressionaux__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expressionaux__Group__0__Impl
	rule__Expressionaux__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionauxAccess().getExpressionAssignment_0()); }
	(rule__Expressionaux__ExpressionAssignment_0)
	{ after(grammarAccess.getExpressionauxAccess().getExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expressionaux__Group__1__Impl
	rule__Expressionaux__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionauxAccess().getBINARY_OPAssignment_1()); }
	(rule__Expressionaux__BINARY_OPAssignment_1)
	{ after(grammarAccess.getExpressionauxAccess().getBINARY_OPAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expressionaux__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionauxAccess().getExpressionAssignment_2()); }
	(rule__Expressionaux__ExpressionAssignment_2)
	{ after(grammarAccess.getExpressionauxAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unaryexpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unaryexpr__Group_1__0__Impl
	rule__Unaryexpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unaryexpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryexprAccess().getUNARY_OPAssignment_1_0()); }
	(rule__Unaryexpr__UNARY_OPAssignment_1_0)
	{ after(grammarAccess.getUnaryexprAccess().getUNARY_OPAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unaryexpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unaryexpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unaryexpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryexprAccess().getUnaryexprAssignment_1_1()); }
	(rule__Unaryexpr__UnaryexprAssignment_1_1)
	{ after(grammarAccess.getUnaryexprAccess().getUnaryexprAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpr__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpr__Group_0__0__Impl
	rule__Primaryexpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprAccess().getOperandAssignment_0_0()); }
	(rule__Primaryexpr__OperandAssignment_0_0)
	{ after(grammarAccess.getPrimaryexprAccess().getOperandAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_0_1()); }
	(rule__Primaryexpr__PrimaryexprauxAssignment_0_1)
	{ after(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpr__Group_1__0__Impl
	rule__Primaryexpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprAccess().getConversionAssignment_1_0()); }
	(rule__Primaryexpr__ConversionAssignment_1_0)
	{ after(grammarAccess.getPrimaryexprAccess().getConversionAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_1_1()); }
	(rule__Primaryexpr__PrimaryexprauxAssignment_1_1)
	{ after(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpr__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpr__Group_2__0__Impl
	rule__Primaryexpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprAccess().getMethodexprAssignment_2_0()); }
	(rule__Primaryexpr__MethodexprAssignment_2_0)
	{ after(grammarAccess.getPrimaryexprAccess().getMethodexprAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_2_1()); }
	(rule__Primaryexpr__PrimaryexprauxAssignment_2_1)
	{ after(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpraux__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_0__0__Impl
	rule__Primaryexpraux__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getSelectorAssignment_0_0()); }
	(rule__Primaryexpraux__SelectorAssignment_0_0)
	{ after(grammarAccess.getPrimaryexprauxAccess().getSelectorAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_0_1()); }
	(rule__Primaryexpraux__PrimaryexprauxAssignment_0_1)
	{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpraux__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_1__0__Impl
	rule__Primaryexpraux__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getIndexAssignment_1_0()); }
	(rule__Primaryexpraux__IndexAssignment_1_0)
	{ after(grammarAccess.getPrimaryexprauxAccess().getIndexAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_1_1()); }
	(rule__Primaryexpraux__PrimaryexprauxAssignment_1_1)
	{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpraux__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_2__0__Impl
	rule__Primaryexpraux__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getSliceAssignment_2_0()); }
	(rule__Primaryexpraux__SliceAssignment_2_0)
	{ after(grammarAccess.getPrimaryexprauxAccess().getSliceAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_2_1()); }
	(rule__Primaryexpraux__PrimaryexprauxAssignment_2_1)
	{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpraux__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_3__0__Impl
	rule__Primaryexpraux__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getTypeassertionAssignment_3_0()); }
	(rule__Primaryexpraux__TypeassertionAssignment_3_0)
	{ after(grammarAccess.getPrimaryexprauxAccess().getTypeassertionAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_3_1()); }
	(rule__Primaryexpraux__PrimaryexprauxAssignment_3_1)
	{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpraux__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_4__0__Impl
	rule__Primaryexpraux__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getArgumentsAssignment_4_0()); }
	(rule__Primaryexpraux__ArgumentsAssignment_4_0)
	{ after(grammarAccess.getPrimaryexprauxAccess().getArgumentsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_4_1()); }
	(rule__Primaryexpraux__PrimaryexprauxAssignment_4_1)
	{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primaryexpraux__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_5__0__Impl
	rule__Primaryexpraux__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAction_5_0()); }
	()
	{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primaryexpraux__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryexprauxAccess().getWSAssignment_5_1()); }
	(rule__Primaryexpraux__WSAssignment_5_1)
	{ after(grammarAccess.getPrimaryexprauxAccess().getWSAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Index__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__0__Impl
	rule__Slice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getSliceAction_0()); }
	()
	{ after(grammarAccess.getSliceAccess().getSliceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__1__Impl
	rule__Slice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getSliceAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__2__Impl
	rule__Slice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_2()); }
	(rule__Slice__ExpressionAssignment_2)?
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__3__Impl
	rule__Slice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__4__Impl
	rule__Slice__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getAlternatives_4()); }
	(rule__Slice__Alternatives_4)
	{ after(grammarAccess.getSliceAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getSliceAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_4_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getGroup_4_0_0()); }
	(rule__Slice__Group_4_0_0__0)
	{ after(grammarAccess.getSliceAccess().getGroup_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slice__Group_4_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_4_0_0__0__Impl
	rule__Slice__Group_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_4_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_4_0_0_0()); }
	(rule__Slice__ExpressionAssignment_4_0_0_0)
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_4_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_4_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_4_0_0__1__Impl
	rule__Slice__Group_4_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_4_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getColonKeyword_4_0_0_1()); }
	':'
	{ after(grammarAccess.getSliceAccess().getColonKeyword_4_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_4_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slice__Group_4_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__Group_4_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSliceAccess().getExpressionAssignment_4_0_0_2()); }
	(rule__Slice__ExpressionAssignment_4_0_0_2)
	{ after(grammarAccess.getSliceAccess().getExpressionAssignment_4_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Methodexpr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methodexpr__Group__0__Impl
	rule__Methodexpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodexpr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodexprAccess().getReceivertypeAssignment_0()); }
	(rule__Methodexpr__ReceivertypeAssignment_0)
	{ after(grammarAccess.getMethodexprAccess().getReceivertypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodexpr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methodexpr__Group__1__Impl
	rule__Methodexpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodexpr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodexprAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getMethodexprAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodexpr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methodexpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodexpr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodexprAccess().getMethodnameAssignment_2()); }
	(rule__Methodexpr__MethodnameAssignment_2)
	{ after(grammarAccess.getMethodexprAccess().getMethodnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conversion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__0__Impl
	rule__Conversion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
	(rule__Conversion__TypeAssignment_0)
	{ after(grammarAccess.getConversionAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__1__Impl
	rule__Conversion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConversionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__2__Impl
	rule__Conversion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
	(rule__Conversion__ExpressionAssignment_2)
	{ after(grammarAccess.getConversionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__3__Impl
	rule__Conversion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
	(',')?
	{ after(grammarAccess.getConversionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conversion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getConversionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getGroup_0_0()); }
	(rule__Operand__Group_0_0__0)
	{ after(grammarAccess.getOperandAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operand__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0_0__0__Impl
	rule__Operand__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_0_0_0()); }
	'('
	{ after(grammarAccess.getOperandAccess().getLeftParenthesisKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0_0__1__Impl
	rule__Operand__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getExpressionAssignment_0_0_1()); }
	(rule__Operand__ExpressionAssignment_0_0_1)
	{ after(grammarAccess.getOperandAccess().getExpressionAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operand__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandAccess().getRightParenthesisKeyword_0_0_2()); }
	')'
	{ after(grammarAccess.getOperandAccess().getRightParenthesisKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compositelit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compositelit__Group__0__Impl
	rule__Compositelit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compositelit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositelitAccess().getLiteraltypeAssignment_0()); }
	(rule__Compositelit__LiteraltypeAssignment_0)
	{ after(grammarAccess.getCompositelitAccess().getLiteraltypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compositelit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compositelit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compositelit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositelitAccess().getLiteralvalueAssignment_1()); }
	(rule__Compositelit__LiteralvalueAssignment_1)
	{ after(grammarAccess.getCompositelitAccess().getLiteralvalueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literaltype__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literaltype__Group_1__0__Impl
	rule__Literaltype__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteraltypeAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getLiteraltypeAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literaltype__Group_1__1__Impl
	rule__Literaltype__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteraltypeAccess().getFullStopFullStopFullStopKeyword_1_1()); }
	'...'
	{ after(grammarAccess.getLiteraltypeAccess().getFullStopFullStopFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literaltype__Group_1__2__Impl
	rule__Literaltype__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteraltypeAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getLiteraltypeAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literaltype__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteraltypeAccess().getElementtypeAssignment_1_3()); }
	(rule__Literaltype__ElementtypeAssignment_1_3)
	{ after(grammarAccess.getLiteraltypeAccess().getElementtypeAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literalvalue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literalvalue__Group__0__Impl
	rule__Literalvalue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralvalueAccess().getLiteralvalueAction_0()); }
	()
	{ after(grammarAccess.getLiteralvalueAccess().getLiteralvalueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literalvalue__Group__1__Impl
	rule__Literalvalue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralvalueAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLiteralvalueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literalvalue__Group__2__Impl
	rule__Literalvalue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralvalueAccess().getGroup_2()); }
	(rule__Literalvalue__Group_2__0)?
	{ after(grammarAccess.getLiteralvalueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literalvalue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralvalueAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLiteralvalueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Literalvalue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literalvalue__Group_2__0__Impl
	rule__Literalvalue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralvalueAccess().getElementlistAssignment_2_0()); }
	(rule__Literalvalue__ElementlistAssignment_2_0)
	{ after(grammarAccess.getLiteralvalueAccess().getElementlistAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Literalvalue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLiteralvalueAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getLiteralvalueAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Elementlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Elementlist__Group__0__Impl
	rule__Elementlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Elementlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementlistAccess().getKeyedelementParserRuleCall_0()); }
	rulekeyedelement
	{ after(grammarAccess.getElementlistAccess().getKeyedelementParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Elementlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Elementlist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Elementlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementlistAccess().getGroup_1()); }
	(rule__Elementlist__Group_1__0)*
	{ after(grammarAccess.getElementlistAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Elementlist__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Elementlist__Group_1__0__Impl
	rule__Elementlist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Elementlist__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementlistAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getElementlistAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Elementlist__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Elementlist__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Elementlist__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementlistAccess().getKeyedelementAssignment_1_1()); }
	(rule__Elementlist__KeyedelementAssignment_1_1)
	{ after(grammarAccess.getElementlistAccess().getKeyedelementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Keyedelement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Keyedelement__Group__0__Impl
	rule__Keyedelement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyedelement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedelementAccess().getGroup_0()); }
	(rule__Keyedelement__Group_0__0)?
	{ after(grammarAccess.getKeyedelementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyedelement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Keyedelement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyedelement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedelementAccess().getElementAssignment_1()); }
	(rule__Keyedelement__ElementAssignment_1)
	{ after(grammarAccess.getKeyedelementAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Keyedelement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Keyedelement__Group_0__0__Impl
	rule__Keyedelement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyedelement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedelementAccess().getKeyParserRuleCall_0_0()); }
	rulekey
	{ after(grammarAccess.getKeyedelementAccess().getKeyParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyedelement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Keyedelement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyedelement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyedelementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getKeyedelementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Key__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group_0__0__Impl
	rule__Key__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getKeyAction_0_0()); }
	()
	{ after(grammarAccess.getKeyAccess().getKeyAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Key__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyAccess().getFieldnameAssignment_0_1()); }
	(rule__Key__FieldnameAssignment_0_1)
	{ after(grammarAccess.getKeyAccess().getFieldnameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Functionlit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functionlit__Group__0__Impl
	rule__Functionlit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functionlit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionlitAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctionlitAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functionlit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functionlit__Group__1__Impl
	rule__Functionlit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Functionlit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionlitAccess().getSignatureAssignment_1()); }
	(rule__Functionlit__SignatureAssignment_1)
	{ after(grammarAccess.getFunctionlitAccess().getSignatureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functionlit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functionlit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functionlit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionlitAccess().getFunctionbodyAssignment_2()); }
	(rule__Functionlit__FunctionbodyAssignment_2)
	{ after(grammarAccess.getFunctionlitAccess().getFunctionbodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vardecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group__0__Impl
	rule__Vardecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getVardeclAction_0()); }
	()
	{ after(grammarAccess.getVardeclAccess().getVardeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group__1__Impl
	rule__Vardecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getVarKeyword_1()); }
	'var'
	{ after(grammarAccess.getVardeclAccess().getVarKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getAlternatives_2()); }
	(rule__Vardecl__Alternatives_2)
	{ after(grammarAccess.getVardeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vardecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group_2_1__0__Impl
	rule__Vardecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getVardeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group_2_1__1__Impl
	rule__Vardecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getGroup_2_1_1()); }
	(rule__Vardecl__Group_2_1_1__0)*
	{ after(grammarAccess.getVardeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getVardeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Vardecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group_2_1_1__0__Impl
	rule__Vardecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getVarspecAssignment_2_1_1_0()); }
	(rule__Vardecl__VarspecAssignment_2_1_1_0)
	{ after(grammarAccess.getVardeclAccess().getVarspecAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Vardecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVardeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getVardeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Varspec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group__0__Impl
	rule__Varspec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getIdentifierlistAssignment_0()); }
	(rule__Varspec__IdentifierlistAssignment_0)
	{ after(grammarAccess.getVarspecAccess().getIdentifierlistAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getAlternatives_1()); }
	(rule__Varspec__Alternatives_1)
	{ after(grammarAccess.getVarspecAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Varspec__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group_1_0__0__Impl
	rule__Varspec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getTypeAssignment_1_0_0()); }
	(rule__Varspec__TypeAssignment_1_0_0)
	{ after(grammarAccess.getVarspecAccess().getTypeAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getGroup_1_0_1()); }
	(rule__Varspec__Group_1_0_1__0)
	{ after(grammarAccess.getVarspecAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Varspec__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group_1_0_1__0__Impl
	rule__Varspec__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getEqualsSignKeyword_1_0_1_0()); }
	'='
	{ after(grammarAccess.getVarspecAccess().getEqualsSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getExpressionlistAssignment_1_0_1_1()); }
	(rule__Varspec__ExpressionlistAssignment_1_0_1_1)
	{ after(grammarAccess.getVarspecAccess().getExpressionlistAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Varspec__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group_1_1__0__Impl
	rule__Varspec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getEqualsSignKeyword_1_1_0()); }
	'='
	{ after(grammarAccess.getVarspecAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varspec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarspecAccess().getExpressionlistAssignment_1_1_1()); }
	(rule__Varspec__ExpressionlistAssignment_1_1_1)
	{ after(grammarAccess.getVarspecAccess().getExpressionlistAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typedecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group__0__Impl
	rule__Typedecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getTypedeclAction_0()); }
	()
	{ after(grammarAccess.getTypedeclAccess().getTypedeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group__1__Impl
	rule__Typedecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getTypeKeyword_1()); }
	'type'
	{ after(grammarAccess.getTypedeclAccess().getTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getAlternatives_2()); }
	(rule__Typedecl__Alternatives_2)
	{ after(grammarAccess.getTypedeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typedecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group_2_1__0__Impl
	rule__Typedecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getTypedeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group_2_1__1__Impl
	rule__Typedecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getGroup_2_1_1()); }
	(rule__Typedecl__Group_2_1_1__0)*
	{ after(grammarAccess.getTypedeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getTypedeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typedecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group_2_1_1__0__Impl
	rule__Typedecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getTypespecAssignment_2_1_1_0()); }
	(rule__Typedecl__TypespecAssignment_2_1_1_0)
	{ after(grammarAccess.getTypedeclAccess().getTypespecAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typedecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypedeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getTypedeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typespec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typespec__Group__0__Impl
	rule__Typespec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typespec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypespecAccess().getIDENTIFIERAssignment_0()); }
	(rule__Typespec__IDENTIFIERAssignment_0)
	{ after(grammarAccess.getTypespecAccess().getIDENTIFIERAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typespec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typespec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typespec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypespecAccess().getTypespecauxAssignment_1()); }
	(rule__Typespec__TypespecauxAssignment_1)
	{ after(grammarAccess.getTypespecAccess().getTypespecauxAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasdecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aliasdecl__Group__0__Impl
	rule__Aliasdecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasdecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasdeclAccess().getEqualsSignKeyword_0()); }
	'='
	{ after(grammarAccess.getAliasdeclAccess().getEqualsSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasdecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aliasdecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasdecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAliasdeclAccess().getTypeAssignment_1()); }
	(rule__Aliasdecl__TypeAssignment_1)
	{ after(grammarAccess.getAliasdeclAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Methoddecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methoddecl__Group__0__Impl
	rule__Methoddecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethoddeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getMethoddeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methoddecl__Group__1__Impl
	rule__Methoddecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethoddeclAccess().getReceiverAssignment_1()); }
	(rule__Methoddecl__ReceiverAssignment_1)
	{ after(grammarAccess.getMethoddeclAccess().getReceiverAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methoddecl__Group__2__Impl
	rule__Methoddecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethoddeclAccess().getMethodnameAssignment_2()); }
	(rule__Methoddecl__MethodnameAssignment_2)
	{ after(grammarAccess.getMethoddeclAccess().getMethodnameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methoddecl__Group__3__Impl
	rule__Methoddecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethoddeclAccess().getSignatureAssignment_3()); }
	(rule__Methoddecl__SignatureAssignment_3)
	{ after(grammarAccess.getMethoddeclAccess().getSignatureAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methoddecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethoddeclAccess().getFunctionbodyAssignment_4()); }
	(rule__Methoddecl__FunctionbodyAssignment_4)?
	{ after(grammarAccess.getMethoddeclAccess().getFunctionbodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Functiondecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functiondecl__Group__0__Impl
	rule__Functiondecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctiondeclAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctiondeclAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functiondecl__Group__1__Impl
	rule__Functiondecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctiondeclAccess().getFunctionnameAssignment_1()); }
	(rule__Functiondecl__FunctionnameAssignment_1)
	{ after(grammarAccess.getFunctiondeclAccess().getFunctionnameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functiondecl__Group__2__Impl
	rule__Functiondecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctiondeclAccess().getSignatureAssignment_2()); }
	(rule__Functiondecl__SignatureAssignment_2)
	{ after(grammarAccess.getFunctiondeclAccess().getSignatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functiondecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctiondeclAccess().getFunctionbodyAssignment_3()); }
	(rule__Functiondecl__FunctionbodyAssignment_3)?
	{ after(grammarAccess.getFunctiondeclAccess().getFunctionbodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constdecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group__0__Impl
	rule__Constdecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getConstdeclAction_0()); }
	()
	{ after(grammarAccess.getConstdeclAccess().getConstdeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group__1__Impl
	rule__Constdecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getConstKeyword_1()); }
	'const'
	{ after(grammarAccess.getConstdeclAccess().getConstKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getAlternatives_2()); }
	(rule__Constdecl__Alternatives_2)
	{ after(grammarAccess.getConstdeclAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constdecl__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group_2_1__0__Impl
	rule__Constdecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getLeftParenthesisKeyword_2_1_0()); }
	'('
	{ after(grammarAccess.getConstdeclAccess().getLeftParenthesisKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group_2_1__1__Impl
	rule__Constdecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getGroup_2_1_1()); }
	(rule__Constdecl__Group_2_1_1__0)*
	{ after(grammarAccess.getConstdeclAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getRightParenthesisKeyword_2_1_2()); }
	')'
	{ after(grammarAccess.getConstdeclAccess().getRightParenthesisKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constdecl__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group_2_1_1__0__Impl
	rule__Constdecl__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getConstspecAssignment_2_1_1_0()); }
	(rule__Constdecl__ConstspecAssignment_2_1_1_0)
	{ after(grammarAccess.getConstdeclAccess().getConstspecAssignment_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constdecl__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstdeclAccess().getSemicolonKeyword_2_1_1_1()); }
	';'
	{ after(grammarAccess.getConstdeclAccess().getSemicolonKeyword_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constspec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constspec__Group__0__Impl
	rule__Constspec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstspecAccess().getIdentifierlistAssignment_0()); }
	(rule__Constspec__IdentifierlistAssignment_0)
	{ after(grammarAccess.getConstspecAccess().getIdentifierlistAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constspec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstspecAccess().getGroup_1()); }
	(rule__Constspec__Group_1__0)?
	{ after(grammarAccess.getConstspecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constspec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constspec__Group_1__0__Impl
	rule__Constspec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstspecAccess().getTypeAssignment_1_0()); }
	(rule__Constspec__TypeAssignment_1_0)?
	{ after(grammarAccess.getConstspecAccess().getTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constspec__Group_1__1__Impl
	rule__Constspec__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstspecAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getConstspecAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constspec__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstspecAccess().getExpressionlistAssignment_1_2()); }
	(rule__Constspec__ExpressionlistAssignment_1_2)
	{ after(grammarAccess.getConstspecAccess().getExpressionlistAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Shortvardecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortvardecl__Group__0__Impl
	rule__Shortvardecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortvardecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortvardeclAccess().getIdentifierlistAssignment_0()); }
	(rule__Shortvardecl__IdentifierlistAssignment_0)
	{ after(grammarAccess.getShortvardeclAccess().getIdentifierlistAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortvardecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortvardecl__Group__1__Impl
	rule__Shortvardecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortvardecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortvardeclAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getShortvardeclAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortvardecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Shortvardecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortvardecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShortvardeclAccess().getExpressionlistAssignment_2()); }
	(rule__Shortvardecl__ExpressionlistAssignment_2)
	{ after(grammarAccess.getShortvardeclAccess().getExpressionlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Deferstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Deferstmt__Group__0__Impl
	rule__Deferstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Deferstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferstmtAccess().getDeferKeyword_0()); }
	'defer'
	{ after(grammarAccess.getDeferstmtAccess().getDeferKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deferstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Deferstmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Deferstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeferstmtAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getDeferstmtAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gotostmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gotostmt__Group__0__Impl
	rule__Gotostmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gotostmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotostmtAccess().getGotoKeyword_0()); }
	'goto'
	{ after(grammarAccess.getGotostmtAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gotostmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gotostmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gotostmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotostmtAccess().getLabelParserRuleCall_1()); }
	rulelabel
	{ after(grammarAccess.getGotostmtAccess().getLabelParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Continuestmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuestmt__Group__0__Impl
	rule__Continuestmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuestmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuestmtAccess().getContinueKeyword_0()); }
	'continue'
	{ after(grammarAccess.getContinuestmtAccess().getContinueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuestmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Continuestmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Continuestmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinuestmtAccess().getLabelParserRuleCall_1()); }
	(rulelabel)?
	{ after(grammarAccess.getContinuestmtAccess().getLabelParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Breakstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Breakstmt__Group__0__Impl
	rule__Breakstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Breakstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakstmtAccess().getBreakKeyword_0()); }
	'break'
	{ after(grammarAccess.getBreakstmtAccess().getBreakKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Breakstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Breakstmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Breakstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakstmtAccess().getLabelParserRuleCall_1()); }
	(rulelabel)?
	{ after(grammarAccess.getBreakstmtAccess().getLabelParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Returnstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Returnstmt__Group__0__Impl
	rule__Returnstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Returnstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnstmtAccess().getReturnstmtAction_0()); }
	()
	{ after(grammarAccess.getReturnstmtAccess().getReturnstmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Returnstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Returnstmt__Group__1__Impl
	rule__Returnstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Returnstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnstmtAccess().getReturnKeyword_1()); }
	'return'
	{ after(grammarAccess.getReturnstmtAccess().getReturnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Returnstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Returnstmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Returnstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnstmtAccess().getExpressionlistAssignment_2()); }
	(rule__Returnstmt__ExpressionlistAssignment_2)?
	{ after(grammarAccess.getReturnstmtAccess().getExpressionlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selectstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selectstmt__Group__0__Impl
	rule__Selectstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectstmtAccess().getSelectstmtAction_0()); }
	()
	{ after(grammarAccess.getSelectstmtAccess().getSelectstmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selectstmt__Group__1__Impl
	rule__Selectstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectstmtAccess().getSelectKeyword_1()); }
	'select'
	{ after(grammarAccess.getSelectstmtAccess().getSelectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selectstmt__Group__2__Impl
	rule__Selectstmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectstmtAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSelectstmtAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selectstmt__Group__3__Impl
	rule__Selectstmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectstmtAccess().getCommclauseAssignment_3()); }
	(rule__Selectstmt__CommclauseAssignment_3)*
	{ after(grammarAccess.getSelectstmtAccess().getCommclauseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selectstmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectstmtAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSelectstmtAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commclause__Group__0__Impl
	rule__Commclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommclauseAccess().getCommcaseParserRuleCall_0()); }
	rulecommcase
	{ after(grammarAccess.getCommclauseAccess().getCommcaseParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commclause__Group__1__Impl
	rule__Commclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Commclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommclauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCommclauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commclause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commclause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commclause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommclauseAccess().getStatementlistAssignment_2()); }
	(rule__Commclause__StatementlistAssignment_2)
	{ after(grammarAccess.getCommclauseAccess().getStatementlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commcase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commcase__Group_0__0__Impl
	rule__Commcase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommcaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getCommcaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commcase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommcaseAccess().getAlternatives_0_1()); }
	(rule__Commcase__Alternatives_0_1)
	{ after(grammarAccess.getCommcaseAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commcase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commcase__Group_1__0__Impl
	rule__Commcase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommcaseAccess().getCommcaseAction_1_0()); }
	()
	{ after(grammarAccess.getCommcaseAccess().getCommcaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commcase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommcaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getCommcaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Recvstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recvstmt__Group__0__Impl
	rule__Recvstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvstmtAccess().getAlternatives_0()); }
	(rule__Recvstmt__Alternatives_0)
	{ after(grammarAccess.getRecvstmtAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recvstmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvstmtAccess().getRecvexprAssignment_1()); }
	(rule__Recvstmt__RecvexprAssignment_1)
	{ after(grammarAccess.getRecvstmtAccess().getRecvexprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Recvstmt__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recvstmt__Group_0_0__0__Impl
	rule__Recvstmt__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvstmtAccess().getExpressionlistParserRuleCall_0_0_0()); }
	ruleexpressionlist
	{ after(grammarAccess.getRecvstmtAccess().getExpressionlistParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recvstmt__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvstmtAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRecvstmtAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Recvstmt__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recvstmt__Group_0_1__0__Impl
	rule__Recvstmt__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvstmtAccess().getIdentifierlistAssignment_0_1_0()); }
	(rule__Recvstmt__IdentifierlistAssignment_0_1_0)
	{ after(grammarAccess.getRecvstmtAccess().getIdentifierlistAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Recvstmt__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecvstmtAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRecvstmtAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gotstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gotstmt__Group__0__Impl
	rule__Gotstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gotstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotstmtAccess().getGoKeyword_0()); }
	'go'
	{ after(grammarAccess.getGotstmtAccess().getGoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gotstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gotstmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gotstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGotstmtAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
	{ after(grammarAccess.getGotstmtAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Forstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forstmt__Group__0__Impl
	rule__Forstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Forstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForstmtAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForstmtAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forstmt__Group__1__Impl
	rule__Forstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Forstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForstmtAccess().getAlternatives_1()); }
	(rule__Forstmt__Alternatives_1)?
	{ after(grammarAccess.getForstmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forstmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Forstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForstmtAccess().getBlockAssignment_2()); }
	(rule__Forstmt__BlockAssignment_2)
	{ after(grammarAccess.getForstmtAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rangeclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rangeclause__Group__0__Impl
	rule__Rangeclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeclauseAccess().getAlternatives_0()); }
	(rule__Rangeclause__Alternatives_0)?
	{ after(grammarAccess.getRangeclauseAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rangeclause__Group__1__Impl
	rule__Rangeclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeclauseAccess().getRangeKeyword_1()); }
	'range'
	{ after(grammarAccess.getRangeclauseAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rangeclause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeclauseAccess().getExpressionAssignment_2()); }
	(rule__Rangeclause__ExpressionAssignment_2)
	{ after(grammarAccess.getRangeclauseAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rangeclause__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rangeclause__Group_0_0__0__Impl
	rule__Rangeclause__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeclauseAccess().getExpressionlistAssignment_0_0_0()); }
	(rule__Rangeclause__ExpressionlistAssignment_0_0_0)
	{ after(grammarAccess.getRangeclauseAccess().getExpressionlistAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rangeclause__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeclauseAccess().getEqualsSignKeyword_0_0_1()); }
	'='
	{ after(grammarAccess.getRangeclauseAccess().getEqualsSignKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rangeclause__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rangeclause__Group_0_1__0__Impl
	rule__Rangeclause__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeclauseAccess().getIdentifierlistAssignment_0_1_0()); }
	(rule__Rangeclause__IdentifierlistAssignment_0_1_0)
	{ after(grammarAccess.getRangeclauseAccess().getIdentifierlistAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rangeclause__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeclauseAccess().getColonEqualsSignKeyword_0_1_1()); }
	':='
	{ after(grammarAccess.getRangeclauseAccess().getColonEqualsSignKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Forclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forclause__Group__0__Impl
	rule__Forclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForclauseAccess().getForclauseAction_0()); }
	()
	{ after(grammarAccess.getForclauseAccess().getForclauseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forclause__Group__1__Impl
	rule__Forclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForclauseAccess().getInitstmtAssignment_1()); }
	(rule__Forclause__InitstmtAssignment_1)*
	{ after(grammarAccess.getForclauseAccess().getInitstmtAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forclause__Group__2__Impl
	rule__Forclause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForclauseAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getForclauseAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forclause__Group__3__Impl
	rule__Forclause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForclauseAccess().getConditionAssignment_3()); }
	(rule__Forclause__ConditionAssignment_3)?
	{ after(grammarAccess.getForclauseAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forclause__Group__4__Impl
	rule__Forclause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForclauseAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getForclauseAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Forclause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForclauseAccess().getPoststmtAssignment_5()); }
	(rule__Forclause__PoststmtAssignment_5)?
	{ after(grammarAccess.getForclauseAccess().getPoststmtAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprswitchstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group__0__Impl
	rule__Exprswitchstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getExprswitchstmtAction_0()); }
	()
	{ after(grammarAccess.getExprswitchstmtAccess().getExprswitchstmtAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group__1__Impl
	rule__Exprswitchstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getSwitchKeyword_1()); }
	'switch'
	{ after(grammarAccess.getExprswitchstmtAccess().getSwitchKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group__2__Impl
	rule__Exprswitchstmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getGroup_2()); }
	(rule__Exprswitchstmt__Group_2__0)?
	{ after(grammarAccess.getExprswitchstmtAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group__3__Impl
	rule__Exprswitchstmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getExpressionAssignment_3()); }
	(rule__Exprswitchstmt__ExpressionAssignment_3)?
	{ after(grammarAccess.getExprswitchstmtAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group__4__Impl
	rule__Exprswitchstmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getExprswitchstmtAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group__5__Impl
	rule__Exprswitchstmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getExprcaseclauseAssignment_5()); }
	(rule__Exprswitchstmt__ExprcaseclauseAssignment_5)*
	{ after(grammarAccess.getExprswitchstmtAccess().getExprcaseclauseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getExprswitchstmtAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprswitchstmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group_2__0__Impl
	rule__Exprswitchstmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getSimplestmtAssignment_2_0()); }
	(rule__Exprswitchstmt__SimplestmtAssignment_2_0)
	{ after(grammarAccess.getExprswitchstmtAccess().getSimplestmtAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchstmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchstmtAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getExprswitchstmtAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprcaseclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprcaseclause__Group__0__Impl
	rule__Exprcaseclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprcaseclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprcaseclauseAccess().getExprswitchcaseAssignment_0()); }
	(rule__Exprcaseclause__ExprswitchcaseAssignment_0)
	{ after(grammarAccess.getExprcaseclauseAccess().getExprswitchcaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprcaseclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprcaseclause__Group__1__Impl
	rule__Exprcaseclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprcaseclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprcaseclauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExprcaseclauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprcaseclause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprcaseclause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprcaseclause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprcaseclauseAccess().getStatementlistAssignment_2()); }
	(rule__Exprcaseclause__StatementlistAssignment_2)
	{ after(grammarAccess.getExprcaseclauseAccess().getStatementlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprswitchcase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchcase__Group_0__0__Impl
	rule__Exprswitchcase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchcaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getExprswitchcaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchcase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchcaseAccess().getExpressionlistAssignment_0_1()); }
	(rule__Exprswitchcase__ExpressionlistAssignment_0_1)
	{ after(grammarAccess.getExprswitchcaseAccess().getExpressionlistAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exprswitchcase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchcase__Group_1__0__Impl
	rule__Exprswitchcase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchcaseAccess().getExprswitchcaseAction_1_0()); }
	()
	{ after(grammarAccess.getExprswitchcaseAccess().getExprswitchcaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exprswitchcase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprswitchcaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getExprswitchcaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typeswitchstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group__0__Impl
	rule__Typeswitchstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getTypeswitchstmtAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group__1__Impl
	rule__Typeswitchstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getGroup_1()); }
	(rule__Typeswitchstmt__Group_1__0)?
	{ after(grammarAccess.getTypeswitchstmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group__2__Impl
	rule__Typeswitchstmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getTypeswitchguardAssignment_2()); }
	(rule__Typeswitchstmt__TypeswitchguardAssignment_2)
	{ after(grammarAccess.getTypeswitchstmtAccess().getTypeswitchguardAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group__3__Impl
	rule__Typeswitchstmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTypeswitchstmtAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group__4__Impl
	rule__Typeswitchstmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getTypecaseclauseAssignment_4()); }
	(rule__Typeswitchstmt__TypecaseclauseAssignment_4)*
	{ after(grammarAccess.getTypeswitchstmtAccess().getTypecaseclauseAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypeswitchstmtAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typeswitchstmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group_1__0__Impl
	rule__Typeswitchstmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getSimplestmtParserRuleCall_1_0()); }
	rulesimplestmt
	{ after(grammarAccess.getTypeswitchstmtAccess().getSimplestmtParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchstmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchstmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getTypeswitchstmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typeswitchguard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group__0__Impl
	rule__Typeswitchguard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getGroup_0()); }
	(rule__Typeswitchguard__Group_0__0)?
	{ after(grammarAccess.getTypeswitchguardAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group__1__Impl
	rule__Typeswitchguard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getPrimaryexprAssignment_1()); }
	(rule__Typeswitchguard__PrimaryexprAssignment_1)
	{ after(grammarAccess.getTypeswitchguardAccess().getPrimaryexprAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group__2__Impl
	rule__Typeswitchguard__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getTypeswitchguardAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group__3__Impl
	rule__Typeswitchguard__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getTypeswitchguardAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group__4__Impl
	rule__Typeswitchguard__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getTypeswitchguardAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getTypeswitchguardAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typeswitchguard__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group_0__0__Impl
	rule__Typeswitchguard__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getIDENTIFIERAssignment_0_0()); }
	(rule__Typeswitchguard__IDENTIFIERAssignment_0_0)
	{ after(grammarAccess.getTypeswitchguardAccess().getIDENTIFIERAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchguard__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchguardAccess().getColonEqualsSignKeyword_0_1()); }
	':='
	{ after(grammarAccess.getTypeswitchguardAccess().getColonEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typecaseclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typecaseclause__Group__0__Impl
	rule__Typecaseclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typecaseclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypecaseclauseAccess().getTypeswitchcaseAssignment_0()); }
	(rule__Typecaseclause__TypeswitchcaseAssignment_0)
	{ after(grammarAccess.getTypecaseclauseAccess().getTypeswitchcaseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typecaseclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typecaseclause__Group__1__Impl
	rule__Typecaseclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typecaseclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypecaseclauseAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTypecaseclauseAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typecaseclause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typecaseclause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typecaseclause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypecaseclauseAccess().getStatementlistAssignment_2()); }
	(rule__Typecaseclause__StatementlistAssignment_2)
	{ after(grammarAccess.getTypecaseclauseAccess().getStatementlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typeswitchcase__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchcase__Group_0__0__Impl
	rule__Typeswitchcase__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchcaseAccess().getCaseKeyword_0_0()); }
	'case'
	{ after(grammarAccess.getTypeswitchcaseAccess().getCaseKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchcase__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchcaseAccess().getTypelistAssignment_0_1()); }
	(rule__Typeswitchcase__TypelistAssignment_0_1)
	{ after(grammarAccess.getTypeswitchcaseAccess().getTypelistAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typeswitchcase__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchcase__Group_1__0__Impl
	rule__Typeswitchcase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchcaseAccess().getTypeswitchcaseAction_1_0()); }
	()
	{ after(grammarAccess.getTypeswitchcaseAccess().getTypeswitchcaseAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeswitchcase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeswitchcaseAccess().getDefaultKeyword_1_1()); }
	'default'
	{ after(grammarAccess.getTypeswitchcaseAccess().getDefaultKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typelist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typelist__Group__0__Impl
	rule__Typelist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypelistAccess().getTypelistAction_0()); }
	()
	{ after(grammarAccess.getTypelistAccess().getTypelistAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typelist__Group__1__Impl
	rule__Typelist__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypelistAccess().getTypeKeyword_1()); }
	'type'
	{ after(grammarAccess.getTypelistAccess().getTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typelist__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypelistAccess().getGroup_2()); }
	(rule__Typelist__Group_2__0)*
	{ after(grammarAccess.getTypelistAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typelist__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typelist__Group_2__0__Impl
	rule__Typelist__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypelistAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTypelistAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typelist__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypelistAccess().getTypeAssignment_2_1()); }
	(rule__Typelist__TypeAssignment_2_1)
	{ after(grammarAccess.getTypelistAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ifstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group__0__Impl
	rule__Ifstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfstmtAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group__1__Impl
	rule__Ifstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getGroup_1()); }
	(rule__Ifstmt__Group_1__0)?
	{ after(grammarAccess.getIfstmtAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group__2__Impl
	rule__Ifstmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getExpressionAssignment_2()); }
	(rule__Ifstmt__ExpressionAssignment_2)
	{ after(grammarAccess.getIfstmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group__3__Impl
	rule__Ifstmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getBlockAssignment_3()); }
	(rule__Ifstmt__BlockAssignment_3)
	{ after(grammarAccess.getIfstmtAccess().getBlockAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getGroup_4()); }
	(rule__Ifstmt__Group_4__0)?
	{ after(grammarAccess.getIfstmtAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ifstmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group_1__0__Impl
	rule__Ifstmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getSimplestmtAssignment_1_0()); }
	(rule__Ifstmt__SimplestmtAssignment_1_0)
	{ after(grammarAccess.getIfstmtAccess().getSimplestmtAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getIfstmtAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ifstmt__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group_4__0__Impl
	rule__Ifstmt__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getIfstmtAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ifstmt__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfstmtAccess().getAlternatives_4_1()); }
	(rule__Ifstmt__Alternatives_4_1)
	{ after(grammarAccess.getIfstmtAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_0()); }
	(rule__Assignment__ExpressionlistAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getASSIGN_OPAssignment_1()); }
	(rule__Assignment__ASSIGN_OPAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getASSIGN_OPAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_2()); }
	(rule__Assignment__ExpressionlistAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Incdecstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Incdecstmt__Group__0__Impl
	rule__Incdecstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Incdecstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncdecstmtAccess().getExpressionParserRuleCall_0()); }
	ruleexpression
	{ after(grammarAccess.getIncdecstmtAccess().getExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Incdecstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Incdecstmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Incdecstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncdecstmtAccess().getAlternatives_1()); }
	(rule__Incdecstmt__Alternatives_1)
	{ after(grammarAccess.getIncdecstmtAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sendstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sendstmt__Group__0__Impl
	rule__Sendstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sendstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendstmtAccess().getChannelAssignment_0()); }
	(rule__Sendstmt__ChannelAssignment_0)
	{ after(grammarAccess.getSendstmtAccess().getChannelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sendstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sendstmt__Group__1__Impl
	rule__Sendstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sendstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendstmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
	'<-'
	{ after(grammarAccess.getSendstmtAccess().getLessThanSignHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sendstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sendstmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sendstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendstmtAccess().getExpressionAssignment_2()); }
	(rule__Sendstmt__ExpressionAssignment_2)
	{ after(grammarAccess.getSendstmtAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Labeledstmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeledstmt__Group__0__Impl
	rule__Labeledstmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeledstmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledstmtAccess().getLabelAssignment_0()); }
	(rule__Labeledstmt__LabelAssignment_0)
	{ after(grammarAccess.getLabeledstmtAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeledstmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeledstmt__Group__1__Impl
	rule__Labeledstmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeledstmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledstmtAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getLabeledstmtAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeledstmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Labeledstmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeledstmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledstmtAccess().getStatementAssignment_2()); }
	(rule__Labeledstmt__StatementAssignment_2)
	{ after(grammarAccess.getLabeledstmtAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementlistParserRuleCall_1()); }
	rulestatementlist
	{ after(grammarAccess.getBlockAccess().getStatementlistParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statementlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statementlist__Group__0__Impl
	rule__Statementlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statementlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementlistAccess().getStatementlistAction_0()); }
	()
	{ after(grammarAccess.getStatementlistAccess().getStatementlistAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statementlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statementlist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statementlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementlistAccess().getGroup_1()); }
	(rule__Statementlist__Group_1__0)*
	{ after(grammarAccess.getStatementlistAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statementlist__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statementlist__Group_1__0__Impl
	rule__Statementlist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statementlist__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementlistAccess().getStatementAssignment_1_0()); }
	(rule__Statementlist__StatementAssignment_1_0)
	{ after(grammarAccess.getStatementlistAccess().getStatementAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statementlist__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statementlist__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statementlist__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementlistAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getStatementlistAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typeassertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeassertion__Group__0__Impl
	rule__Typeassertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeassertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeassertionAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getTypeassertionAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeassertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeassertion__Group__1__Impl
	rule__Typeassertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeassertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeassertionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTypeassertionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeassertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeassertion__Group__2__Impl
	rule__Typeassertion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeassertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeassertionAccess().getTypeParserRuleCall_2()); }
	ruletype
	{ after(grammarAccess.getTypeassertionAccess().getTypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeassertion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typeassertion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeassertion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeassertionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTypeassertionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__0__Impl
	rule__Arguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
	()
	{ after(grammarAccess.getArgumentsAccess().getArgumentsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__1__Impl
	rule__Arguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__2__Impl
	rule__Arguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2()); }
	(rule__Arguments__Group_2__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__0__Impl
	rule__Arguments__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
	(rule__Arguments__Alternatives_2_0)
	{ after(grammarAccess.getArgumentsAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__1__Impl
	rule__Arguments__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
	('...')?
	{ after(grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
	(',')?
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__0__Impl
	rule__Arguments__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
	(rule__Arguments__TypeAssignment_2_0_1_0)
	{ after(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
	(rule__Arguments__Group_2_0_1_1__0)?
	{ after(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arguments__Group_2_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__0__Impl
	rule__Arguments__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
	','
	{ after(grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arguments__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__Group_2_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_1_1_1()); }
	(rule__Arguments__ExpressionlistAssignment_2_0_1_1_1)
	{ after(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expressionlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expressionlist__Group__0__Impl
	rule__Expressionlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionlistAccess().getExpressionParserRuleCall_0()); }
	ruleexpression
	{ after(grammarAccess.getExpressionlistAccess().getExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expressionlist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionlistAccess().getGroup_1()); }
	(rule__Expressionlist__Group_1__0)*
	{ after(grammarAccess.getExpressionlistAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expressionlist__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expressionlist__Group_1__0__Impl
	rule__Expressionlist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionlist__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionlistAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpressionlistAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionlist__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expressionlist__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionlist__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionlistAccess().getExpressionAssignment_1_1()); }
	(rule__Expressionlist__ExpressionAssignment_1_1)
	{ after(grammarAccess.getExpressionlistAccess().getExpressionAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getSelectorAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operandname__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operandname__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operandname__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandnameAccess().getGroup_0_0()); }
	(rule__Operandname__Group_0_0__0)
	{ after(grammarAccess.getOperandnameAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operandname__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operandname__Group_0_0__0__Impl
	rule__Operandname__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operandname__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandnameAccess().getIDENTIFIERTerminalRuleCall_0_0_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getOperandnameAccess().getIDENTIFIERTerminalRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operandname__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operandname__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operandname__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperandnameAccess().getQualified_identParserRuleCall_0_0_1()); }
	rulequalified_ident
	{ after(grammarAccess.getOperandnameAccess().getQualified_identParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Qualified_ident__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified_ident__Group__0__Impl
	rule__Qualified_ident__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualified_identAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getQualified_identAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualified_ident__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualified_ident__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualified_identAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getQualified_identAccess().getIDENTIFIERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slicetype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slicetype__Group__0__Impl
	rule__Slicetype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicetype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlicetypeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getSlicetypeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicetype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slicetype__Group__1__Impl
	rule__Slicetype__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicetype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlicetypeAccess().getRightSquareBracketKeyword_1()); }
	']'
	{ after(grammarAccess.getSlicetypeAccess().getRightSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicetype__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slicetype__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slicetype__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlicetypeAccess().getElementtypeParserRuleCall_2()); }
	ruleelementtype
	{ after(grammarAccess.getSlicetypeAccess().getElementtypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointertype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointertype__Group__0__Impl
	rule__Pointertype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointertype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointertypeAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getPointertypeAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointertype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointertype__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointertype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointertypeAccess().getBasetypeParserRuleCall_1()); }
	rulebasetype
	{ after(grammarAccess.getPointertypeAccess().getBasetypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channeltype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channeltype__Group__0__Impl
	rule__Channeltype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChanneltypeAccess().getAlternatives_0()); }
	(rule__Channeltype__Alternatives_0)
	{ after(grammarAccess.getChanneltypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channeltype__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChanneltypeAccess().getElementtypeParserRuleCall_1()); }
	ruleelementtype
	{ after(grammarAccess.getChanneltypeAccess().getElementtypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channeltype__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channeltype__Group_0_1__0__Impl
	rule__Channeltype__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChanneltypeAccess().getChanKeyword_0_1_0()); }
	'chan'
	{ after(grammarAccess.getChanneltypeAccess().getChanKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channeltype__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChanneltypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
	'<-'
	{ after(grammarAccess.getChanneltypeAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channeltype__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channeltype__Group_0_2__0__Impl
	rule__Channeltype__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChanneltypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
	'<-'
	{ after(grammarAccess.getChanneltypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channeltype__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channeltype__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChanneltypeAccess().getChanKeyword_0_2_1()); }
	'chan'
	{ after(grammarAccess.getChanneltypeAccess().getChanKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Maptype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maptype__Group__0__Impl
	rule__Maptype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaptypeAccess().getMapKeyword_0()); }
	'map'
	{ after(grammarAccess.getMaptypeAccess().getMapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maptype__Group__1__Impl
	rule__Maptype__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaptypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMaptypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maptype__Group__2__Impl
	rule__Maptype__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaptypeAccess().getKeytypeParserRuleCall_2()); }
	rulekeytype
	{ after(grammarAccess.getMaptypeAccess().getKeytypeParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maptype__Group__3__Impl
	rule__Maptype__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaptypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMaptypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Maptype__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaptypeAccess().getElementtypeAssignment_4()); }
	(rule__Maptype__ElementtypeAssignment_4)
	{ after(grammarAccess.getMaptypeAccess().getElementtypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interfacetype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfacetype__Group__0__Impl
	rule__Interfacetype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacetypeAccess().getInterfacetypeAction_0()); }
	()
	{ after(grammarAccess.getInterfacetypeAccess().getInterfacetypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfacetype__Group__1__Impl
	rule__Interfacetype__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacetypeAccess().getInterfaceKeyword_1()); }
	'interface'
	{ after(grammarAccess.getInterfacetypeAccess().getInterfaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfacetype__Group__2__Impl
	rule__Interfacetype__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacetypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getInterfacetypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfacetype__Group__3__Impl
	rule__Interfacetype__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacetypeAccess().getGroup_3()); }
	(rule__Interfacetype__Group_3__0)*
	{ after(grammarAccess.getInterfacetypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfacetype__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacetypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getInterfacetypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interfacetype__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfacetype__Group_3__0__Impl
	rule__Interfacetype__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacetypeAccess().getMethodspecAssignment_3_0()); }
	(rule__Interfacetype__MethodspecAssignment_3_0)
	{ after(grammarAccess.getInterfacetypeAccess().getMethodspecAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfacetype__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacetypeAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getInterfacetypeAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Methodspec__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methodspec__Group_0__0__Impl
	rule__Methodspec__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodspec__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodspecAccess().getMethodnameAssignment_0_0()); }
	(rule__Methodspec__MethodnameAssignment_0_0)
	{ after(grammarAccess.getMethodspecAccess().getMethodnameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodspec__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methodspec__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodspec__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodspecAccess().getSignatureAssignment_0_1()); }
	(rule__Methodspec__SignatureAssignment_0_1)
	{ after(grammarAccess.getMethodspecAccess().getSignatureAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Functiontype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functiontype__Group__0__Impl
	rule__Functiontype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiontype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctiontypeAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getFunctiontypeAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiontype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Functiontype__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiontype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctiontypeAccess().getSignatureParserRuleCall_1()); }
	rulesignature
	{ after(grammarAccess.getFunctiontypeAccess().getSignatureParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
	(rule__Signature__ParametersAssignment_0)
	{ after(grammarAccess.getSignatureAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
	(rule__Signature__ResultAssignment_1)?
	{ after(grammarAccess.getSignatureAccess().getResultAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__0__Impl
	rule__Parameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParametersAction_0()); }
	()
	{ after(grammarAccess.getParametersAccess().getParametersAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__1__Impl
	rule__Parameters__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__2__Impl
	rule__Parameters__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getGroup_2()); }
	(rule__Parameters__Group_2__0)?
	{ after(grammarAccess.getParametersAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParametersAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameters__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_2__0__Impl
	rule__Parameters__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getParameterlistAssignment_2_0()); }
	(rule__Parameters__ParameterlistAssignment_2_0)
	{ after(grammarAccess.getParametersAccess().getParameterlistAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameters__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParametersAccess().getCommaKeyword_2_1()); }
	(',')?
	{ after(grammarAccess.getParametersAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameterlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameterlist__Group__0__Impl
	rule__Parameterlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterlistAccess().getParameterdeclAssignment_0()); }
	(rule__Parameterlist__ParameterdeclAssignment_0)
	{ after(grammarAccess.getParameterlistAccess().getParameterdeclAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameterlist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterlistAccess().getGroup_1()); }
	(rule__Parameterlist__Group_1__0)*
	{ after(grammarAccess.getParameterlistAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameterlist__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameterlist__Group_1__0__Impl
	rule__Parameterlist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterlistAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParameterlistAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameterlist__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterlistAccess().getParameterdeclAssignment_1_1()); }
	(rule__Parameterlist__ParameterdeclAssignment_1_1)
	{ after(grammarAccess.getParameterlistAccess().getParameterdeclAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameterdecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameterdecl__Group__0__Impl
	rule__Parameterdecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterdecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterdeclAccess().getIdentifierlistAssignment_0()); }
	(rule__Parameterdecl__IdentifierlistAssignment_0)?
	{ after(grammarAccess.getParameterdeclAccess().getIdentifierlistAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterdecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameterdecl__Group__1__Impl
	rule__Parameterdecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterdecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterdeclAccess().getFullStopFullStopFullStopKeyword_1()); }
	('...')?
	{ after(grammarAccess.getParameterdeclAccess().getFullStopFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterdecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameterdecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterdecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterdeclAccess().getTypeAssignment_2()); }
	(rule__Parameterdecl__TypeAssignment_2)
	{ after(grammarAccess.getParameterdeclAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifierlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifierlist__Group__0__Impl
	rule__Identifierlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifierlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierlistAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getIdentifierlistAccess().getIDENTIFIERTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifierlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifierlist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifierlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierlistAccess().getGroup_1()); }
	(rule__Identifierlist__Group_1__0)*
	{ after(grammarAccess.getIdentifierlistAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifierlist__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifierlist__Group_1__0__Impl
	rule__Identifierlist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifierlist__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierlistAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifierlistAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifierlist__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifierlist__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifierlist__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifierlistAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER
	{ after(grammarAccess.getIdentifierlistAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Structtype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structtype__Group__0__Impl
	rule__Structtype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructtypeAccess().getStructtypeAction_0()); }
	()
	{ after(grammarAccess.getStructtypeAccess().getStructtypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structtype__Group__1__Impl
	rule__Structtype__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructtypeAccess().getStructKeyword_1()); }
	'struct'
	{ after(grammarAccess.getStructtypeAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structtype__Group__2__Impl
	rule__Structtype__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructtypeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getStructtypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structtype__Group__3__Impl
	rule__Structtype__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructtypeAccess().getGroup_3()); }
	(rule__Structtype__Group_3__0)*
	{ after(grammarAccess.getStructtypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structtype__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructtypeAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getStructtypeAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Structtype__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structtype__Group_3__0__Impl
	rule__Structtype__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructtypeAccess().getFielddeclAssignment_3_0()); }
	(rule__Structtype__FielddeclAssignment_3_0)
	{ after(grammarAccess.getStructtypeAccess().getFielddeclAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Structtype__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructtypeAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStructtypeAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fielddecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fielddecl__Group__0__Impl
	rule__Fielddecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFielddeclAccess().getAlternatives_0()); }
	(rule__Fielddecl__Alternatives_0)
	{ after(grammarAccess.getFielddeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fielddecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFielddeclAccess().getTagAssignment_1()); }
	(rule__Fielddecl__TagAssignment_1)?
	{ after(grammarAccess.getFielddeclAccess().getTagAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fielddecl__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fielddecl__Group_0_0__0__Impl
	rule__Fielddecl__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFielddeclAccess().getIdentifierlistAssignment_0_0_0()); }
	(rule__Fielddecl__IdentifierlistAssignment_0_0_0)
	{ after(grammarAccess.getFielddeclAccess().getIdentifierlistAssignment_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fielddecl__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFielddeclAccess().getTypeAssignment_0_0_1()); }
	(rule__Fielddecl__TypeAssignment_0_0_1)
	{ after(grammarAccess.getFielddeclAccess().getTypeAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Embeddedfield__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Embeddedfield__Group__0__Impl
	rule__Embeddedfield__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Embeddedfield__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedfieldAccess().getAsteriskKeyword_0()); }
	('*')?
	{ after(grammarAccess.getEmbeddedfieldAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Embeddedfield__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Embeddedfield__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Embeddedfield__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmbeddedfieldAccess().getTypenameParserRuleCall_1()); }
	ruletypename
	{ after(grammarAccess.getEmbeddedfieldAccess().getTypenameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__0__Impl
	rule__Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__1__Impl
	rule__Type__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
	(rule__Type__TypeAssignment_2_1)
	{ after(grammarAccess.getTypeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arraytype__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arraytype__Group__0__Impl
	rule__Arraytype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraytypeAccess().getGroup_0()); }
	(rule__Arraytype__Group_0__0)
	{ after(grammarAccess.getArraytypeAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arraytype__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraytypeAccess().getElementtypeAssignment_1()); }
	(rule__Arraytype__ElementtypeAssignment_1)
	{ after(grammarAccess.getArraytypeAccess().getElementtypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arraytype__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arraytype__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraytypeAccess().getGroup_0_0()); }
	(rule__Arraytype__Group_0_0__0)
	{ after(grammarAccess.getArraytypeAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arraytype__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arraytype__Group_0_0__0__Impl
	rule__Arraytype__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraytypeAccess().getLeftSquareBracketKeyword_0_0_0()); }
	'['
	{ after(grammarAccess.getArraytypeAccess().getLeftSquareBracketKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arraytype__Group_0_0__1__Impl
	rule__Arraytype__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraytypeAccess().getExpressionAssignment_0_0_1()); }
	(rule__Arraytype__ExpressionAssignment_0_0_1)
	{ after(grammarAccess.getArraytypeAccess().getExpressionAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arraytype__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraytypeAccess().getRightSquareBracketKeyword_0_0_2()); }
	']'
	{ after(grammarAccess.getArraytypeAccess().getRightSquareBracketKeyword_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typename__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typename__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typename__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypenameAccess().getGroup_0_0()); }
	(rule__Typename__Group_0_0__0)
	{ after(grammarAccess.getTypenameAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Typename__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typename__Group_0_0__0__Impl
	rule__Typename__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typename__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypenameAccess().getPackagenameParserRuleCall_0_0_0()); }
	rulepackagename
	{ after(grammarAccess.getTypenameAccess().getPackagenameParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typename__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Typename__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typename__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypenameAccess().getQualified_identParserRuleCall_0_0_1()); }
	rulequalified_ident
	{ after(grammarAccess.getTypenameAccess().getQualified_identParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Raw_string_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__0__Impl
	rule__Raw_string_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getGraveAccentKeyword_0()); }
	'`'
	{ after(grammarAccess.getRaw_string_litAccess().getGraveAccentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__1__Impl
	rule__Raw_string_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getAlternatives_1()); }
	(rule__Raw_string_lit__Alternatives_1)*
	{ after(grammarAccess.getRaw_string_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Raw_string_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Raw_string_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRaw_string_litAccess().getGraveAccentKeyword_2()); }
	'`'
	{ after(grammarAccess.getRaw_string_litAccess().getGraveAccentKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interpreted_string_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__0__Impl
	rule__Interpreted_string_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__1__Impl
	rule__Interpreted_string_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
	(rule__Interpreted_string_lit__Alternatives_1)*
	{ after(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interpreted_string_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interpreted_string_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
	'"'
	{ after(grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rune_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__0__Impl
	rule__Rune_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__1__Impl
	rule__Rune_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getAlternatives_1()); }
	(rule__Rune_lit__Alternatives_1)
	{ after(grammarAccess.getRune_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rune_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rune_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
	'\''
	{ after(grammarAccess.getRune_litAccess().getApostropheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__0__Impl
	rule__Hex_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getDigitZeroKeyword_0()); }
	'0'
	{ after(grammarAccess.getHex_litAccess().getDigitZeroKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__1__Impl
	rule__Hex_lit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_litAccess().getAlternatives_1()); }
	(rule__Hex_lit__Alternatives_1)
	{ after(grammarAccess.getHex_litAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_lit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_lit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
		(RULE_HEX_DIGIT)
		{ after(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
	)
	(
		{ before(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
		(RULE_HEX_DIGIT)*
		{ after(grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Imaginary_lit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imaginary_lit__Group__0__Impl
	rule__Imaginary_lit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImaginary_litAccess().getAlternatives_0()); }
	(rule__Imaginary_lit__Alternatives_0)
	{ after(grammarAccess.getImaginary_litAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imaginary_lit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imaginary_lit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImaginary_litAccess().getIKeyword_1()); }
	'i'
	{ after(grammarAccess.getImaginary_litAccess().getIKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__0__Impl
	rule__Float_lit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__1__Impl
	rule__Float_lit__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__2__Impl
	rule__Float_lit__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_2()); }
	(ruledecimals)?
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_0_3()); }
	(ruleexponent)?
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1__0__Impl
	rule__Float_lit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_1()); }
	ruleexponent
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float_lit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__0__Impl
	rule__Float_lit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__1__Impl
	rule__Float_lit__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1()); }
	ruledecimals
	{ after(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float_lit__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_lit__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_2_2()); }
	(ruleexponent)?
	{ after(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__0__Impl
	rule__Exponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_0()); }
	(rule__Exponent__Alternatives_0)
	{ after(grammarAccess.getExponentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__1__Impl
	rule__Exponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getAlternatives_1()); }
	(rule__Exponent__Alternatives_1)?
	{ after(grammarAccess.getExponentAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExponentAccess().getDecimalsParserRuleCall_2()); }
	ruledecimals
	{ after(grammarAccess.getExponentAccess().getDecimalsParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Hex_byte_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__0__Impl
	rule__Hex_byte_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getBackslashKeyword_0()); }
	'\\'
	{ after(grammarAccess.getHex_byte_valueAccess().getBackslashKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__1__Impl
	rule__Hex_byte_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getXKeyword_1()); }
	'x'
	{ after(grammarAccess.getHex_byte_valueAccess().getXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__2__Impl
	rule__Hex_byte_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Hex_byte_value__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex_byte_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Octal_byte_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__0__Impl
	rule__Octal_byte_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getBackslashKeyword_0()); }
	'\\'
	{ after(grammarAccess.getOctal_byte_valueAccess().getBackslashKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__1__Impl
	rule__Octal_byte_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__2__Impl
	rule__Octal_byte_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Octal_byte_value__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Octal_byte_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3()); }
	RULE_OCTAL_DIGIT
	{ after(grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Big_u_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__0__Impl
	rule__Big_u_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getBackslashKeyword_0()); }
	'\\'
	{ after(grammarAccess.getBig_u_valueAccess().getBackslashKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__1__Impl
	rule__Big_u_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getUKeyword_1()); }
	'U'
	{ after(grammarAccess.getBig_u_valueAccess().getUKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__2__Impl
	rule__Big_u_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__3__Impl
	rule__Big_u_value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__4__Impl
	rule__Big_u_value__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__5__Impl
	rule__Big_u_value__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__6__Impl
	rule__Big_u_value__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__7__Impl
	rule__Big_u_value__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__8__Impl
	rule__Big_u_value__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Big_u_value__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Big_u_value__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Little_u_value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__0__Impl
	rule__Little_u_value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getBackslashKeyword_0()); }
	'\\'
	{ after(grammarAccess.getLittle_u_valueAccess().getBackslashKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__1__Impl
	rule__Little_u_value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getUKeyword_1()); }
	'u'
	{ after(grammarAccess.getLittle_u_valueAccess().getUKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__2__Impl
	rule__Little_u_value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__3__Impl
	rule__Little_u_value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__4__Impl
	rule__Little_u_value__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Little_u_value__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Little_u_value__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
	RULE_HEX_DIGIT
	{ after(grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsResultParserRuleCall_0()); }
		ruleresult
		{ after(grammarAccess.getModelAccess().getElementsResultParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionauxAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionauxExpressionauxParserRuleCall_1_0()); }
		ruleexpressionaux
		{ after(grammarAccess.getExpressionAccess().getExpressionauxExpressionauxParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__ExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionauxAccess().getExpressionExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionauxAccess().getExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__BINARY_OPAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionauxAccess().getBINARY_OPBINARY_OPTerminalRuleCall_1_0()); }
		RULE_BINARY_OP
		{ after(grammarAccess.getExpressionauxAccess().getBINARY_OPBINARY_OPTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionaux__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionauxAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionauxAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unaryexpr__PrimaryexprAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryexprAccess().getPrimaryexprPrimaryexprParserRuleCall_0_0()); }
		ruleprimaryexpr
		{ after(grammarAccess.getUnaryexprAccess().getPrimaryexprPrimaryexprParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unaryexpr__UNARY_OPAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryexprAccess().getUNARY_OPUNARY_OPTerminalRuleCall_1_0_0()); }
		RULE_UNARY_OP
		{ after(grammarAccess.getUnaryexprAccess().getUNARY_OPUNARY_OPTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unaryexpr__UnaryexprAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryexprAccess().getUnaryexprUnaryexprParserRuleCall_1_1_0()); }
		ruleunaryexpr
		{ after(grammarAccess.getUnaryexprAccess().getUnaryexprUnaryexprParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__OperandAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getOperandOperandParserRuleCall_0_0_0()); }
		ruleoperand
		{ after(grammarAccess.getPrimaryexprAccess().getOperandOperandParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__PrimaryexprauxAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_0_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__ConversionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getConversionConversionParserRuleCall_1_0_0()); }
		ruleconversion
		{ after(grammarAccess.getPrimaryexprAccess().getConversionConversionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__PrimaryexprauxAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_1_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__MethodexprAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getMethodexprMethodexprParserRuleCall_2_0_0()); }
		rulemethodexpr
		{ after(grammarAccess.getPrimaryexprAccess().getMethodexprMethodexprParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpr__PrimaryexprauxAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_2_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__SelectorAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getSelectorSelectorParserRuleCall_0_0_0()); }
		ruleselector
		{ after(grammarAccess.getPrimaryexprauxAccess().getSelectorSelectorParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__PrimaryexprauxAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_0_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__IndexAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getIndexIndexParserRuleCall_1_0_0()); }
		ruleindex
		{ after(grammarAccess.getPrimaryexprauxAccess().getIndexIndexParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__PrimaryexprauxAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_1_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__SliceAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getSliceSliceParserRuleCall_2_0_0()); }
		ruleslice
		{ after(grammarAccess.getPrimaryexprauxAccess().getSliceSliceParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__PrimaryexprauxAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_2_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__TypeassertionAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getTypeassertionTypeassertionParserRuleCall_3_0_0()); }
		ruletypeassertion
		{ after(grammarAccess.getPrimaryexprauxAccess().getTypeassertionTypeassertionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__PrimaryexprauxAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_3_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__ArgumentsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getArgumentsArgumentsParserRuleCall_4_0_0()); }
		rulearguments
		{ after(grammarAccess.getPrimaryexprauxAccess().getArgumentsArgumentsParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__PrimaryexprauxAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_4_1_0()); }
		ruleprimaryexpraux
		{ after(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primaryexpraux__WSAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryexprauxAccess().getWSWSTerminalRuleCall_5_1_0()); }
		RULE_WS
		{ after(grammarAccess.getPrimaryexprauxAccess().getWSWSTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_4_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_4_0_0_0_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_4_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_4_0_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_4_0_0_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_4_0_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slice__ExpressionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_4_1_0()); }
		ruleexpression
		{ after(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodexpr__ReceivertypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodexprAccess().getReceivertypeReceivertypeParserRuleCall_0_0()); }
		rulereceivertype
		{ after(grammarAccess.getMethodexprAccess().getReceivertypeReceivertypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodexpr__MethodnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodexprAccess().getMethodnameMethodnameParserRuleCall_2_0()); }
		rulemethodname
		{ after(grammarAccess.getMethodexprAccess().getMethodnameMethodnameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
		ruletype
		{ after(grammarAccess.getConversionAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conversion__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__ExpressionAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_0_0_1_0()); }
		ruleexpression
		{ after(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__LiteralAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_1_0()); }
		ruleliteral
		{ after(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operand__OperandnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperandAccess().getOperandnameOperandnameParserRuleCall_2_0()); }
		ruleoperandname
		{ after(grammarAccess.getOperandAccess().getOperandnameOperandnameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compositelit__LiteraltypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositelitAccess().getLiteraltypeLiteraltypeParserRuleCall_0_0()); }
		ruleliteraltype
		{ after(grammarAccess.getCompositelitAccess().getLiteraltypeLiteraltypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compositelit__LiteralvalueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositelitAccess().getLiteralvalueLiteralvalueParserRuleCall_1_0()); }
		ruleliteralvalue
		{ after(grammarAccess.getCompositelitAccess().getLiteralvalueLiteralvalueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__StructtypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraltypeAccess().getStructtypeStructtypeParserRuleCall_0_0()); }
		rulestructtype
		{ after(grammarAccess.getLiteraltypeAccess().getStructtypeStructtypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__ElementtypeAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraltypeAccess().getElementtypeElementtypeParserRuleCall_1_3_0()); }
		ruleelementtype
		{ after(grammarAccess.getLiteraltypeAccess().getElementtypeElementtypeParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__SlicetypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraltypeAccess().getSlicetypeSlicetypeParserRuleCall_2_0()); }
		ruleslicetype
		{ after(grammarAccess.getLiteraltypeAccess().getSlicetypeSlicetypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__MaptypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraltypeAccess().getMaptypeMaptypeParserRuleCall_3_0()); }
		rulemaptype
		{ after(grammarAccess.getLiteraltypeAccess().getMaptypeMaptypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literaltype__TypenameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteraltypeAccess().getTypenameTypenameParserRuleCall_4_0()); }
		ruletypename
		{ after(grammarAccess.getLiteraltypeAccess().getTypenameTypenameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literalvalue__ElementlistAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralvalueAccess().getElementlistElementlistParserRuleCall_2_0_0()); }
		ruleelementlist
		{ after(grammarAccess.getLiteralvalueAccess().getElementlistElementlistParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Elementlist__KeyedelementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementlistAccess().getKeyedelementKeyedelementParserRuleCall_1_1_0()); }
		rulekeyedelement
		{ after(grammarAccess.getElementlistAccess().getKeyedelementKeyedelementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyedelement__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyedelementAccess().getElementElementParserRuleCall_1_0()); }
		ruleelement
		{ after(grammarAccess.getKeyedelementAccess().getElementElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__FieldnameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getFieldnameFieldnameParserRuleCall_0_1_0()); }
		rulefieldname
		{ after(grammarAccess.getKeyAccess().getFieldnameFieldnameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Key__LiteralvalueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyAccess().getLiteralvalueLiteralvalueParserRuleCall_2_0()); }
		ruleliteralvalue
		{ after(grammarAccess.getKeyAccess().getLiteralvalueLiteralvalueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functionlit__SignatureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionlitAccess().getSignatureSignatureParserRuleCall_1_0()); }
		rulesignature
		{ after(grammarAccess.getFunctionlitAccess().getSignatureSignatureParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functionlit__FunctionbodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionlitAccess().getFunctionbodyFunctionbodyParserRuleCall_2_0()); }
		rulefunctionbody
		{ after(grammarAccess.getFunctionlitAccess().getFunctionbodyFunctionbodyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeclarationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
		ruledeclaration
		{ after(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LabeledstmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabeledstmtLabeledstmtParserRuleCall_1_0()); }
		rulelabeledstmt
		{ after(grammarAccess.getStatementAccess().getLabeledstmtLabeledstmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SimplestmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSimplestmtSimplestmtParserRuleCall_2_0()); }
		rulesimplestmt
		{ after(grammarAccess.getStatementAccess().getSimplestmtSimplestmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GotstmtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGotstmtGotstmtParserRuleCall_3_0()); }
		rulegotstmt
		{ after(grammarAccess.getStatementAccess().getGotstmtGotstmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ReturnstmtAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getReturnstmtReturnstmtParserRuleCall_4_0()); }
		rulereturnstmt
		{ after(grammarAccess.getStatementAccess().getReturnstmtReturnstmtParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BreakstmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBreakstmtBreakstmtParserRuleCall_5_0()); }
		rulebreakstmt
		{ after(grammarAccess.getStatementAccess().getBreakstmtBreakstmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ContinuestmtAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getContinuestmtContinuestmtParserRuleCall_6_0()); }
		rulecontinuestmt
		{ after(grammarAccess.getStatementAccess().getContinuestmtContinuestmtParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__GotostmtAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGotostmtGotostmtParserRuleCall_7_0()); }
		rulegotostmt
		{ after(grammarAccess.getStatementAccess().getGotostmtGotostmtParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FallthroughstmtAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFallthroughstmtFallthroughstmtParserRuleCall_8_0()); }
		rulefallthroughstmt
		{ after(grammarAccess.getStatementAccess().getFallthroughstmtFallthroughstmtParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__BlockAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
		ruleblock
		{ after(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfstmtAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfstmtIfstmtParserRuleCall_10_0()); }
		ruleifstmt
		{ after(grammarAccess.getStatementAccess().getIfstmtIfstmtParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SwitchstmtAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSwitchstmtSwitchstmtParserRuleCall_11_0()); }
		ruleswitchstmt
		{ after(grammarAccess.getStatementAccess().getSwitchstmtSwitchstmtParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SelectstmtAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSelectstmtSelectstmtParserRuleCall_12_0()); }
		ruleselectstmt
		{ after(grammarAccess.getStatementAccess().getSelectstmtSelectstmtParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForstmtAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getForstmtForstmtParserRuleCall_13_0()); }
		ruleforstmt
		{ after(grammarAccess.getStatementAccess().getForstmtForstmtParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DeferstmtAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDeferstmtDeferstmtParserRuleCall_14_0()); }
		ruledeferstmt
		{ after(grammarAccess.getStatementAccess().getDeferstmtDeferstmtParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ConstdeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getConstdeclConstdeclParserRuleCall_0_0()); }
		ruleconstdecl
		{ after(grammarAccess.getDeclarationAccess().getConstdeclConstdeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypedeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getTypedeclTypedeclParserRuleCall_1_0()); }
		ruletypedecl
		{ after(grammarAccess.getDeclarationAccess().getTypedeclTypedeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VardeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getVardeclVardeclParserRuleCall_2_0()); }
		rulevardecl
		{ after(grammarAccess.getDeclarationAccess().getVardeclVardeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__VarspecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVardeclAccess().getVarspecVarspecParserRuleCall_2_0_0()); }
		rulevarspec
		{ after(grammarAccess.getVardeclAccess().getVarspecVarspecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Vardecl__VarspecAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVardeclAccess().getVarspecVarspecParserRuleCall_2_1_1_0_0()); }
		rulevarspec
		{ after(grammarAccess.getVardeclAccess().getVarspecVarspecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__IdentifierlistAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarspecAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
		ruleidentifierlist
		{ after(grammarAccess.getVarspecAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__TypeAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarspecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
		ruletype
		{ after(grammarAccess.getVarspecAccess().getTypeTypeParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__ExpressionlistAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarspecAccess().getExpressionlistExpressionlistParserRuleCall_1_0_1_1_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getVarspecAccess().getExpressionlistExpressionlistParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varspec__ExpressionlistAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarspecAccess().getExpressionlistExpressionlistParserRuleCall_1_1_1_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getVarspecAccess().getExpressionlistExpressionlistParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__TypespecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedeclAccess().getTypespecTypespecParserRuleCall_2_0_0()); }
		ruletypespec
		{ after(grammarAccess.getTypedeclAccess().getTypespecTypespecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedecl__TypespecAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedeclAccess().getTypespecTypespecParserRuleCall_2_1_1_0_0()); }
		ruletypespec
		{ after(grammarAccess.getTypedeclAccess().getTypespecTypespecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typespec__IDENTIFIERAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypespecAccess().getIDENTIFIERIDENTIFIERTerminalRuleCall_0_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getTypespecAccess().getIDENTIFIERIDENTIFIERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typespec__TypespecauxAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypespecAccess().getTypespecauxTypespecauxParserRuleCall_1_0()); }
		ruletypespecaux
		{ after(grammarAccess.getTypespecAccess().getTypespecauxTypespecauxParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typedef__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypedefAccess().getTypeTypeParserRuleCall_0()); }
		ruletype
		{ after(grammarAccess.getTypedefAccess().getTypeTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasdecl__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAliasdeclAccess().getTypeTypeParserRuleCall_1_0()); }
		ruletype
		{ after(grammarAccess.getAliasdeclAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topleveldecl__FunctiondeclAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopleveldeclAccess().getFunctiondeclFunctiondeclParserRuleCall_1_0()); }
		rulefunctiondecl
		{ after(grammarAccess.getTopleveldeclAccess().getFunctiondeclFunctiondeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Topleveldecl__MethoddeclAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopleveldeclAccess().getMethoddeclMethoddeclParserRuleCall_2_0()); }
		rulemethoddecl
		{ after(grammarAccess.getTopleveldeclAccess().getMethoddeclMethoddeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__ReceiverAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethoddeclAccess().getReceiverReceiverParserRuleCall_1_0()); }
		rulereceiver
		{ after(grammarAccess.getMethoddeclAccess().getReceiverReceiverParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__MethodnameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethoddeclAccess().getMethodnameMethodnameParserRuleCall_2_0()); }
		rulemethodname
		{ after(grammarAccess.getMethoddeclAccess().getMethodnameMethodnameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__SignatureAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethoddeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
		rulesignature
		{ after(grammarAccess.getMethoddeclAccess().getSignatureSignatureParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methoddecl__FunctionbodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethoddeclAccess().getFunctionbodyFunctionbodyParserRuleCall_4_0()); }
		rulefunctionbody
		{ after(grammarAccess.getMethoddeclAccess().getFunctionbodyFunctionbodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__FunctionnameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctiondeclAccess().getFunctionnameFunctionnameParserRuleCall_1_0()); }
		rulefunctionname
		{ after(grammarAccess.getFunctiondeclAccess().getFunctionnameFunctionnameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__SignatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctiondeclAccess().getSignatureSignatureParserRuleCall_2_0()); }
		rulesignature
		{ after(grammarAccess.getFunctiondeclAccess().getSignatureSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Functiondecl__FunctionbodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctiondeclAccess().getFunctionbodyFunctionbodyParserRuleCall_3_0()); }
		rulefunctionbody
		{ after(grammarAccess.getFunctiondeclAccess().getFunctionbodyFunctionbodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__ConstspecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstdeclAccess().getConstspecConstspecParserRuleCall_2_0_0()); }
		ruleconstspec
		{ after(grammarAccess.getConstdeclAccess().getConstspecConstspecParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constdecl__ConstspecAssignment_2_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstdeclAccess().getConstspecConstspecParserRuleCall_2_1_1_0_0()); }
		ruleconstspec
		{ after(grammarAccess.getConstdeclAccess().getConstspecConstspecParserRuleCall_2_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__IdentifierlistAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstspecAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
		ruleidentifierlist
		{ after(grammarAccess.getConstspecAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstspecAccess().getTypeTypeParserRuleCall_1_0_0()); }
		ruletype
		{ after(grammarAccess.getConstspecAccess().getTypeTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constspec__ExpressionlistAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstspecAccess().getExpressionlistExpressionlistParserRuleCall_1_2_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getConstspecAccess().getExpressionlistExpressionlistParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simplestmt__EmptystmtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimplestmtAccess().getEmptystmtEmptystmtParserRuleCall_0_0()); }
		ruleemptystmt
		{ after(grammarAccess.getSimplestmtAccess().getEmptystmtEmptystmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simplestmt__ExpressionstmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimplestmtAccess().getExpressionstmtExpressionstmtParserRuleCall_1_0()); }
		ruleexpressionstmt
		{ after(grammarAccess.getSimplestmtAccess().getExpressionstmtExpressionstmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simplestmt__SendstmtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimplestmtAccess().getSendstmtSendstmtParserRuleCall_2_0()); }
		rulesendstmt
		{ after(grammarAccess.getSimplestmtAccess().getSendstmtSendstmtParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simplestmt__IncdecstmtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimplestmtAccess().getIncdecstmtIncdecstmtParserRuleCall_3_0()); }
		ruleincdecstmt
		{ after(grammarAccess.getSimplestmtAccess().getIncdecstmtIncdecstmtParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simplestmt__AssignmentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimplestmtAccess().getAssignmentAssignmentParserRuleCall_4_0()); }
		ruleassignment
		{ after(grammarAccess.getSimplestmtAccess().getAssignmentAssignmentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simplestmt__ShortvardeclAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimplestmtAccess().getShortvardeclShortvardeclParserRuleCall_5_0()); }
		ruleshortvardecl
		{ after(grammarAccess.getSimplestmtAccess().getShortvardeclShortvardeclParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortvardecl__IdentifierlistAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortvardeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
		ruleidentifierlist
		{ after(grammarAccess.getShortvardeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Shortvardecl__ExpressionlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShortvardeclAccess().getExpressionlistExpressionlistParserRuleCall_2_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getShortvardeclAccess().getExpressionlistExpressionlistParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Returnstmt__ExpressionlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnstmtAccess().getExpressionlistExpressionlistParserRuleCall_2_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getReturnstmtAccess().getExpressionlistExpressionlistParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selectstmt__CommclauseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectstmtAccess().getCommclauseCommclauseParserRuleCall_3_0()); }
		rulecommclause
		{ after(grammarAccess.getSelectstmtAccess().getCommclauseCommclauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commclause__StatementlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommclauseAccess().getStatementlistStatementlistParserRuleCall_2_0()); }
		rulestatementlist
		{ after(grammarAccess.getCommclauseAccess().getStatementlistStatementlistParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__SendstmtAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommcaseAccess().getSendstmtSendstmtParserRuleCall_0_1_0_0()); }
		rulesendstmt
		{ after(grammarAccess.getCommcaseAccess().getSendstmtSendstmtParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commcase__RecvstmtAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommcaseAccess().getRecvstmtRecvstmtParserRuleCall_0_1_1_0()); }
		rulerecvstmt
		{ after(grammarAccess.getCommcaseAccess().getRecvstmtRecvstmtParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__IdentifierlistAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvstmtAccess().getIdentifierlistIdentifierlistParserRuleCall_0_1_0_0()); }
		ruleidentifierlist
		{ after(grammarAccess.getRecvstmtAccess().getIdentifierlistIdentifierlistParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Recvstmt__RecvexprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecvstmtAccess().getRecvexprRecvexprParserRuleCall_1_0()); }
		rulerecvexpr
		{ after(grammarAccess.getRecvstmtAccess().getRecvexprRecvexprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forstmt__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForstmtAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleblock
		{ after(grammarAccess.getForstmtAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__ExpressionlistAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeclauseAccess().getExpressionlistExpressionlistParserRuleCall_0_0_0_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getRangeclauseAccess().getExpressionlistExpressionlistParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__IdentifierlistAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeclauseAccess().getIdentifierlistIdentifierlistParserRuleCall_0_1_0_0()); }
		ruleidentifierlist
		{ after(grammarAccess.getRangeclauseAccess().getIdentifierlistIdentifierlistParserRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rangeclause__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeclauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getRangeclauseAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__InitstmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForclauseAccess().getInitstmtInitstmtParserRuleCall_1_0()); }
		ruleinitstmt
		{ after(grammarAccess.getForclauseAccess().getInitstmtInitstmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForclauseAccess().getConditionConditionParserRuleCall_3_0()); }
		rulecondition
		{ after(grammarAccess.getForclauseAccess().getConditionConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Forclause__PoststmtAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForclauseAccess().getPoststmtPoststmtParserRuleCall_5_0()); }
		rulepoststmt
		{ after(grammarAccess.getForclauseAccess().getPoststmtPoststmtParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switchstmt__ExprswitchstmtAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchstmtAccess().getExprswitchstmtExprswitchstmtParserRuleCall_0_0()); }
		ruleexprswitchstmt
		{ after(grammarAccess.getSwitchstmtAccess().getExprswitchstmtExprswitchstmtParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Switchstmt__TypeswitchstmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchstmtAccess().getTypeswitchstmtTypeswitchstmtParserRuleCall_1_0()); }
		ruletypeswitchstmt
		{ after(grammarAccess.getSwitchstmtAccess().getTypeswitchstmtTypeswitchstmtParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__SimplestmtAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprswitchstmtAccess().getSimplestmtSimplestmtParserRuleCall_2_0_0()); }
		rulesimplestmt
		{ after(grammarAccess.getExprswitchstmtAccess().getSimplestmtSimplestmtParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprswitchstmtAccess().getExpressionExpressionParserRuleCall_3_0()); }
		ruleexpression
		{ after(grammarAccess.getExprswitchstmtAccess().getExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchstmt__ExprcaseclauseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprswitchstmtAccess().getExprcaseclauseExprcaseclauseParserRuleCall_5_0()); }
		ruleexprcaseclause
		{ after(grammarAccess.getExprswitchstmtAccess().getExprcaseclauseExprcaseclauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprcaseclause__ExprswitchcaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprcaseclauseAccess().getExprswitchcaseExprswitchcaseParserRuleCall_0_0()); }
		ruleexprswitchcase
		{ after(grammarAccess.getExprcaseclauseAccess().getExprswitchcaseExprswitchcaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprcaseclause__StatementlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprcaseclauseAccess().getStatementlistStatementlistParserRuleCall_2_0()); }
		rulestatementlist
		{ after(grammarAccess.getExprcaseclauseAccess().getStatementlistStatementlistParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exprswitchcase__ExpressionlistAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprswitchcaseAccess().getExpressionlistExpressionlistParserRuleCall_0_1_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getExprswitchcaseAccess().getExpressionlistExpressionlistParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__TypeswitchguardAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeswitchstmtAccess().getTypeswitchguardTypeswitchguardParserRuleCall_2_0()); }
		ruletypeswitchguard
		{ after(grammarAccess.getTypeswitchstmtAccess().getTypeswitchguardTypeswitchguardParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchstmt__TypecaseclauseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeswitchstmtAccess().getTypecaseclauseTypecaseclauseParserRuleCall_4_0()); }
		ruletypecaseclause
		{ after(grammarAccess.getTypeswitchstmtAccess().getTypecaseclauseTypecaseclauseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__IDENTIFIERAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeswitchguardAccess().getIDENTIFIERIDENTIFIERTerminalRuleCall_0_0_0()); }
		RULE_IDENTIFIER
		{ after(grammarAccess.getTypeswitchguardAccess().getIDENTIFIERIDENTIFIERTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchguard__PrimaryexprAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeswitchguardAccess().getPrimaryexprPrimaryexprParserRuleCall_1_0()); }
		ruleprimaryexpr
		{ after(grammarAccess.getTypeswitchguardAccess().getPrimaryexprPrimaryexprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typecaseclause__TypeswitchcaseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypecaseclauseAccess().getTypeswitchcaseTypeswitchcaseParserRuleCall_0_0()); }
		ruletypeswitchcase
		{ after(grammarAccess.getTypecaseclauseAccess().getTypeswitchcaseTypeswitchcaseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typecaseclause__StatementlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypecaseclauseAccess().getStatementlistStatementlistParserRuleCall_2_0()); }
		rulestatementlist
		{ after(grammarAccess.getTypecaseclauseAccess().getStatementlistStatementlistParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typeswitchcase__TypelistAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeswitchcaseAccess().getTypelistTypelistParserRuleCall_0_1_0()); }
		ruletypelist
		{ after(grammarAccess.getTypeswitchcaseAccess().getTypelistTypelistParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelist__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelistAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruletype
		{ after(grammarAccess.getTypelistAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__SimplestmtAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfstmtAccess().getSimplestmtSimplestmtParserRuleCall_1_0_0()); }
		rulesimplestmt
		{ after(grammarAccess.getIfstmtAccess().getSimplestmtSimplestmtParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfstmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getIfstmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__BlockAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfstmtAccess().getBlockBlockParserRuleCall_3_0()); }
		ruleblock
		{ after(grammarAccess.getIfstmtAccess().getBlockBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__IfstmtAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfstmtAccess().getIfstmtIfstmtParserRuleCall_4_1_0_0()); }
		ruleifstmt
		{ after(grammarAccess.getIfstmtAccess().getIfstmtIfstmtParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ifstmt__BlockAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfstmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); }
		ruleblock
		{ after(grammarAccess.getIfstmtAccess().getBlockBlockParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionlistAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionlistExpressionlistParserRuleCall_0_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getAssignmentAccess().getExpressionlistExpressionlistParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ASSIGN_OPAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getASSIGN_OPASSIGN_OPTerminalRuleCall_1_0()); }
		RULE_ASSIGN_OP
		{ after(grammarAccess.getAssignmentAccess().getASSIGN_OPASSIGN_OPTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpressionlistExpressionlistParserRuleCall_2_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getAssignmentAccess().getExpressionlistExpressionlistParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sendstmt__ChannelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendstmtAccess().getChannelChannelParserRuleCall_0_0()); }
		rulechannel
		{ after(grammarAccess.getSendstmtAccess().getChannelChannelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sendstmt__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendstmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getSendstmtAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeledstmt__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledstmtAccess().getLabelLabelParserRuleCall_0_0()); }
		rulelabel
		{ after(grammarAccess.getLabeledstmtAccess().getLabelLabelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Labeledstmt__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledstmtAccess().getStatementStatementParserRuleCall_2_0()); }
		rulestatement
		{ after(grammarAccess.getLabeledstmtAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statementlist__StatementAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementlistAccess().getStatementStatementParserRuleCall_1_0_0()); }
		rulestatement
		{ after(grammarAccess.getStatementlistAccess().getStatementStatementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionlistAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionlistExpressionlistParserRuleCall_2_0_0_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getArgumentsAccess().getExpressionlistExpressionlistParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__TypeAssignment_2_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
		ruletype
		{ after(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arguments__ExpressionlistAssignment_2_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentsAccess().getExpressionlistExpressionlistParserRuleCall_2_0_1_1_1_0()); }
		ruleexpressionlist
		{ after(grammarAccess.getArgumentsAccess().getExpressionlistExpressionlistParserRuleCall_2_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expressionlist__ExpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionlistAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpressionlistAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__BasiclitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getBasiclitBasiclitParserRuleCall_0_0()); }
		rulebasiclit
		{ after(grammarAccess.getLiteralAccess().getBasiclitBasiclitParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__CompositelitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getCompositelitCompositelitParserRuleCall_1_0()); }
		rulecompositelit
		{ after(grammarAccess.getLiteralAccess().getCompositelitCompositelitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__FunctionlitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getFunctionlitFunctionlitParserRuleCall_2_0()); }
		rulefunctionlit
		{ after(grammarAccess.getLiteralAccess().getFunctionlitFunctionlitParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Maptype__ElementtypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaptypeAccess().getElementtypeElementtypeParserRuleCall_4_0()); }
		ruleelementtype
		{ after(grammarAccess.getMaptypeAccess().getElementtypeElementtypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfacetype__MethodspecAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfacetypeAccess().getMethodspecMethodspecParserRuleCall_3_0_0()); }
		rulemethodspec
		{ after(grammarAccess.getInterfacetypeAccess().getMethodspecMethodspecParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodspec__MethodnameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodspecAccess().getMethodnameMethodnameParserRuleCall_0_0_0()); }
		rulemethodname
		{ after(grammarAccess.getMethodspecAccess().getMethodnameMethodnameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodspec__SignatureAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodspecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
		rulesignature
		{ after(grammarAccess.getMethodspecAccess().getSignatureSignatureParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methodspec__InterfacetypenameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodspecAccess().getInterfacetypenameInterfacetypenameParserRuleCall_1_0()); }
		ruleinterfacetypename
		{ after(grammarAccess.getMethodspecAccess().getInterfacetypenameInterfacetypenameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
		ruleparameters
		{ after(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__ResultAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
		ruleresult
		{ after(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameters__ParameterlistAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParametersAccess().getParameterlistParameterlistParserRuleCall_2_0_0()); }
		ruleparameterlist
		{ after(grammarAccess.getParametersAccess().getParameterlistParameterlistParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__ParameterdeclAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterlistAccess().getParameterdeclParameterdeclParserRuleCall_0_0()); }
		ruleparameterdecl
		{ after(grammarAccess.getParameterlistAccess().getParameterdeclParameterdeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterlist__ParameterdeclAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterlistAccess().getParameterdeclParameterdeclParserRuleCall_1_1_0()); }
		ruleparameterdecl
		{ after(grammarAccess.getParameterlistAccess().getParameterdeclParameterdeclParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterdecl__IdentifierlistAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterdeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
		ruleidentifierlist
		{ after(grammarAccess.getParameterdeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameterdecl__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterdeclAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getParameterdeclAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structtype__FielddeclAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructtypeAccess().getFielddeclFielddeclParserRuleCall_3_0_0()); }
		rulefielddecl
		{ after(grammarAccess.getStructtypeAccess().getFielddeclFielddeclParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__IdentifierlistAssignment_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFielddeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0_0_0()); }
		ruleidentifierlist
		{ after(grammarAccess.getFielddeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__TypeAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFielddeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
		ruletype
		{ after(grammarAccess.getFielddeclAccess().getTypeTypeParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__EmbeddedfieldAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFielddeclAccess().getEmbeddedfieldEmbeddedfieldParserRuleCall_0_1_0()); }
		ruleembeddedfield
		{ after(grammarAccess.getFielddeclAccess().getEmbeddedfieldEmbeddedfieldParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fielddecl__TagAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFielddeclAccess().getTagTagParserRuleCall_1_0()); }
		ruletag
		{ after(grammarAccess.getFielddeclAccess().getTagTagParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypenameTypenameParserRuleCall_0_0()); }
		ruletypename
		{ after(grammarAccess.getTypeAccess().getTypenameTypenameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypelitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypelitTypelitParserRuleCall_1_0()); }
		ruletypelit
		{ after(grammarAccess.getTypeAccess().getTypelitTypelitParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
		ruletype
		{ after(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__ArraytypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getArraytypeArraytypeParserRuleCall_0_0()); }
		rulearraytype
		{ after(grammarAccess.getTypelitAccess().getArraytypeArraytypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__StructtypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getStructtypeStructtypeParserRuleCall_1_0()); }
		rulestructtype
		{ after(grammarAccess.getTypelitAccess().getStructtypeStructtypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__PointertypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getPointertypePointertypeParserRuleCall_2_0()); }
		rulepointertype
		{ after(grammarAccess.getTypelitAccess().getPointertypePointertypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__FunctiontypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getFunctiontypeFunctiontypeParserRuleCall_3_0()); }
		rulefunctiontype
		{ after(grammarAccess.getTypelitAccess().getFunctiontypeFunctiontypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__InterfacetypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getInterfacetypeInterfacetypeParserRuleCall_4_0()); }
		ruleinterfacetype
		{ after(grammarAccess.getTypelitAccess().getInterfacetypeInterfacetypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__SlicetypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getSlicetypeSlicetypeParserRuleCall_5_0()); }
		ruleslicetype
		{ after(grammarAccess.getTypelitAccess().getSlicetypeSlicetypeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__MaptypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getMaptypeMaptypeParserRuleCall_6_0()); }
		rulemaptype
		{ after(grammarAccess.getTypelitAccess().getMaptypeMaptypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Typelit__ChanneltypeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypelitAccess().getChanneltypeChanneltypeParserRuleCall_7_0()); }
		rulechanneltype
		{ after(grammarAccess.getTypelitAccess().getChanneltypeChanneltypeParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__ExpressionAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraytypeAccess().getExpressionExpressionParserRuleCall_0_0_1_0()); }
		ruleexpression
		{ after(grammarAccess.getArraytypeAccess().getExpressionExpressionParserRuleCall_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arraytype__ElementtypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraytypeAccess().getElementtypeElementtypeParserRuleCall_1_0()); }
		ruleelementtype
		{ after(grammarAccess.getArraytypeAccess().getElementtypeElementtypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|RULE_DECIMAL_DIGIT)*;

fragment RULE_A_F : ('A'..'F'|'a'..'f');

RULE_LETTER : (RULE_A_F|'g'..'z'|'G'..'Z'|'_');

RULE_HEX_DIGIT : (RULE_DECIMAL_DIGIT|RULE_A_F);

RULE_OCTAL_DIGIT : '0'..'7';

RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_DECIMAL_DIGIT : (RULE_OCTAL_DIGIT|'8'|'9');

RULE_BINARY_OP : ('||'|'&&'|RULE_REL_OP|RULE_ADD_OP|RULE_MUL_OP);

fragment RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

fragment RULE_ADD_OP : ('+'|'-'|'|'|'^');

fragment RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_ASSIGN_OP : (RULE_ADD_OP|RULE_MUL_OP)? '=';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
