/*
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getImportdeclAccess().getAlternatives_1(), "rule__Importdecl__Alternatives_1");
			builder.put(grammarAccess.getImportspecAccess().getAlternatives_0(), "rule__Importspec__Alternatives_0");
			builder.put(grammarAccess.getUnaryexprAccess().getAlternatives(), "rule__Unaryexpr__Alternatives");
			builder.put(grammarAccess.getPrimaryexprAccess().getAlternatives(), "rule__Primaryexpr__Alternatives");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getAlternatives(), "rule__Primaryexpraux__Alternatives");
			builder.put(grammarAccess.getSliceAccess().getAlternatives_4(), "rule__Slice__Alternatives_4");
			builder.put(grammarAccess.getOperandAccess().getAlternatives(), "rule__Operand__Alternatives");
			builder.put(grammarAccess.getLiteraltypeAccess().getAlternatives(), "rule__Literaltype__Alternatives");
			builder.put(grammarAccess.getKeyAccess().getAlternatives(), "rule__Key__Alternatives");
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
			builder.put(grammarAccess.getDeclarationAccess().getAlternatives(), "rule__Declaration__Alternatives");
			builder.put(grammarAccess.getVardeclAccess().getAlternatives_2(), "rule__Vardecl__Alternatives_2");
			builder.put(grammarAccess.getVarspecAccess().getAlternatives_1(), "rule__Varspec__Alternatives_1");
			builder.put(grammarAccess.getTypedeclAccess().getAlternatives_2(), "rule__Typedecl__Alternatives_2");
			builder.put(grammarAccess.getTypespecauxAccess().getAlternatives(), "rule__Typespecaux__Alternatives");
			builder.put(grammarAccess.getTopleveldeclAccess().getAlternatives(), "rule__Topleveldecl__Alternatives");
			builder.put(grammarAccess.getConstdeclAccess().getAlternatives_2(), "rule__Constdecl__Alternatives_2");
			builder.put(grammarAccess.getSimplestmtAccess().getAlternatives(), "rule__Simplestmt__Alternatives");
			builder.put(grammarAccess.getCommcaseAccess().getAlternatives(), "rule__Commcase__Alternatives");
			builder.put(grammarAccess.getCommcaseAccess().getAlternatives_0_1(), "rule__Commcase__Alternatives_0_1");
			builder.put(grammarAccess.getRecvstmtAccess().getAlternatives_0(), "rule__Recvstmt__Alternatives_0");
			builder.put(grammarAccess.getForstmtAccess().getAlternatives_1(), "rule__Forstmt__Alternatives_1");
			builder.put(grammarAccess.getRangeclauseAccess().getAlternatives_0(), "rule__Rangeclause__Alternatives_0");
			builder.put(grammarAccess.getSwitchstmtAccess().getAlternatives(), "rule__Switchstmt__Alternatives");
			builder.put(grammarAccess.getExprswitchcaseAccess().getAlternatives(), "rule__Exprswitchcase__Alternatives");
			builder.put(grammarAccess.getTypeswitchcaseAccess().getAlternatives(), "rule__Typeswitchcase__Alternatives");
			builder.put(grammarAccess.getIfstmtAccess().getAlternatives_4_1(), "rule__Ifstmt__Alternatives_4_1");
			builder.put(grammarAccess.getIncdecstmtAccess().getAlternatives_1(), "rule__Incdecstmt__Alternatives_1");
			builder.put(grammarAccess.getArgumentsAccess().getAlternatives_2_0(), "rule__Arguments__Alternatives_2_0");
			builder.put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
			builder.put(grammarAccess.getBasiclitAccess().getAlternatives(), "rule__Basiclit__Alternatives");
			builder.put(grammarAccess.getOperandnameAccess().getAlternatives(), "rule__Operandname__Alternatives");
			builder.put(grammarAccess.getChanneltypeAccess().getAlternatives_0(), "rule__Channeltype__Alternatives_0");
			builder.put(grammarAccess.getMethodspecAccess().getAlternatives(), "rule__Methodspec__Alternatives");
			builder.put(grammarAccess.getResultAccess().getAlternatives(), "rule__Result__Alternatives");
			builder.put(grammarAccess.getFielddeclAccess().getAlternatives_0(), "rule__Fielddecl__Alternatives_0");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getTypelitAccess().getAlternatives(), "rule__Typelit__Alternatives");
			builder.put(grammarAccess.getTypenameAccess().getAlternatives(), "rule__Typename__Alternatives");
			builder.put(grammarAccess.getString_litAccess().getAlternatives(), "rule__String_lit__Alternatives");
			builder.put(grammarAccess.getRaw_string_litAccess().getAlternatives_1(), "rule__Raw_string_lit__Alternatives_1");
			builder.put(grammarAccess.getInterpreted_string_litAccess().getAlternatives_1(), "rule__Interpreted_string_lit__Alternatives_1");
			builder.put(grammarAccess.getRune_litAccess().getAlternatives_1(), "rule__Rune_lit__Alternatives_1");
			builder.put(grammarAccess.getInt_litAccess().getAlternatives(), "rule__Int_lit__Alternatives");
			builder.put(grammarAccess.getHex_litAccess().getAlternatives_1(), "rule__Hex_lit__Alternatives_1");
			builder.put(grammarAccess.getImaginary_litAccess().getAlternatives_0(), "rule__Imaginary_lit__Alternatives_0");
			builder.put(grammarAccess.getFloat_litAccess().getAlternatives(), "rule__Float_lit__Alternatives");
			builder.put(grammarAccess.getExponentAccess().getAlternatives_0(), "rule__Exponent__Alternatives_0");
			builder.put(grammarAccess.getExponentAccess().getAlternatives_1(), "rule__Exponent__Alternatives_1");
			builder.put(grammarAccess.getByte_valueAccess().getAlternatives(), "rule__Byte_value__Alternatives");
			builder.put(grammarAccess.getUnicode_valueAccess().getAlternatives(), "rule__Unicode_value__Alternatives");
			builder.put(grammarAccess.getUnicode_valueAccess().getAlternatives_0(), "rule__Unicode_value__Alternatives_0");
			builder.put(grammarAccess.getSourcefileAccess().getGroup(), "rule__Sourcefile__Group__0");
			builder.put(grammarAccess.getSourcefileAccess().getGroup_2(), "rule__Sourcefile__Group_2__0");
			builder.put(grammarAccess.getSourcefileAccess().getGroup_3(), "rule__Sourcefile__Group_3__0");
			builder.put(grammarAccess.getImportdeclAccess().getGroup(), "rule__Importdecl__Group__0");
			builder.put(grammarAccess.getImportdeclAccess().getGroup_1_1(), "rule__Importdecl__Group_1_1__0");
			builder.put(grammarAccess.getImportdeclAccess().getGroup_1_1_1(), "rule__Importdecl__Group_1_1_1__0");
			builder.put(grammarAccess.getImportspecAccess().getGroup(), "rule__Importspec__Group__0");
			builder.put(grammarAccess.getPackageclauseAccess().getGroup(), "rule__Packageclause__Group__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
			builder.put(grammarAccess.getExpressionauxAccess().getGroup(), "rule__Expressionaux__Group__0");
			builder.put(grammarAccess.getUnaryexprAccess().getGroup_1(), "rule__Unaryexpr__Group_1__0");
			builder.put(grammarAccess.getPrimaryexprAccess().getGroup_0(), "rule__Primaryexpr__Group_0__0");
			builder.put(grammarAccess.getPrimaryexprAccess().getGroup_1(), "rule__Primaryexpr__Group_1__0");
			builder.put(grammarAccess.getPrimaryexprAccess().getGroup_2(), "rule__Primaryexpr__Group_2__0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getGroup_0(), "rule__Primaryexpraux__Group_0__0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getGroup_1(), "rule__Primaryexpraux__Group_1__0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getGroup_2(), "rule__Primaryexpraux__Group_2__0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getGroup_3(), "rule__Primaryexpraux__Group_3__0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getGroup_4(), "rule__Primaryexpraux__Group_4__0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getGroup_5(), "rule__Primaryexpraux__Group_5__0");
			builder.put(grammarAccess.getIndexAccess().getGroup(), "rule__Index__Group__0");
			builder.put(grammarAccess.getSliceAccess().getGroup(), "rule__Slice__Group__0");
			builder.put(grammarAccess.getSliceAccess().getGroup_4_0(), "rule__Slice__Group_4_0__0");
			builder.put(grammarAccess.getSliceAccess().getGroup_4_0_0(), "rule__Slice__Group_4_0_0__0");
			builder.put(grammarAccess.getMethodexprAccess().getGroup(), "rule__Methodexpr__Group__0");
			builder.put(grammarAccess.getConversionAccess().getGroup(), "rule__Conversion__Group__0");
			builder.put(grammarAccess.getOperandAccess().getGroup_0(), "rule__Operand__Group_0__0");
			builder.put(grammarAccess.getOperandAccess().getGroup_0_0(), "rule__Operand__Group_0_0__0");
			builder.put(grammarAccess.getCompositelitAccess().getGroup(), "rule__Compositelit__Group__0");
			builder.put(grammarAccess.getLiteraltypeAccess().getGroup_1(), "rule__Literaltype__Group_1__0");
			builder.put(grammarAccess.getLiteralvalueAccess().getGroup(), "rule__Literalvalue__Group__0");
			builder.put(grammarAccess.getLiteralvalueAccess().getGroup_2(), "rule__Literalvalue__Group_2__0");
			builder.put(grammarAccess.getElementlistAccess().getGroup(), "rule__Elementlist__Group__0");
			builder.put(grammarAccess.getElementlistAccess().getGroup_1(), "rule__Elementlist__Group_1__0");
			builder.put(grammarAccess.getKeyedelementAccess().getGroup(), "rule__Keyedelement__Group__0");
			builder.put(grammarAccess.getKeyedelementAccess().getGroup_0(), "rule__Keyedelement__Group_0__0");
			builder.put(grammarAccess.getKeyAccess().getGroup_0(), "rule__Key__Group_0__0");
			builder.put(grammarAccess.getFunctionlitAccess().getGroup(), "rule__Functionlit__Group__0");
			builder.put(grammarAccess.getVardeclAccess().getGroup(), "rule__Vardecl__Group__0");
			builder.put(grammarAccess.getVardeclAccess().getGroup_2_1(), "rule__Vardecl__Group_2_1__0");
			builder.put(grammarAccess.getVardeclAccess().getGroup_2_1_1(), "rule__Vardecl__Group_2_1_1__0");
			builder.put(grammarAccess.getVarspecAccess().getGroup(), "rule__Varspec__Group__0");
			builder.put(grammarAccess.getVarspecAccess().getGroup_1_0(), "rule__Varspec__Group_1_0__0");
			builder.put(grammarAccess.getVarspecAccess().getGroup_1_0_1(), "rule__Varspec__Group_1_0_1__0");
			builder.put(grammarAccess.getVarspecAccess().getGroup_1_1(), "rule__Varspec__Group_1_1__0");
			builder.put(grammarAccess.getTypedeclAccess().getGroup(), "rule__Typedecl__Group__0");
			builder.put(grammarAccess.getTypedeclAccess().getGroup_2_1(), "rule__Typedecl__Group_2_1__0");
			builder.put(grammarAccess.getTypedeclAccess().getGroup_2_1_1(), "rule__Typedecl__Group_2_1_1__0");
			builder.put(grammarAccess.getTypespecAccess().getGroup(), "rule__Typespec__Group__0");
			builder.put(grammarAccess.getAliasdeclAccess().getGroup(), "rule__Aliasdecl__Group__0");
			builder.put(grammarAccess.getMethoddeclAccess().getGroup(), "rule__Methoddecl__Group__0");
			builder.put(grammarAccess.getFunctiondeclAccess().getGroup(), "rule__Functiondecl__Group__0");
			builder.put(grammarAccess.getConstdeclAccess().getGroup(), "rule__Constdecl__Group__0");
			builder.put(grammarAccess.getConstdeclAccess().getGroup_2_1(), "rule__Constdecl__Group_2_1__0");
			builder.put(grammarAccess.getConstdeclAccess().getGroup_2_1_1(), "rule__Constdecl__Group_2_1_1__0");
			builder.put(grammarAccess.getConstspecAccess().getGroup(), "rule__Constspec__Group__0");
			builder.put(grammarAccess.getConstspecAccess().getGroup_1(), "rule__Constspec__Group_1__0");
			builder.put(grammarAccess.getShortvardeclAccess().getGroup(), "rule__Shortvardecl__Group__0");
			builder.put(grammarAccess.getDeferstmtAccess().getGroup(), "rule__Deferstmt__Group__0");
			builder.put(grammarAccess.getGotostmtAccess().getGroup(), "rule__Gotostmt__Group__0");
			builder.put(grammarAccess.getContinuestmtAccess().getGroup(), "rule__Continuestmt__Group__0");
			builder.put(grammarAccess.getBreakstmtAccess().getGroup(), "rule__Breakstmt__Group__0");
			builder.put(grammarAccess.getReturnstmtAccess().getGroup(), "rule__Returnstmt__Group__0");
			builder.put(grammarAccess.getSelectstmtAccess().getGroup(), "rule__Selectstmt__Group__0");
			builder.put(grammarAccess.getCommclauseAccess().getGroup(), "rule__Commclause__Group__0");
			builder.put(grammarAccess.getCommcaseAccess().getGroup_0(), "rule__Commcase__Group_0__0");
			builder.put(grammarAccess.getCommcaseAccess().getGroup_1(), "rule__Commcase__Group_1__0");
			builder.put(grammarAccess.getRecvstmtAccess().getGroup(), "rule__Recvstmt__Group__0");
			builder.put(grammarAccess.getRecvstmtAccess().getGroup_0_0(), "rule__Recvstmt__Group_0_0__0");
			builder.put(grammarAccess.getRecvstmtAccess().getGroup_0_1(), "rule__Recvstmt__Group_0_1__0");
			builder.put(grammarAccess.getGotstmtAccess().getGroup(), "rule__Gotstmt__Group__0");
			builder.put(grammarAccess.getForstmtAccess().getGroup(), "rule__Forstmt__Group__0");
			builder.put(grammarAccess.getRangeclauseAccess().getGroup(), "rule__Rangeclause__Group__0");
			builder.put(grammarAccess.getRangeclauseAccess().getGroup_0_0(), "rule__Rangeclause__Group_0_0__0");
			builder.put(grammarAccess.getRangeclauseAccess().getGroup_0_1(), "rule__Rangeclause__Group_0_1__0");
			builder.put(grammarAccess.getForclauseAccess().getGroup(), "rule__Forclause__Group__0");
			builder.put(grammarAccess.getExprswitchstmtAccess().getGroup(), "rule__Exprswitchstmt__Group__0");
			builder.put(grammarAccess.getExprswitchstmtAccess().getGroup_2(), "rule__Exprswitchstmt__Group_2__0");
			builder.put(grammarAccess.getExprcaseclauseAccess().getGroup(), "rule__Exprcaseclause__Group__0");
			builder.put(grammarAccess.getExprswitchcaseAccess().getGroup_0(), "rule__Exprswitchcase__Group_0__0");
			builder.put(grammarAccess.getExprswitchcaseAccess().getGroup_1(), "rule__Exprswitchcase__Group_1__0");
			builder.put(grammarAccess.getTypeswitchstmtAccess().getGroup(), "rule__Typeswitchstmt__Group__0");
			builder.put(grammarAccess.getTypeswitchstmtAccess().getGroup_1(), "rule__Typeswitchstmt__Group_1__0");
			builder.put(grammarAccess.getTypeswitchguardAccess().getGroup(), "rule__Typeswitchguard__Group__0");
			builder.put(grammarAccess.getTypeswitchguardAccess().getGroup_0(), "rule__Typeswitchguard__Group_0__0");
			builder.put(grammarAccess.getTypecaseclauseAccess().getGroup(), "rule__Typecaseclause__Group__0");
			builder.put(grammarAccess.getTypeswitchcaseAccess().getGroup_0(), "rule__Typeswitchcase__Group_0__0");
			builder.put(grammarAccess.getTypeswitchcaseAccess().getGroup_1(), "rule__Typeswitchcase__Group_1__0");
			builder.put(grammarAccess.getTypelistAccess().getGroup(), "rule__Typelist__Group__0");
			builder.put(grammarAccess.getTypelistAccess().getGroup_2(), "rule__Typelist__Group_2__0");
			builder.put(grammarAccess.getIfstmtAccess().getGroup(), "rule__Ifstmt__Group__0");
			builder.put(grammarAccess.getIfstmtAccess().getGroup_1(), "rule__Ifstmt__Group_1__0");
			builder.put(grammarAccess.getIfstmtAccess().getGroup_4(), "rule__Ifstmt__Group_4__0");
			builder.put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
			builder.put(grammarAccess.getIncdecstmtAccess().getGroup(), "rule__Incdecstmt__Group__0");
			builder.put(grammarAccess.getSendstmtAccess().getGroup(), "rule__Sendstmt__Group__0");
			builder.put(grammarAccess.getLabeledstmtAccess().getGroup(), "rule__Labeledstmt__Group__0");
			builder.put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
			builder.put(grammarAccess.getStatementlistAccess().getGroup(), "rule__Statementlist__Group__0");
			builder.put(grammarAccess.getStatementlistAccess().getGroup_1(), "rule__Statementlist__Group_1__0");
			builder.put(grammarAccess.getTypeassertionAccess().getGroup(), "rule__Typeassertion__Group__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup(), "rule__Arguments__Group__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_2(), "rule__Arguments__Group_2__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_2_0_1(), "rule__Arguments__Group_2_0_1__0");
			builder.put(grammarAccess.getArgumentsAccess().getGroup_2_0_1_1(), "rule__Arguments__Group_2_0_1_1__0");
			builder.put(grammarAccess.getExpressionlistAccess().getGroup(), "rule__Expressionlist__Group__0");
			builder.put(grammarAccess.getExpressionlistAccess().getGroup_1(), "rule__Expressionlist__Group_1__0");
			builder.put(grammarAccess.getSelectorAccess().getGroup(), "rule__Selector__Group__0");
			builder.put(grammarAccess.getOperandnameAccess().getGroup_0(), "rule__Operandname__Group_0__0");
			builder.put(grammarAccess.getOperandnameAccess().getGroup_0_0(), "rule__Operandname__Group_0_0__0");
			builder.put(grammarAccess.getQualified_identAccess().getGroup(), "rule__Qualified_ident__Group__0");
			builder.put(grammarAccess.getSlicetypeAccess().getGroup(), "rule__Slicetype__Group__0");
			builder.put(grammarAccess.getPointertypeAccess().getGroup(), "rule__Pointertype__Group__0");
			builder.put(grammarAccess.getChanneltypeAccess().getGroup(), "rule__Channeltype__Group__0");
			builder.put(grammarAccess.getChanneltypeAccess().getGroup_0_1(), "rule__Channeltype__Group_0_1__0");
			builder.put(grammarAccess.getChanneltypeAccess().getGroup_0_2(), "rule__Channeltype__Group_0_2__0");
			builder.put(grammarAccess.getMaptypeAccess().getGroup(), "rule__Maptype__Group__0");
			builder.put(grammarAccess.getInterfacetypeAccess().getGroup(), "rule__Interfacetype__Group__0");
			builder.put(grammarAccess.getInterfacetypeAccess().getGroup_3(), "rule__Interfacetype__Group_3__0");
			builder.put(grammarAccess.getMethodspecAccess().getGroup_0(), "rule__Methodspec__Group_0__0");
			builder.put(grammarAccess.getFunctiontypeAccess().getGroup(), "rule__Functiontype__Group__0");
			builder.put(grammarAccess.getSignatureAccess().getGroup(), "rule__Signature__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup(), "rule__Parameters__Group__0");
			builder.put(grammarAccess.getParametersAccess().getGroup_2(), "rule__Parameters__Group_2__0");
			builder.put(grammarAccess.getParameterlistAccess().getGroup(), "rule__Parameterlist__Group__0");
			builder.put(grammarAccess.getParameterlistAccess().getGroup_1(), "rule__Parameterlist__Group_1__0");
			builder.put(grammarAccess.getParameterdeclAccess().getGroup(), "rule__Parameterdecl__Group__0");
			builder.put(grammarAccess.getIdentifierlistAccess().getGroup(), "rule__Identifierlist__Group__0");
			builder.put(grammarAccess.getIdentifierlistAccess().getGroup_1(), "rule__Identifierlist__Group_1__0");
			builder.put(grammarAccess.getStructtypeAccess().getGroup(), "rule__Structtype__Group__0");
			builder.put(grammarAccess.getStructtypeAccess().getGroup_3(), "rule__Structtype__Group_3__0");
			builder.put(grammarAccess.getFielddeclAccess().getGroup(), "rule__Fielddecl__Group__0");
			builder.put(grammarAccess.getFielddeclAccess().getGroup_0_0(), "rule__Fielddecl__Group_0_0__0");
			builder.put(grammarAccess.getEmbeddedfieldAccess().getGroup(), "rule__Embeddedfield__Group__0");
			builder.put(grammarAccess.getTypeAccess().getGroup_2(), "rule__Type__Group_2__0");
			builder.put(grammarAccess.getArraytypeAccess().getGroup(), "rule__Arraytype__Group__0");
			builder.put(grammarAccess.getArraytypeAccess().getGroup_0(), "rule__Arraytype__Group_0__0");
			builder.put(grammarAccess.getArraytypeAccess().getGroup_0_0(), "rule__Arraytype__Group_0_0__0");
			builder.put(grammarAccess.getTypenameAccess().getGroup_0(), "rule__Typename__Group_0__0");
			builder.put(grammarAccess.getTypenameAccess().getGroup_0_0(), "rule__Typename__Group_0_0__0");
			builder.put(grammarAccess.getRaw_string_litAccess().getGroup(), "rule__Raw_string_lit__Group__0");
			builder.put(grammarAccess.getInterpreted_string_litAccess().getGroup(), "rule__Interpreted_string_lit__Group__0");
			builder.put(grammarAccess.getRune_litAccess().getGroup(), "rule__Rune_lit__Group__0");
			builder.put(grammarAccess.getHex_litAccess().getGroup(), "rule__Hex_lit__Group__0");
			builder.put(grammarAccess.getImaginary_litAccess().getGroup(), "rule__Imaginary_lit__Group__0");
			builder.put(grammarAccess.getFloat_litAccess().getGroup_0(), "rule__Float_lit__Group_0__0");
			builder.put(grammarAccess.getFloat_litAccess().getGroup_1(), "rule__Float_lit__Group_1__0");
			builder.put(grammarAccess.getFloat_litAccess().getGroup_2(), "rule__Float_lit__Group_2__0");
			builder.put(grammarAccess.getExponentAccess().getGroup(), "rule__Exponent__Group__0");
			builder.put(grammarAccess.getHex_byte_valueAccess().getGroup(), "rule__Hex_byte_value__Group__0");
			builder.put(grammarAccess.getOctal_byte_valueAccess().getGroup(), "rule__Octal_byte_value__Group__0");
			builder.put(grammarAccess.getBig_u_valueAccess().getGroup(), "rule__Big_u_value__Group__0");
			builder.put(grammarAccess.getLittle_u_valueAccess().getGroup(), "rule__Little_u_value__Group__0");
			builder.put(grammarAccess.getModelAccess().getElementsAssignment(), "rule__Model__ElementsAssignment");
			builder.put(grammarAccess.getSourcefileAccess().getPackageclauseAssignment_0(), "rule__Sourcefile__PackageclauseAssignment_0");
			builder.put(grammarAccess.getSourcefileAccess().getImportdeclAssignment_2_0(), "rule__Sourcefile__ImportdeclAssignment_2_0");
			builder.put(grammarAccess.getSourcefileAccess().getTopleveldeclAssignment_3_0(), "rule__Sourcefile__TopleveldeclAssignment_3_0");
			builder.put(grammarAccess.getExpressionAccess().getExpressionauxAssignment_1(), "rule__Expression__ExpressionauxAssignment_1");
			builder.put(grammarAccess.getExpressionauxAccess().getExpressionAssignment_0(), "rule__Expressionaux__ExpressionAssignment_0");
			builder.put(grammarAccess.getExpressionauxAccess().getBINARY_OPAssignment_1(), "rule__Expressionaux__BINARY_OPAssignment_1");
			builder.put(grammarAccess.getExpressionauxAccess().getExpressionAssignment_2(), "rule__Expressionaux__ExpressionAssignment_2");
			builder.put(grammarAccess.getUnaryexprAccess().getPrimaryexprAssignment_0(), "rule__Unaryexpr__PrimaryexprAssignment_0");
			builder.put(grammarAccess.getUnaryexprAccess().getUNARY_OPAssignment_1_0(), "rule__Unaryexpr__UNARY_OPAssignment_1_0");
			builder.put(grammarAccess.getUnaryexprAccess().getUnaryexprAssignment_1_1(), "rule__Unaryexpr__UnaryexprAssignment_1_1");
			builder.put(grammarAccess.getPrimaryexprAccess().getOperandAssignment_0_0(), "rule__Primaryexpr__OperandAssignment_0_0");
			builder.put(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_0_1(), "rule__Primaryexpr__PrimaryexprauxAssignment_0_1");
			builder.put(grammarAccess.getPrimaryexprAccess().getConversionAssignment_1_0(), "rule__Primaryexpr__ConversionAssignment_1_0");
			builder.put(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_1_1(), "rule__Primaryexpr__PrimaryexprauxAssignment_1_1");
			builder.put(grammarAccess.getPrimaryexprAccess().getMethodexprAssignment_2_0(), "rule__Primaryexpr__MethodexprAssignment_2_0");
			builder.put(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxAssignment_2_1(), "rule__Primaryexpr__PrimaryexprauxAssignment_2_1");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getSelectorAssignment_0_0(), "rule__Primaryexpraux__SelectorAssignment_0_0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_0_1(), "rule__Primaryexpraux__PrimaryexprauxAssignment_0_1");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getIndexAssignment_1_0(), "rule__Primaryexpraux__IndexAssignment_1_0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_1_1(), "rule__Primaryexpraux__PrimaryexprauxAssignment_1_1");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getSliceAssignment_2_0(), "rule__Primaryexpraux__SliceAssignment_2_0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_2_1(), "rule__Primaryexpraux__PrimaryexprauxAssignment_2_1");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getTypeassertionAssignment_3_0(), "rule__Primaryexpraux__TypeassertionAssignment_3_0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_3_1(), "rule__Primaryexpraux__PrimaryexprauxAssignment_3_1");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getArgumentsAssignment_4_0(), "rule__Primaryexpraux__ArgumentsAssignment_4_0");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAssignment_4_1(), "rule__Primaryexpraux__PrimaryexprauxAssignment_4_1");
			builder.put(grammarAccess.getPrimaryexprauxAccess().getWSAssignment_5_1(), "rule__Primaryexpraux__WSAssignment_5_1");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_2(), "rule__Slice__ExpressionAssignment_2");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_4_0_0_0(), "rule__Slice__ExpressionAssignment_4_0_0_0");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_4_0_0_2(), "rule__Slice__ExpressionAssignment_4_0_0_2");
			builder.put(grammarAccess.getSliceAccess().getExpressionAssignment_4_1(), "rule__Slice__ExpressionAssignment_4_1");
			builder.put(grammarAccess.getMethodexprAccess().getReceivertypeAssignment_0(), "rule__Methodexpr__ReceivertypeAssignment_0");
			builder.put(grammarAccess.getMethodexprAccess().getMethodnameAssignment_2(), "rule__Methodexpr__MethodnameAssignment_2");
			builder.put(grammarAccess.getConversionAccess().getTypeAssignment_0(), "rule__Conversion__TypeAssignment_0");
			builder.put(grammarAccess.getConversionAccess().getExpressionAssignment_2(), "rule__Conversion__ExpressionAssignment_2");
			builder.put(grammarAccess.getOperandAccess().getExpressionAssignment_0_0_1(), "rule__Operand__ExpressionAssignment_0_0_1");
			builder.put(grammarAccess.getOperandAccess().getLiteralAssignment_1(), "rule__Operand__LiteralAssignment_1");
			builder.put(grammarAccess.getOperandAccess().getOperandnameAssignment_2(), "rule__Operand__OperandnameAssignment_2");
			builder.put(grammarAccess.getCompositelitAccess().getLiteraltypeAssignment_0(), "rule__Compositelit__LiteraltypeAssignment_0");
			builder.put(grammarAccess.getCompositelitAccess().getLiteralvalueAssignment_1(), "rule__Compositelit__LiteralvalueAssignment_1");
			builder.put(grammarAccess.getLiteraltypeAccess().getStructtypeAssignment_0(), "rule__Literaltype__StructtypeAssignment_0");
			builder.put(grammarAccess.getLiteraltypeAccess().getElementtypeAssignment_1_3(), "rule__Literaltype__ElementtypeAssignment_1_3");
			builder.put(grammarAccess.getLiteraltypeAccess().getSlicetypeAssignment_2(), "rule__Literaltype__SlicetypeAssignment_2");
			builder.put(grammarAccess.getLiteraltypeAccess().getMaptypeAssignment_3(), "rule__Literaltype__MaptypeAssignment_3");
			builder.put(grammarAccess.getLiteraltypeAccess().getTypenameAssignment_4(), "rule__Literaltype__TypenameAssignment_4");
			builder.put(grammarAccess.getLiteralvalueAccess().getElementlistAssignment_2_0(), "rule__Literalvalue__ElementlistAssignment_2_0");
			builder.put(grammarAccess.getElementlistAccess().getKeyedelementAssignment_1_1(), "rule__Elementlist__KeyedelementAssignment_1_1");
			builder.put(grammarAccess.getKeyedelementAccess().getElementAssignment_1(), "rule__Keyedelement__ElementAssignment_1");
			builder.put(grammarAccess.getKeyAccess().getFieldnameAssignment_0_1(), "rule__Key__FieldnameAssignment_0_1");
			builder.put(grammarAccess.getKeyAccess().getExpressionAssignment_1(), "rule__Key__ExpressionAssignment_1");
			builder.put(grammarAccess.getKeyAccess().getLiteralvalueAssignment_2(), "rule__Key__LiteralvalueAssignment_2");
			builder.put(grammarAccess.getFunctionlitAccess().getSignatureAssignment_1(), "rule__Functionlit__SignatureAssignment_1");
			builder.put(grammarAccess.getFunctionlitAccess().getFunctionbodyAssignment_2(), "rule__Functionlit__FunctionbodyAssignment_2");
			builder.put(grammarAccess.getStatementAccess().getDeclarationAssignment_0(), "rule__Statement__DeclarationAssignment_0");
			builder.put(grammarAccess.getStatementAccess().getLabeledstmtAssignment_1(), "rule__Statement__LabeledstmtAssignment_1");
			builder.put(grammarAccess.getStatementAccess().getSimplestmtAssignment_2(), "rule__Statement__SimplestmtAssignment_2");
			builder.put(grammarAccess.getStatementAccess().getGotstmtAssignment_3(), "rule__Statement__GotstmtAssignment_3");
			builder.put(grammarAccess.getStatementAccess().getReturnstmtAssignment_4(), "rule__Statement__ReturnstmtAssignment_4");
			builder.put(grammarAccess.getStatementAccess().getBreakstmtAssignment_5(), "rule__Statement__BreakstmtAssignment_5");
			builder.put(grammarAccess.getStatementAccess().getContinuestmtAssignment_6(), "rule__Statement__ContinuestmtAssignment_6");
			builder.put(grammarAccess.getStatementAccess().getGotostmtAssignment_7(), "rule__Statement__GotostmtAssignment_7");
			builder.put(grammarAccess.getStatementAccess().getFallthroughstmtAssignment_8(), "rule__Statement__FallthroughstmtAssignment_8");
			builder.put(grammarAccess.getStatementAccess().getBlockAssignment_9(), "rule__Statement__BlockAssignment_9");
			builder.put(grammarAccess.getStatementAccess().getIfstmtAssignment_10(), "rule__Statement__IfstmtAssignment_10");
			builder.put(grammarAccess.getStatementAccess().getSwitchstmtAssignment_11(), "rule__Statement__SwitchstmtAssignment_11");
			builder.put(grammarAccess.getStatementAccess().getSelectstmtAssignment_12(), "rule__Statement__SelectstmtAssignment_12");
			builder.put(grammarAccess.getStatementAccess().getForstmtAssignment_13(), "rule__Statement__ForstmtAssignment_13");
			builder.put(grammarAccess.getStatementAccess().getDeferstmtAssignment_14(), "rule__Statement__DeferstmtAssignment_14");
			builder.put(grammarAccess.getDeclarationAccess().getConstdeclAssignment_0(), "rule__Declaration__ConstdeclAssignment_0");
			builder.put(grammarAccess.getDeclarationAccess().getTypedeclAssignment_1(), "rule__Declaration__TypedeclAssignment_1");
			builder.put(grammarAccess.getDeclarationAccess().getVardeclAssignment_2(), "rule__Declaration__VardeclAssignment_2");
			builder.put(grammarAccess.getVardeclAccess().getVarspecAssignment_2_0(), "rule__Vardecl__VarspecAssignment_2_0");
			builder.put(grammarAccess.getVardeclAccess().getVarspecAssignment_2_1_1_0(), "rule__Vardecl__VarspecAssignment_2_1_1_0");
			builder.put(grammarAccess.getVarspecAccess().getIdentifierlistAssignment_0(), "rule__Varspec__IdentifierlistAssignment_0");
			builder.put(grammarAccess.getVarspecAccess().getTypeAssignment_1_0_0(), "rule__Varspec__TypeAssignment_1_0_0");
			builder.put(grammarAccess.getVarspecAccess().getExpressionlistAssignment_1_0_1_1(), "rule__Varspec__ExpressionlistAssignment_1_0_1_1");
			builder.put(grammarAccess.getVarspecAccess().getExpressionlistAssignment_1_1_1(), "rule__Varspec__ExpressionlistAssignment_1_1_1");
			builder.put(grammarAccess.getTypedeclAccess().getTypespecAssignment_2_0(), "rule__Typedecl__TypespecAssignment_2_0");
			builder.put(grammarAccess.getTypedeclAccess().getTypespecAssignment_2_1_1_0(), "rule__Typedecl__TypespecAssignment_2_1_1_0");
			builder.put(grammarAccess.getTypespecAccess().getIDENTIFIERAssignment_0(), "rule__Typespec__IDENTIFIERAssignment_0");
			builder.put(grammarAccess.getTypespecAccess().getTypespecauxAssignment_1(), "rule__Typespec__TypespecauxAssignment_1");
			builder.put(grammarAccess.getTypedefAccess().getTypeAssignment(), "rule__Typedef__TypeAssignment");
			builder.put(grammarAccess.getAliasdeclAccess().getTypeAssignment_1(), "rule__Aliasdecl__TypeAssignment_1");
			builder.put(grammarAccess.getTopleveldeclAccess().getFunctiondeclAssignment_1(), "rule__Topleveldecl__FunctiondeclAssignment_1");
			builder.put(grammarAccess.getTopleveldeclAccess().getMethoddeclAssignment_2(), "rule__Topleveldecl__MethoddeclAssignment_2");
			builder.put(grammarAccess.getMethoddeclAccess().getReceiverAssignment_1(), "rule__Methoddecl__ReceiverAssignment_1");
			builder.put(grammarAccess.getMethoddeclAccess().getMethodnameAssignment_2(), "rule__Methoddecl__MethodnameAssignment_2");
			builder.put(grammarAccess.getMethoddeclAccess().getSignatureAssignment_3(), "rule__Methoddecl__SignatureAssignment_3");
			builder.put(grammarAccess.getMethoddeclAccess().getFunctionbodyAssignment_4(), "rule__Methoddecl__FunctionbodyAssignment_4");
			builder.put(grammarAccess.getFunctiondeclAccess().getFunctionnameAssignment_1(), "rule__Functiondecl__FunctionnameAssignment_1");
			builder.put(grammarAccess.getFunctiondeclAccess().getSignatureAssignment_2(), "rule__Functiondecl__SignatureAssignment_2");
			builder.put(grammarAccess.getFunctiondeclAccess().getFunctionbodyAssignment_3(), "rule__Functiondecl__FunctionbodyAssignment_3");
			builder.put(grammarAccess.getConstdeclAccess().getConstspecAssignment_2_0(), "rule__Constdecl__ConstspecAssignment_2_0");
			builder.put(grammarAccess.getConstdeclAccess().getConstspecAssignment_2_1_1_0(), "rule__Constdecl__ConstspecAssignment_2_1_1_0");
			builder.put(grammarAccess.getConstspecAccess().getIdentifierlistAssignment_0(), "rule__Constspec__IdentifierlistAssignment_0");
			builder.put(grammarAccess.getConstspecAccess().getTypeAssignment_1_0(), "rule__Constspec__TypeAssignment_1_0");
			builder.put(grammarAccess.getConstspecAccess().getExpressionlistAssignment_1_2(), "rule__Constspec__ExpressionlistAssignment_1_2");
			builder.put(grammarAccess.getSimplestmtAccess().getEmptystmtAssignment_0(), "rule__Simplestmt__EmptystmtAssignment_0");
			builder.put(grammarAccess.getSimplestmtAccess().getExpressionstmtAssignment_1(), "rule__Simplestmt__ExpressionstmtAssignment_1");
			builder.put(grammarAccess.getSimplestmtAccess().getSendstmtAssignment_2(), "rule__Simplestmt__SendstmtAssignment_2");
			builder.put(grammarAccess.getSimplestmtAccess().getIncdecstmtAssignment_3(), "rule__Simplestmt__IncdecstmtAssignment_3");
			builder.put(grammarAccess.getSimplestmtAccess().getAssignmentAssignment_4(), "rule__Simplestmt__AssignmentAssignment_4");
			builder.put(grammarAccess.getSimplestmtAccess().getShortvardeclAssignment_5(), "rule__Simplestmt__ShortvardeclAssignment_5");
			builder.put(grammarAccess.getShortvardeclAccess().getIdentifierlistAssignment_0(), "rule__Shortvardecl__IdentifierlistAssignment_0");
			builder.put(grammarAccess.getShortvardeclAccess().getExpressionlistAssignment_2(), "rule__Shortvardecl__ExpressionlistAssignment_2");
			builder.put(grammarAccess.getReturnstmtAccess().getExpressionlistAssignment_2(), "rule__Returnstmt__ExpressionlistAssignment_2");
			builder.put(grammarAccess.getSelectstmtAccess().getCommclauseAssignment_3(), "rule__Selectstmt__CommclauseAssignment_3");
			builder.put(grammarAccess.getCommclauseAccess().getStatementlistAssignment_2(), "rule__Commclause__StatementlistAssignment_2");
			builder.put(grammarAccess.getCommcaseAccess().getSendstmtAssignment_0_1_0(), "rule__Commcase__SendstmtAssignment_0_1_0");
			builder.put(grammarAccess.getCommcaseAccess().getRecvstmtAssignment_0_1_1(), "rule__Commcase__RecvstmtAssignment_0_1_1");
			builder.put(grammarAccess.getRecvstmtAccess().getIdentifierlistAssignment_0_1_0(), "rule__Recvstmt__IdentifierlistAssignment_0_1_0");
			builder.put(grammarAccess.getRecvstmtAccess().getRecvexprAssignment_1(), "rule__Recvstmt__RecvexprAssignment_1");
			builder.put(grammarAccess.getForstmtAccess().getBlockAssignment_2(), "rule__Forstmt__BlockAssignment_2");
			builder.put(grammarAccess.getRangeclauseAccess().getExpressionlistAssignment_0_0_0(), "rule__Rangeclause__ExpressionlistAssignment_0_0_0");
			builder.put(grammarAccess.getRangeclauseAccess().getIdentifierlistAssignment_0_1_0(), "rule__Rangeclause__IdentifierlistAssignment_0_1_0");
			builder.put(grammarAccess.getRangeclauseAccess().getExpressionAssignment_2(), "rule__Rangeclause__ExpressionAssignment_2");
			builder.put(grammarAccess.getForclauseAccess().getInitstmtAssignment_1(), "rule__Forclause__InitstmtAssignment_1");
			builder.put(grammarAccess.getForclauseAccess().getConditionAssignment_3(), "rule__Forclause__ConditionAssignment_3");
			builder.put(grammarAccess.getForclauseAccess().getPoststmtAssignment_5(), "rule__Forclause__PoststmtAssignment_5");
			builder.put(grammarAccess.getSwitchstmtAccess().getExprswitchstmtAssignment_0(), "rule__Switchstmt__ExprswitchstmtAssignment_0");
			builder.put(grammarAccess.getSwitchstmtAccess().getTypeswitchstmtAssignment_1(), "rule__Switchstmt__TypeswitchstmtAssignment_1");
			builder.put(grammarAccess.getExprswitchstmtAccess().getSimplestmtAssignment_2_0(), "rule__Exprswitchstmt__SimplestmtAssignment_2_0");
			builder.put(grammarAccess.getExprswitchstmtAccess().getExpressionAssignment_3(), "rule__Exprswitchstmt__ExpressionAssignment_3");
			builder.put(grammarAccess.getExprswitchstmtAccess().getExprcaseclauseAssignment_5(), "rule__Exprswitchstmt__ExprcaseclauseAssignment_5");
			builder.put(grammarAccess.getExprcaseclauseAccess().getExprswitchcaseAssignment_0(), "rule__Exprcaseclause__ExprswitchcaseAssignment_0");
			builder.put(grammarAccess.getExprcaseclauseAccess().getStatementlistAssignment_2(), "rule__Exprcaseclause__StatementlistAssignment_2");
			builder.put(grammarAccess.getExprswitchcaseAccess().getExpressionlistAssignment_0_1(), "rule__Exprswitchcase__ExpressionlistAssignment_0_1");
			builder.put(grammarAccess.getTypeswitchstmtAccess().getTypeswitchguardAssignment_2(), "rule__Typeswitchstmt__TypeswitchguardAssignment_2");
			builder.put(grammarAccess.getTypeswitchstmtAccess().getTypecaseclauseAssignment_4(), "rule__Typeswitchstmt__TypecaseclauseAssignment_4");
			builder.put(grammarAccess.getTypeswitchguardAccess().getIDENTIFIERAssignment_0_0(), "rule__Typeswitchguard__IDENTIFIERAssignment_0_0");
			builder.put(grammarAccess.getTypeswitchguardAccess().getPrimaryexprAssignment_1(), "rule__Typeswitchguard__PrimaryexprAssignment_1");
			builder.put(grammarAccess.getTypecaseclauseAccess().getTypeswitchcaseAssignment_0(), "rule__Typecaseclause__TypeswitchcaseAssignment_0");
			builder.put(grammarAccess.getTypecaseclauseAccess().getStatementlistAssignment_2(), "rule__Typecaseclause__StatementlistAssignment_2");
			builder.put(grammarAccess.getTypeswitchcaseAccess().getTypelistAssignment_0_1(), "rule__Typeswitchcase__TypelistAssignment_0_1");
			builder.put(grammarAccess.getTypelistAccess().getTypeAssignment_2_1(), "rule__Typelist__TypeAssignment_2_1");
			builder.put(grammarAccess.getIfstmtAccess().getSimplestmtAssignment_1_0(), "rule__Ifstmt__SimplestmtAssignment_1_0");
			builder.put(grammarAccess.getIfstmtAccess().getExpressionAssignment_2(), "rule__Ifstmt__ExpressionAssignment_2");
			builder.put(grammarAccess.getIfstmtAccess().getBlockAssignment_3(), "rule__Ifstmt__BlockAssignment_3");
			builder.put(grammarAccess.getIfstmtAccess().getIfstmtAssignment_4_1_0(), "rule__Ifstmt__IfstmtAssignment_4_1_0");
			builder.put(grammarAccess.getIfstmtAccess().getBlockAssignment_4_1_1(), "rule__Ifstmt__BlockAssignment_4_1_1");
			builder.put(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_0(), "rule__Assignment__ExpressionlistAssignment_0");
			builder.put(grammarAccess.getAssignmentAccess().getASSIGN_OPAssignment_1(), "rule__Assignment__ASSIGN_OPAssignment_1");
			builder.put(grammarAccess.getAssignmentAccess().getExpressionlistAssignment_2(), "rule__Assignment__ExpressionlistAssignment_2");
			builder.put(grammarAccess.getSendstmtAccess().getChannelAssignment_0(), "rule__Sendstmt__ChannelAssignment_0");
			builder.put(grammarAccess.getSendstmtAccess().getExpressionAssignment_2(), "rule__Sendstmt__ExpressionAssignment_2");
			builder.put(grammarAccess.getLabeledstmtAccess().getLabelAssignment_0(), "rule__Labeledstmt__LabelAssignment_0");
			builder.put(grammarAccess.getLabeledstmtAccess().getStatementAssignment_2(), "rule__Labeledstmt__StatementAssignment_2");
			builder.put(grammarAccess.getStatementlistAccess().getStatementAssignment_1_0(), "rule__Statementlist__StatementAssignment_1_0");
			builder.put(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_0(), "rule__Arguments__ExpressionlistAssignment_2_0_0");
			builder.put(grammarAccess.getArgumentsAccess().getTypeAssignment_2_0_1_0(), "rule__Arguments__TypeAssignment_2_0_1_0");
			builder.put(grammarAccess.getArgumentsAccess().getExpressionlistAssignment_2_0_1_1_1(), "rule__Arguments__ExpressionlistAssignment_2_0_1_1_1");
			builder.put(grammarAccess.getExpressionlistAccess().getExpressionAssignment_1_1(), "rule__Expressionlist__ExpressionAssignment_1_1");
			builder.put(grammarAccess.getLiteralAccess().getBasiclitAssignment_0(), "rule__Literal__BasiclitAssignment_0");
			builder.put(grammarAccess.getLiteralAccess().getCompositelitAssignment_1(), "rule__Literal__CompositelitAssignment_1");
			builder.put(grammarAccess.getLiteralAccess().getFunctionlitAssignment_2(), "rule__Literal__FunctionlitAssignment_2");
			builder.put(grammarAccess.getMaptypeAccess().getElementtypeAssignment_4(), "rule__Maptype__ElementtypeAssignment_4");
			builder.put(grammarAccess.getInterfacetypeAccess().getMethodspecAssignment_3_0(), "rule__Interfacetype__MethodspecAssignment_3_0");
			builder.put(grammarAccess.getMethodspecAccess().getMethodnameAssignment_0_0(), "rule__Methodspec__MethodnameAssignment_0_0");
			builder.put(grammarAccess.getMethodspecAccess().getSignatureAssignment_0_1(), "rule__Methodspec__SignatureAssignment_0_1");
			builder.put(grammarAccess.getMethodspecAccess().getInterfacetypenameAssignment_1(), "rule__Methodspec__InterfacetypenameAssignment_1");
			builder.put(grammarAccess.getSignatureAccess().getParametersAssignment_0(), "rule__Signature__ParametersAssignment_0");
			builder.put(grammarAccess.getSignatureAccess().getResultAssignment_1(), "rule__Signature__ResultAssignment_1");
			builder.put(grammarAccess.getParametersAccess().getParameterlistAssignment_2_0(), "rule__Parameters__ParameterlistAssignment_2_0");
			builder.put(grammarAccess.getParameterlistAccess().getParameterdeclAssignment_0(), "rule__Parameterlist__ParameterdeclAssignment_0");
			builder.put(grammarAccess.getParameterlistAccess().getParameterdeclAssignment_1_1(), "rule__Parameterlist__ParameterdeclAssignment_1_1");
			builder.put(grammarAccess.getParameterdeclAccess().getIdentifierlistAssignment_0(), "rule__Parameterdecl__IdentifierlistAssignment_0");
			builder.put(grammarAccess.getParameterdeclAccess().getTypeAssignment_2(), "rule__Parameterdecl__TypeAssignment_2");
			builder.put(grammarAccess.getStructtypeAccess().getFielddeclAssignment_3_0(), "rule__Structtype__FielddeclAssignment_3_0");
			builder.put(grammarAccess.getFielddeclAccess().getIdentifierlistAssignment_0_0_0(), "rule__Fielddecl__IdentifierlistAssignment_0_0_0");
			builder.put(grammarAccess.getFielddeclAccess().getTypeAssignment_0_0_1(), "rule__Fielddecl__TypeAssignment_0_0_1");
			builder.put(grammarAccess.getFielddeclAccess().getEmbeddedfieldAssignment_0_1(), "rule__Fielddecl__EmbeddedfieldAssignment_0_1");
			builder.put(grammarAccess.getFielddeclAccess().getTagAssignment_1(), "rule__Fielddecl__TagAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getTypenameAssignment_0(), "rule__Type__TypenameAssignment_0");
			builder.put(grammarAccess.getTypeAccess().getTypelitAssignment_1(), "rule__Type__TypelitAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getTypeAssignment_2_1(), "rule__Type__TypeAssignment_2_1");
			builder.put(grammarAccess.getTypelitAccess().getArraytypeAssignment_0(), "rule__Typelit__ArraytypeAssignment_0");
			builder.put(grammarAccess.getTypelitAccess().getStructtypeAssignment_1(), "rule__Typelit__StructtypeAssignment_1");
			builder.put(grammarAccess.getTypelitAccess().getPointertypeAssignment_2(), "rule__Typelit__PointertypeAssignment_2");
			builder.put(grammarAccess.getTypelitAccess().getFunctiontypeAssignment_3(), "rule__Typelit__FunctiontypeAssignment_3");
			builder.put(grammarAccess.getTypelitAccess().getInterfacetypeAssignment_4(), "rule__Typelit__InterfacetypeAssignment_4");
			builder.put(grammarAccess.getTypelitAccess().getSlicetypeAssignment_5(), "rule__Typelit__SlicetypeAssignment_5");
			builder.put(grammarAccess.getTypelitAccess().getMaptypeAssignment_6(), "rule__Typelit__MaptypeAssignment_6");
			builder.put(grammarAccess.getTypelitAccess().getChanneltypeAssignment_7(), "rule__Typelit__ChanneltypeAssignment_7");
			builder.put(grammarAccess.getArraytypeAccess().getExpressionAssignment_0_0_1(), "rule__Arraytype__ExpressionAssignment_0_0_1");
			builder.put(grammarAccess.getArraytypeAccess().getElementtypeAssignment_1(), "rule__Arraytype__ElementtypeAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
