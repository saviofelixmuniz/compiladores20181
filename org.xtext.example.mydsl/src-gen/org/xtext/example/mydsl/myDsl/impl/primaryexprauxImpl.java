/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.arguments;
import org.xtext.example.mydsl.myDsl.index;
import org.xtext.example.mydsl.myDsl.primaryexpraux;
import org.xtext.example.mydsl.myDsl.slice;
import org.xtext.example.mydsl.myDsl.typeassertion;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>primaryexpraux</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.primaryexprauxImpl#getSelector <em>Selector</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.primaryexprauxImpl#getTypeassertion <em>Typeassertion</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.primaryexprauxImpl#getPrimaryexpraux <em>Primaryexpraux</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.primaryexprauxImpl#getSlice <em>Slice</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.primaryexprauxImpl#getIndex <em>Index</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.primaryexprauxImpl#getArguments <em>Arguments</em>}</li>
 * </ul>
 *
 * @generated
 */
public class primaryexprauxImpl extends MinimalEObjectImpl.Container implements primaryexpraux
{
  /**
   * The default value of the '{@link #getSelector() <em>Selector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelector()
   * @generated
   * @ordered
   */
  protected static final String SELECTOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSelector() <em>Selector</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelector()
   * @generated
   * @ordered
   */
  protected String selector = SELECTOR_EDEFAULT;

  /**
   * The cached value of the '{@link #getTypeassertion() <em>Typeassertion</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeassertion()
   * @generated
   * @ordered
   */
  protected typeassertion typeassertion;

  /**
   * The cached value of the '{@link #getPrimaryexpraux() <em>Primaryexpraux</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryexpraux()
   * @generated
   * @ordered
   */
  protected primaryexpraux primaryexpraux;

  /**
   * The cached value of the '{@link #getSlice() <em>Slice</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlice()
   * @generated
   * @ordered
   */
  protected slice slice;

  /**
   * The cached value of the '{@link #getIndex() <em>Index</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndex()
   * @generated
   * @ordered
   */
  protected index index;

  /**
   * The cached value of the '{@link #getArguments() <em>Arguments</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArguments()
   * @generated
   * @ordered
   */
  protected arguments arguments;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected primaryexprauxImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PRIMARYEXPRAUX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSelector()
  {
    return selector;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSelector(String newSelector)
  {
    String oldSelector = selector;
    selector = newSelector;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__SELECTOR, oldSelector, selector));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public typeassertion getTypeassertion()
  {
    return typeassertion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeassertion(typeassertion newTypeassertion, NotificationChain msgs)
  {
    typeassertion oldTypeassertion = typeassertion;
    typeassertion = newTypeassertion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION, oldTypeassertion, newTypeassertion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeassertion(typeassertion newTypeassertion)
  {
    if (newTypeassertion != typeassertion)
    {
      NotificationChain msgs = null;
      if (typeassertion != null)
        msgs = ((InternalEObject)typeassertion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION, null, msgs);
      if (newTypeassertion != null)
        msgs = ((InternalEObject)newTypeassertion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION, null, msgs);
      msgs = basicSetTypeassertion(newTypeassertion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION, newTypeassertion, newTypeassertion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public primaryexpraux getPrimaryexpraux()
  {
    return primaryexpraux;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryexpraux(primaryexpraux newPrimaryexpraux, NotificationChain msgs)
  {
    primaryexpraux oldPrimaryexpraux = primaryexpraux;
    primaryexpraux = newPrimaryexpraux;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX, oldPrimaryexpraux, newPrimaryexpraux);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPrimaryexpraux(primaryexpraux newPrimaryexpraux)
  {
    if (newPrimaryexpraux != primaryexpraux)
    {
      NotificationChain msgs = null;
      if (primaryexpraux != null)
        msgs = ((InternalEObject)primaryexpraux).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX, null, msgs);
      if (newPrimaryexpraux != null)
        msgs = ((InternalEObject)newPrimaryexpraux).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX, null, msgs);
      msgs = basicSetPrimaryexpraux(newPrimaryexpraux, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX, newPrimaryexpraux, newPrimaryexpraux));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public slice getSlice()
  {
    return slice;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSlice(slice newSlice, NotificationChain msgs)
  {
    slice oldSlice = slice;
    slice = newSlice;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__SLICE, oldSlice, newSlice);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSlice(slice newSlice)
  {
    if (newSlice != slice)
    {
      NotificationChain msgs = null;
      if (slice != null)
        msgs = ((InternalEObject)slice).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__SLICE, null, msgs);
      if (newSlice != null)
        msgs = ((InternalEObject)newSlice).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__SLICE, null, msgs);
      msgs = basicSetSlice(newSlice, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__SLICE, newSlice, newSlice));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public index getIndex()
  {
    return index;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIndex(index newIndex, NotificationChain msgs)
  {
    index oldIndex = index;
    index = newIndex;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__INDEX, oldIndex, newIndex);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIndex(index newIndex)
  {
    if (newIndex != index)
    {
      NotificationChain msgs = null;
      if (index != null)
        msgs = ((InternalEObject)index).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__INDEX, null, msgs);
      if (newIndex != null)
        msgs = ((InternalEObject)newIndex).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__INDEX, null, msgs);
      msgs = basicSetIndex(newIndex, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__INDEX, newIndex, newIndex));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public arguments getArguments()
  {
    return arguments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArguments(arguments newArguments, NotificationChain msgs)
  {
    arguments oldArguments = arguments;
    arguments = newArguments;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS, oldArguments, newArguments);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArguments(arguments newArguments)
  {
    if (newArguments != arguments)
    {
      NotificationChain msgs = null;
      if (arguments != null)
        msgs = ((InternalEObject)arguments).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS, null, msgs);
      if (newArguments != null)
        msgs = ((InternalEObject)newArguments).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS, null, msgs);
      msgs = basicSetArguments(newArguments, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS, newArguments, newArguments));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION:
        return basicSetTypeassertion(null, msgs);
      case MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX:
        return basicSetPrimaryexpraux(null, msgs);
      case MyDslPackage.PRIMARYEXPRAUX__SLICE:
        return basicSetSlice(null, msgs);
      case MyDslPackage.PRIMARYEXPRAUX__INDEX:
        return basicSetIndex(null, msgs);
      case MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS:
        return basicSetArguments(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PRIMARYEXPRAUX__SELECTOR:
        return getSelector();
      case MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION:
        return getTypeassertion();
      case MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX:
        return getPrimaryexpraux();
      case MyDslPackage.PRIMARYEXPRAUX__SLICE:
        return getSlice();
      case MyDslPackage.PRIMARYEXPRAUX__INDEX:
        return getIndex();
      case MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS:
        return getArguments();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PRIMARYEXPRAUX__SELECTOR:
        setSelector((String)newValue);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION:
        setTypeassertion((typeassertion)newValue);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX:
        setPrimaryexpraux((primaryexpraux)newValue);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__SLICE:
        setSlice((slice)newValue);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__INDEX:
        setIndex((index)newValue);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS:
        setArguments((arguments)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PRIMARYEXPRAUX__SELECTOR:
        setSelector(SELECTOR_EDEFAULT);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION:
        setTypeassertion((typeassertion)null);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX:
        setPrimaryexpraux((primaryexpraux)null);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__SLICE:
        setSlice((slice)null);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__INDEX:
        setIndex((index)null);
        return;
      case MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS:
        setArguments((arguments)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PRIMARYEXPRAUX__SELECTOR:
        return SELECTOR_EDEFAULT == null ? selector != null : !SELECTOR_EDEFAULT.equals(selector);
      case MyDslPackage.PRIMARYEXPRAUX__TYPEASSERTION:
        return typeassertion != null;
      case MyDslPackage.PRIMARYEXPRAUX__PRIMARYEXPRAUX:
        return primaryexpraux != null;
      case MyDslPackage.PRIMARYEXPRAUX__SLICE:
        return slice != null;
      case MyDslPackage.PRIMARYEXPRAUX__INDEX:
        return index != null;
      case MyDslPackage.PRIMARYEXPRAUX__ARGUMENTS:
        return arguments != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (selector: ");
    result.append(selector);
    result.append(')');
    return result.toString();
  }

} //primaryexprauxImpl
