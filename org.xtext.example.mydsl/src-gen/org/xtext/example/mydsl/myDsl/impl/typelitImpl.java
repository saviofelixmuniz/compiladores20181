/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.arraytype;
import org.xtext.example.mydsl.myDsl.channeltype;
import org.xtext.example.mydsl.myDsl.functiontype;
import org.xtext.example.mydsl.myDsl.interfacetype;
import org.xtext.example.mydsl.myDsl.maptype;
import org.xtext.example.mydsl.myDsl.pointertype;
import org.xtext.example.mydsl.myDsl.slicetype;
import org.xtext.example.mydsl.myDsl.structtype;
import org.xtext.example.mydsl.myDsl.typelit;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>typelit</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getArraytype <em>Arraytype</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getStructtype <em>Structtype</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getPointertype <em>Pointertype</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getFunctiontype <em>Functiontype</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getInterfacetype <em>Interfacetype</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getSlicetype <em>Slicetype</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getMaptype <em>Maptype</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.typelitImpl#getChanneltype <em>Channeltype</em>}</li>
 * </ul>
 *
 * @generated
 */
public class typelitImpl extends MinimalEObjectImpl.Container implements typelit
{
  /**
   * The cached value of the '{@link #getArraytype() <em>Arraytype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArraytype()
   * @generated
   * @ordered
   */
  protected arraytype arraytype;

  /**
   * The cached value of the '{@link #getStructtype() <em>Structtype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStructtype()
   * @generated
   * @ordered
   */
  protected structtype structtype;

  /**
   * The cached value of the '{@link #getPointertype() <em>Pointertype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPointertype()
   * @generated
   * @ordered
   */
  protected pointertype pointertype;

  /**
   * The cached value of the '{@link #getFunctiontype() <em>Functiontype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctiontype()
   * @generated
   * @ordered
   */
  protected functiontype functiontype;

  /**
   * The cached value of the '{@link #getInterfacetype() <em>Interfacetype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterfacetype()
   * @generated
   * @ordered
   */
  protected interfacetype interfacetype;

  /**
   * The cached value of the '{@link #getSlicetype() <em>Slicetype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSlicetype()
   * @generated
   * @ordered
   */
  protected slicetype slicetype;

  /**
   * The cached value of the '{@link #getMaptype() <em>Maptype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaptype()
   * @generated
   * @ordered
   */
  protected maptype maptype;

  /**
   * The cached value of the '{@link #getChanneltype() <em>Channeltype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChanneltype()
   * @generated
   * @ordered
   */
  protected channeltype channeltype;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected typelitImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.TYPELIT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public arraytype getArraytype()
  {
    return arraytype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArraytype(arraytype newArraytype, NotificationChain msgs)
  {
    arraytype oldArraytype = arraytype;
    arraytype = newArraytype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__ARRAYTYPE, oldArraytype, newArraytype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setArraytype(arraytype newArraytype)
  {
    if (newArraytype != arraytype)
    {
      NotificationChain msgs = null;
      if (arraytype != null)
        msgs = ((InternalEObject)arraytype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__ARRAYTYPE, null, msgs);
      if (newArraytype != null)
        msgs = ((InternalEObject)newArraytype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__ARRAYTYPE, null, msgs);
      msgs = basicSetArraytype(newArraytype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__ARRAYTYPE, newArraytype, newArraytype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public structtype getStructtype()
  {
    return structtype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStructtype(structtype newStructtype, NotificationChain msgs)
  {
    structtype oldStructtype = structtype;
    structtype = newStructtype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__STRUCTTYPE, oldStructtype, newStructtype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStructtype(structtype newStructtype)
  {
    if (newStructtype != structtype)
    {
      NotificationChain msgs = null;
      if (structtype != null)
        msgs = ((InternalEObject)structtype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__STRUCTTYPE, null, msgs);
      if (newStructtype != null)
        msgs = ((InternalEObject)newStructtype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__STRUCTTYPE, null, msgs);
      msgs = basicSetStructtype(newStructtype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__STRUCTTYPE, newStructtype, newStructtype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public pointertype getPointertype()
  {
    return pointertype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPointertype(pointertype newPointertype, NotificationChain msgs)
  {
    pointertype oldPointertype = pointertype;
    pointertype = newPointertype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__POINTERTYPE, oldPointertype, newPointertype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPointertype(pointertype newPointertype)
  {
    if (newPointertype != pointertype)
    {
      NotificationChain msgs = null;
      if (pointertype != null)
        msgs = ((InternalEObject)pointertype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__POINTERTYPE, null, msgs);
      if (newPointertype != null)
        msgs = ((InternalEObject)newPointertype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__POINTERTYPE, null, msgs);
      msgs = basicSetPointertype(newPointertype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__POINTERTYPE, newPointertype, newPointertype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public functiontype getFunctiontype()
  {
    return functiontype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunctiontype(functiontype newFunctiontype, NotificationChain msgs)
  {
    functiontype oldFunctiontype = functiontype;
    functiontype = newFunctiontype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__FUNCTIONTYPE, oldFunctiontype, newFunctiontype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunctiontype(functiontype newFunctiontype)
  {
    if (newFunctiontype != functiontype)
    {
      NotificationChain msgs = null;
      if (functiontype != null)
        msgs = ((InternalEObject)functiontype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__FUNCTIONTYPE, null, msgs);
      if (newFunctiontype != null)
        msgs = ((InternalEObject)newFunctiontype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__FUNCTIONTYPE, null, msgs);
      msgs = basicSetFunctiontype(newFunctiontype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__FUNCTIONTYPE, newFunctiontype, newFunctiontype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public interfacetype getInterfacetype()
  {
    return interfacetype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInterfacetype(interfacetype newInterfacetype, NotificationChain msgs)
  {
    interfacetype oldInterfacetype = interfacetype;
    interfacetype = newInterfacetype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__INTERFACETYPE, oldInterfacetype, newInterfacetype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setInterfacetype(interfacetype newInterfacetype)
  {
    if (newInterfacetype != interfacetype)
    {
      NotificationChain msgs = null;
      if (interfacetype != null)
        msgs = ((InternalEObject)interfacetype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__INTERFACETYPE, null, msgs);
      if (newInterfacetype != null)
        msgs = ((InternalEObject)newInterfacetype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__INTERFACETYPE, null, msgs);
      msgs = basicSetInterfacetype(newInterfacetype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__INTERFACETYPE, newInterfacetype, newInterfacetype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public slicetype getSlicetype()
  {
    return slicetype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSlicetype(slicetype newSlicetype, NotificationChain msgs)
  {
    slicetype oldSlicetype = slicetype;
    slicetype = newSlicetype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__SLICETYPE, oldSlicetype, newSlicetype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSlicetype(slicetype newSlicetype)
  {
    if (newSlicetype != slicetype)
    {
      NotificationChain msgs = null;
      if (slicetype != null)
        msgs = ((InternalEObject)slicetype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__SLICETYPE, null, msgs);
      if (newSlicetype != null)
        msgs = ((InternalEObject)newSlicetype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__SLICETYPE, null, msgs);
      msgs = basicSetSlicetype(newSlicetype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__SLICETYPE, newSlicetype, newSlicetype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public maptype getMaptype()
  {
    return maptype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaptype(maptype newMaptype, NotificationChain msgs)
  {
    maptype oldMaptype = maptype;
    maptype = newMaptype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__MAPTYPE, oldMaptype, newMaptype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaptype(maptype newMaptype)
  {
    if (newMaptype != maptype)
    {
      NotificationChain msgs = null;
      if (maptype != null)
        msgs = ((InternalEObject)maptype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__MAPTYPE, null, msgs);
      if (newMaptype != null)
        msgs = ((InternalEObject)newMaptype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__MAPTYPE, null, msgs);
      msgs = basicSetMaptype(newMaptype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__MAPTYPE, newMaptype, newMaptype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public channeltype getChanneltype()
  {
    return channeltype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChanneltype(channeltype newChanneltype, NotificationChain msgs)
  {
    channeltype oldChanneltype = channeltype;
    channeltype = newChanneltype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__CHANNELTYPE, oldChanneltype, newChanneltype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setChanneltype(channeltype newChanneltype)
  {
    if (newChanneltype != channeltype)
    {
      NotificationChain msgs = null;
      if (channeltype != null)
        msgs = ((InternalEObject)channeltype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__CHANNELTYPE, null, msgs);
      if (newChanneltype != null)
        msgs = ((InternalEObject)newChanneltype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TYPELIT__CHANNELTYPE, null, msgs);
      msgs = basicSetChanneltype(newChanneltype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TYPELIT__CHANNELTYPE, newChanneltype, newChanneltype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPELIT__ARRAYTYPE:
        return basicSetArraytype(null, msgs);
      case MyDslPackage.TYPELIT__STRUCTTYPE:
        return basicSetStructtype(null, msgs);
      case MyDslPackage.TYPELIT__POINTERTYPE:
        return basicSetPointertype(null, msgs);
      case MyDslPackage.TYPELIT__FUNCTIONTYPE:
        return basicSetFunctiontype(null, msgs);
      case MyDslPackage.TYPELIT__INTERFACETYPE:
        return basicSetInterfacetype(null, msgs);
      case MyDslPackage.TYPELIT__SLICETYPE:
        return basicSetSlicetype(null, msgs);
      case MyDslPackage.TYPELIT__MAPTYPE:
        return basicSetMaptype(null, msgs);
      case MyDslPackage.TYPELIT__CHANNELTYPE:
        return basicSetChanneltype(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPELIT__ARRAYTYPE:
        return getArraytype();
      case MyDslPackage.TYPELIT__STRUCTTYPE:
        return getStructtype();
      case MyDslPackage.TYPELIT__POINTERTYPE:
        return getPointertype();
      case MyDslPackage.TYPELIT__FUNCTIONTYPE:
        return getFunctiontype();
      case MyDslPackage.TYPELIT__INTERFACETYPE:
        return getInterfacetype();
      case MyDslPackage.TYPELIT__SLICETYPE:
        return getSlicetype();
      case MyDslPackage.TYPELIT__MAPTYPE:
        return getMaptype();
      case MyDslPackage.TYPELIT__CHANNELTYPE:
        return getChanneltype();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPELIT__ARRAYTYPE:
        setArraytype((arraytype)newValue);
        return;
      case MyDslPackage.TYPELIT__STRUCTTYPE:
        setStructtype((structtype)newValue);
        return;
      case MyDslPackage.TYPELIT__POINTERTYPE:
        setPointertype((pointertype)newValue);
        return;
      case MyDslPackage.TYPELIT__FUNCTIONTYPE:
        setFunctiontype((functiontype)newValue);
        return;
      case MyDslPackage.TYPELIT__INTERFACETYPE:
        setInterfacetype((interfacetype)newValue);
        return;
      case MyDslPackage.TYPELIT__SLICETYPE:
        setSlicetype((slicetype)newValue);
        return;
      case MyDslPackage.TYPELIT__MAPTYPE:
        setMaptype((maptype)newValue);
        return;
      case MyDslPackage.TYPELIT__CHANNELTYPE:
        setChanneltype((channeltype)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPELIT__ARRAYTYPE:
        setArraytype((arraytype)null);
        return;
      case MyDslPackage.TYPELIT__STRUCTTYPE:
        setStructtype((structtype)null);
        return;
      case MyDslPackage.TYPELIT__POINTERTYPE:
        setPointertype((pointertype)null);
        return;
      case MyDslPackage.TYPELIT__FUNCTIONTYPE:
        setFunctiontype((functiontype)null);
        return;
      case MyDslPackage.TYPELIT__INTERFACETYPE:
        setInterfacetype((interfacetype)null);
        return;
      case MyDslPackage.TYPELIT__SLICETYPE:
        setSlicetype((slicetype)null);
        return;
      case MyDslPackage.TYPELIT__MAPTYPE:
        setMaptype((maptype)null);
        return;
      case MyDslPackage.TYPELIT__CHANNELTYPE:
        setChanneltype((channeltype)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TYPELIT__ARRAYTYPE:
        return arraytype != null;
      case MyDslPackage.TYPELIT__STRUCTTYPE:
        return structtype != null;
      case MyDslPackage.TYPELIT__POINTERTYPE:
        return pointertype != null;
      case MyDslPackage.TYPELIT__FUNCTIONTYPE:
        return functiontype != null;
      case MyDslPackage.TYPELIT__INTERFACETYPE:
        return interfacetype != null;
      case MyDslPackage.TYPELIT__SLICETYPE:
        return slicetype != null;
      case MyDslPackage.TYPELIT__MAPTYPE:
        return maptype != null;
      case MyDslPackage.TYPELIT__CHANNELTYPE:
        return channeltype != null;
    }
    return super.eIsSet(featureID);
  }

} //typelitImpl
