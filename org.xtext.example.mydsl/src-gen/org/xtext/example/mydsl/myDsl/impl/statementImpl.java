/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.block;
import org.xtext.example.mydsl.myDsl.declaration;
import org.xtext.example.mydsl.myDsl.deferstmt;
import org.xtext.example.mydsl.myDsl.forstmt;
import org.xtext.example.mydsl.myDsl.gotstmt;
import org.xtext.example.mydsl.myDsl.ifstmt;
import org.xtext.example.mydsl.myDsl.labeledstmt;
import org.xtext.example.mydsl.myDsl.returnstmt;
import org.xtext.example.mydsl.myDsl.selectstmt;
import org.xtext.example.mydsl.myDsl.simplestmt;
import org.xtext.example.mydsl.myDsl.statement;
import org.xtext.example.mydsl.myDsl.switchstmt;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getDeclaration <em>Declaration</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getLabeledstmt <em>Labeledstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getSimplestmt <em>Simplestmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getGotstmt <em>Gotstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getReturnstmt <em>Returnstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getBreakstmt <em>Breakstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getContinuestmt <em>Continuestmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getGotostmt <em>Gotostmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getFallthroughstmt <em>Fallthroughstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getBlock <em>Block</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getIfstmt <em>Ifstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getSwitchstmt <em>Switchstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getSelectstmt <em>Selectstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getForstmt <em>Forstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.statementImpl#getDeferstmt <em>Deferstmt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class statementImpl extends MinimalEObjectImpl.Container implements statement
{
  /**
   * The cached value of the '{@link #getDeclaration() <em>Declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaration()
   * @generated
   * @ordered
   */
  protected declaration declaration;

  /**
   * The cached value of the '{@link #getLabeledstmt() <em>Labeledstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabeledstmt()
   * @generated
   * @ordered
   */
  protected labeledstmt labeledstmt;

  /**
   * The cached value of the '{@link #getSimplestmt() <em>Simplestmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimplestmt()
   * @generated
   * @ordered
   */
  protected simplestmt simplestmt;

  /**
   * The cached value of the '{@link #getGotstmt() <em>Gotstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGotstmt()
   * @generated
   * @ordered
   */
  protected gotstmt gotstmt;

  /**
   * The cached value of the '{@link #getReturnstmt() <em>Returnstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnstmt()
   * @generated
   * @ordered
   */
  protected returnstmt returnstmt;

  /**
   * The default value of the '{@link #getBreakstmt() <em>Breakstmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBreakstmt()
   * @generated
   * @ordered
   */
  protected static final String BREAKSTMT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBreakstmt() <em>Breakstmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBreakstmt()
   * @generated
   * @ordered
   */
  protected String breakstmt = BREAKSTMT_EDEFAULT;

  /**
   * The default value of the '{@link #getContinuestmt() <em>Continuestmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContinuestmt()
   * @generated
   * @ordered
   */
  protected static final String CONTINUESTMT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getContinuestmt() <em>Continuestmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContinuestmt()
   * @generated
   * @ordered
   */
  protected String continuestmt = CONTINUESTMT_EDEFAULT;

  /**
   * The default value of the '{@link #getGotostmt() <em>Gotostmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGotostmt()
   * @generated
   * @ordered
   */
  protected static final String GOTOSTMT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGotostmt() <em>Gotostmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGotostmt()
   * @generated
   * @ordered
   */
  protected String gotostmt = GOTOSTMT_EDEFAULT;

  /**
   * The default value of the '{@link #getFallthroughstmt() <em>Fallthroughstmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFallthroughstmt()
   * @generated
   * @ordered
   */
  protected static final String FALLTHROUGHSTMT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFallthroughstmt() <em>Fallthroughstmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFallthroughstmt()
   * @generated
   * @ordered
   */
  protected String fallthroughstmt = FALLTHROUGHSTMT_EDEFAULT;

  /**
   * The cached value of the '{@link #getBlock() <em>Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlock()
   * @generated
   * @ordered
   */
  protected block block;

  /**
   * The cached value of the '{@link #getIfstmt() <em>Ifstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfstmt()
   * @generated
   * @ordered
   */
  protected ifstmt ifstmt;

  /**
   * The cached value of the '{@link #getSwitchstmt() <em>Switchstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSwitchstmt()
   * @generated
   * @ordered
   */
  protected switchstmt switchstmt;

  /**
   * The cached value of the '{@link #getSelectstmt() <em>Selectstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelectstmt()
   * @generated
   * @ordered
   */
  protected selectstmt selectstmt;

  /**
   * The cached value of the '{@link #getForstmt() <em>Forstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getForstmt()
   * @generated
   * @ordered
   */
  protected forstmt forstmt;

  /**
   * The cached value of the '{@link #getDeferstmt() <em>Deferstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeferstmt()
   * @generated
   * @ordered
   */
  protected deferstmt deferstmt;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected statementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public declaration getDeclaration()
  {
    return declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeclaration(declaration newDeclaration, NotificationChain msgs)
  {
    declaration oldDeclaration = declaration;
    declaration = newDeclaration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__DECLARATION, oldDeclaration, newDeclaration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeclaration(declaration newDeclaration)
  {
    if (newDeclaration != declaration)
    {
      NotificationChain msgs = null;
      if (declaration != null)
        msgs = ((InternalEObject)declaration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__DECLARATION, null, msgs);
      if (newDeclaration != null)
        msgs = ((InternalEObject)newDeclaration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__DECLARATION, null, msgs);
      msgs = basicSetDeclaration(newDeclaration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__DECLARATION, newDeclaration, newDeclaration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public labeledstmt getLabeledstmt()
  {
    return labeledstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLabeledstmt(labeledstmt newLabeledstmt, NotificationChain msgs)
  {
    labeledstmt oldLabeledstmt = labeledstmt;
    labeledstmt = newLabeledstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__LABELEDSTMT, oldLabeledstmt, newLabeledstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLabeledstmt(labeledstmt newLabeledstmt)
  {
    if (newLabeledstmt != labeledstmt)
    {
      NotificationChain msgs = null;
      if (labeledstmt != null)
        msgs = ((InternalEObject)labeledstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__LABELEDSTMT, null, msgs);
      if (newLabeledstmt != null)
        msgs = ((InternalEObject)newLabeledstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__LABELEDSTMT, null, msgs);
      msgs = basicSetLabeledstmt(newLabeledstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__LABELEDSTMT, newLabeledstmt, newLabeledstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public simplestmt getSimplestmt()
  {
    return simplestmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSimplestmt(simplestmt newSimplestmt, NotificationChain msgs)
  {
    simplestmt oldSimplestmt = simplestmt;
    simplestmt = newSimplestmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__SIMPLESTMT, oldSimplestmt, newSimplestmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSimplestmt(simplestmt newSimplestmt)
  {
    if (newSimplestmt != simplestmt)
    {
      NotificationChain msgs = null;
      if (simplestmt != null)
        msgs = ((InternalEObject)simplestmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__SIMPLESTMT, null, msgs);
      if (newSimplestmt != null)
        msgs = ((InternalEObject)newSimplestmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__SIMPLESTMT, null, msgs);
      msgs = basicSetSimplestmt(newSimplestmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__SIMPLESTMT, newSimplestmt, newSimplestmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public gotstmt getGotstmt()
  {
    return gotstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGotstmt(gotstmt newGotstmt, NotificationChain msgs)
  {
    gotstmt oldGotstmt = gotstmt;
    gotstmt = newGotstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__GOTSTMT, oldGotstmt, newGotstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGotstmt(gotstmt newGotstmt)
  {
    if (newGotstmt != gotstmt)
    {
      NotificationChain msgs = null;
      if (gotstmt != null)
        msgs = ((InternalEObject)gotstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__GOTSTMT, null, msgs);
      if (newGotstmt != null)
        msgs = ((InternalEObject)newGotstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__GOTSTMT, null, msgs);
      msgs = basicSetGotstmt(newGotstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__GOTSTMT, newGotstmt, newGotstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public returnstmt getReturnstmt()
  {
    return returnstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReturnstmt(returnstmt newReturnstmt, NotificationChain msgs)
  {
    returnstmt oldReturnstmt = returnstmt;
    returnstmt = newReturnstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__RETURNSTMT, oldReturnstmt, newReturnstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReturnstmt(returnstmt newReturnstmt)
  {
    if (newReturnstmt != returnstmt)
    {
      NotificationChain msgs = null;
      if (returnstmt != null)
        msgs = ((InternalEObject)returnstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__RETURNSTMT, null, msgs);
      if (newReturnstmt != null)
        msgs = ((InternalEObject)newReturnstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__RETURNSTMT, null, msgs);
      msgs = basicSetReturnstmt(newReturnstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__RETURNSTMT, newReturnstmt, newReturnstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBreakstmt()
  {
    return breakstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBreakstmt(String newBreakstmt)
  {
    String oldBreakstmt = breakstmt;
    breakstmt = newBreakstmt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__BREAKSTMT, oldBreakstmt, breakstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getContinuestmt()
  {
    return continuestmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setContinuestmt(String newContinuestmt)
  {
    String oldContinuestmt = continuestmt;
    continuestmt = newContinuestmt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__CONTINUESTMT, oldContinuestmt, continuestmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getGotostmt()
  {
    return gotostmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGotostmt(String newGotostmt)
  {
    String oldGotostmt = gotostmt;
    gotostmt = newGotostmt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__GOTOSTMT, oldGotostmt, gotostmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFallthroughstmt()
  {
    return fallthroughstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFallthroughstmt(String newFallthroughstmt)
  {
    String oldFallthroughstmt = fallthroughstmt;
    fallthroughstmt = newFallthroughstmt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__FALLTHROUGHSTMT, oldFallthroughstmt, fallthroughstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public block getBlock()
  {
    return block;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBlock(block newBlock, NotificationChain msgs)
  {
    block oldBlock = block;
    block = newBlock;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__BLOCK, oldBlock, newBlock);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBlock(block newBlock)
  {
    if (newBlock != block)
    {
      NotificationChain msgs = null;
      if (block != null)
        msgs = ((InternalEObject)block).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__BLOCK, null, msgs);
      if (newBlock != null)
        msgs = ((InternalEObject)newBlock).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__BLOCK, null, msgs);
      msgs = basicSetBlock(newBlock, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__BLOCK, newBlock, newBlock));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ifstmt getIfstmt()
  {
    return ifstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfstmt(ifstmt newIfstmt, NotificationChain msgs)
  {
    ifstmt oldIfstmt = ifstmt;
    ifstmt = newIfstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__IFSTMT, oldIfstmt, newIfstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIfstmt(ifstmt newIfstmt)
  {
    if (newIfstmt != ifstmt)
    {
      NotificationChain msgs = null;
      if (ifstmt != null)
        msgs = ((InternalEObject)ifstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__IFSTMT, null, msgs);
      if (newIfstmt != null)
        msgs = ((InternalEObject)newIfstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__IFSTMT, null, msgs);
      msgs = basicSetIfstmt(newIfstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__IFSTMT, newIfstmt, newIfstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public switchstmt getSwitchstmt()
  {
    return switchstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSwitchstmt(switchstmt newSwitchstmt, NotificationChain msgs)
  {
    switchstmt oldSwitchstmt = switchstmt;
    switchstmt = newSwitchstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__SWITCHSTMT, oldSwitchstmt, newSwitchstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSwitchstmt(switchstmt newSwitchstmt)
  {
    if (newSwitchstmt != switchstmt)
    {
      NotificationChain msgs = null;
      if (switchstmt != null)
        msgs = ((InternalEObject)switchstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__SWITCHSTMT, null, msgs);
      if (newSwitchstmt != null)
        msgs = ((InternalEObject)newSwitchstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__SWITCHSTMT, null, msgs);
      msgs = basicSetSwitchstmt(newSwitchstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__SWITCHSTMT, newSwitchstmt, newSwitchstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public selectstmt getSelectstmt()
  {
    return selectstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSelectstmt(selectstmt newSelectstmt, NotificationChain msgs)
  {
    selectstmt oldSelectstmt = selectstmt;
    selectstmt = newSelectstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__SELECTSTMT, oldSelectstmt, newSelectstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSelectstmt(selectstmt newSelectstmt)
  {
    if (newSelectstmt != selectstmt)
    {
      NotificationChain msgs = null;
      if (selectstmt != null)
        msgs = ((InternalEObject)selectstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__SELECTSTMT, null, msgs);
      if (newSelectstmt != null)
        msgs = ((InternalEObject)newSelectstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__SELECTSTMT, null, msgs);
      msgs = basicSetSelectstmt(newSelectstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__SELECTSTMT, newSelectstmt, newSelectstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public forstmt getForstmt()
  {
    return forstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetForstmt(forstmt newForstmt, NotificationChain msgs)
  {
    forstmt oldForstmt = forstmt;
    forstmt = newForstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__FORSTMT, oldForstmt, newForstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setForstmt(forstmt newForstmt)
  {
    if (newForstmt != forstmt)
    {
      NotificationChain msgs = null;
      if (forstmt != null)
        msgs = ((InternalEObject)forstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__FORSTMT, null, msgs);
      if (newForstmt != null)
        msgs = ((InternalEObject)newForstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__FORSTMT, null, msgs);
      msgs = basicSetForstmt(newForstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__FORSTMT, newForstmt, newForstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public deferstmt getDeferstmt()
  {
    return deferstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDeferstmt(deferstmt newDeferstmt, NotificationChain msgs)
  {
    deferstmt oldDeferstmt = deferstmt;
    deferstmt = newDeferstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__DEFERSTMT, oldDeferstmt, newDeferstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDeferstmt(deferstmt newDeferstmt)
  {
    if (newDeferstmt != deferstmt)
    {
      NotificationChain msgs = null;
      if (deferstmt != null)
        msgs = ((InternalEObject)deferstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__DEFERSTMT, null, msgs);
      if (newDeferstmt != null)
        msgs = ((InternalEObject)newDeferstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.STATEMENT__DEFERSTMT, null, msgs);
      msgs = basicSetDeferstmt(newDeferstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.STATEMENT__DEFERSTMT, newDeferstmt, newDeferstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.STATEMENT__DECLARATION:
        return basicSetDeclaration(null, msgs);
      case MyDslPackage.STATEMENT__LABELEDSTMT:
        return basicSetLabeledstmt(null, msgs);
      case MyDslPackage.STATEMENT__SIMPLESTMT:
        return basicSetSimplestmt(null, msgs);
      case MyDslPackage.STATEMENT__GOTSTMT:
        return basicSetGotstmt(null, msgs);
      case MyDslPackage.STATEMENT__RETURNSTMT:
        return basicSetReturnstmt(null, msgs);
      case MyDslPackage.STATEMENT__BLOCK:
        return basicSetBlock(null, msgs);
      case MyDslPackage.STATEMENT__IFSTMT:
        return basicSetIfstmt(null, msgs);
      case MyDslPackage.STATEMENT__SWITCHSTMT:
        return basicSetSwitchstmt(null, msgs);
      case MyDslPackage.STATEMENT__SELECTSTMT:
        return basicSetSelectstmt(null, msgs);
      case MyDslPackage.STATEMENT__FORSTMT:
        return basicSetForstmt(null, msgs);
      case MyDslPackage.STATEMENT__DEFERSTMT:
        return basicSetDeferstmt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.STATEMENT__DECLARATION:
        return getDeclaration();
      case MyDslPackage.STATEMENT__LABELEDSTMT:
        return getLabeledstmt();
      case MyDslPackage.STATEMENT__SIMPLESTMT:
        return getSimplestmt();
      case MyDslPackage.STATEMENT__GOTSTMT:
        return getGotstmt();
      case MyDslPackage.STATEMENT__RETURNSTMT:
        return getReturnstmt();
      case MyDslPackage.STATEMENT__BREAKSTMT:
        return getBreakstmt();
      case MyDslPackage.STATEMENT__CONTINUESTMT:
        return getContinuestmt();
      case MyDslPackage.STATEMENT__GOTOSTMT:
        return getGotostmt();
      case MyDslPackage.STATEMENT__FALLTHROUGHSTMT:
        return getFallthroughstmt();
      case MyDslPackage.STATEMENT__BLOCK:
        return getBlock();
      case MyDslPackage.STATEMENT__IFSTMT:
        return getIfstmt();
      case MyDslPackage.STATEMENT__SWITCHSTMT:
        return getSwitchstmt();
      case MyDslPackage.STATEMENT__SELECTSTMT:
        return getSelectstmt();
      case MyDslPackage.STATEMENT__FORSTMT:
        return getForstmt();
      case MyDslPackage.STATEMENT__DEFERSTMT:
        return getDeferstmt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.STATEMENT__DECLARATION:
        setDeclaration((declaration)newValue);
        return;
      case MyDslPackage.STATEMENT__LABELEDSTMT:
        setLabeledstmt((labeledstmt)newValue);
        return;
      case MyDslPackage.STATEMENT__SIMPLESTMT:
        setSimplestmt((simplestmt)newValue);
        return;
      case MyDslPackage.STATEMENT__GOTSTMT:
        setGotstmt((gotstmt)newValue);
        return;
      case MyDslPackage.STATEMENT__RETURNSTMT:
        setReturnstmt((returnstmt)newValue);
        return;
      case MyDslPackage.STATEMENT__BREAKSTMT:
        setBreakstmt((String)newValue);
        return;
      case MyDslPackage.STATEMENT__CONTINUESTMT:
        setContinuestmt((String)newValue);
        return;
      case MyDslPackage.STATEMENT__GOTOSTMT:
        setGotostmt((String)newValue);
        return;
      case MyDslPackage.STATEMENT__FALLTHROUGHSTMT:
        setFallthroughstmt((String)newValue);
        return;
      case MyDslPackage.STATEMENT__BLOCK:
        setBlock((block)newValue);
        return;
      case MyDslPackage.STATEMENT__IFSTMT:
        setIfstmt((ifstmt)newValue);
        return;
      case MyDslPackage.STATEMENT__SWITCHSTMT:
        setSwitchstmt((switchstmt)newValue);
        return;
      case MyDslPackage.STATEMENT__SELECTSTMT:
        setSelectstmt((selectstmt)newValue);
        return;
      case MyDslPackage.STATEMENT__FORSTMT:
        setForstmt((forstmt)newValue);
        return;
      case MyDslPackage.STATEMENT__DEFERSTMT:
        setDeferstmt((deferstmt)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STATEMENT__DECLARATION:
        setDeclaration((declaration)null);
        return;
      case MyDslPackage.STATEMENT__LABELEDSTMT:
        setLabeledstmt((labeledstmt)null);
        return;
      case MyDslPackage.STATEMENT__SIMPLESTMT:
        setSimplestmt((simplestmt)null);
        return;
      case MyDslPackage.STATEMENT__GOTSTMT:
        setGotstmt((gotstmt)null);
        return;
      case MyDslPackage.STATEMENT__RETURNSTMT:
        setReturnstmt((returnstmt)null);
        return;
      case MyDslPackage.STATEMENT__BREAKSTMT:
        setBreakstmt(BREAKSTMT_EDEFAULT);
        return;
      case MyDslPackage.STATEMENT__CONTINUESTMT:
        setContinuestmt(CONTINUESTMT_EDEFAULT);
        return;
      case MyDslPackage.STATEMENT__GOTOSTMT:
        setGotostmt(GOTOSTMT_EDEFAULT);
        return;
      case MyDslPackage.STATEMENT__FALLTHROUGHSTMT:
        setFallthroughstmt(FALLTHROUGHSTMT_EDEFAULT);
        return;
      case MyDslPackage.STATEMENT__BLOCK:
        setBlock((block)null);
        return;
      case MyDslPackage.STATEMENT__IFSTMT:
        setIfstmt((ifstmt)null);
        return;
      case MyDslPackage.STATEMENT__SWITCHSTMT:
        setSwitchstmt((switchstmt)null);
        return;
      case MyDslPackage.STATEMENT__SELECTSTMT:
        setSelectstmt((selectstmt)null);
        return;
      case MyDslPackage.STATEMENT__FORSTMT:
        setForstmt((forstmt)null);
        return;
      case MyDslPackage.STATEMENT__DEFERSTMT:
        setDeferstmt((deferstmt)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.STATEMENT__DECLARATION:
        return declaration != null;
      case MyDslPackage.STATEMENT__LABELEDSTMT:
        return labeledstmt != null;
      case MyDslPackage.STATEMENT__SIMPLESTMT:
        return simplestmt != null;
      case MyDslPackage.STATEMENT__GOTSTMT:
        return gotstmt != null;
      case MyDslPackage.STATEMENT__RETURNSTMT:
        return returnstmt != null;
      case MyDslPackage.STATEMENT__BREAKSTMT:
        return BREAKSTMT_EDEFAULT == null ? breakstmt != null : !BREAKSTMT_EDEFAULT.equals(breakstmt);
      case MyDslPackage.STATEMENT__CONTINUESTMT:
        return CONTINUESTMT_EDEFAULT == null ? continuestmt != null : !CONTINUESTMT_EDEFAULT.equals(continuestmt);
      case MyDslPackage.STATEMENT__GOTOSTMT:
        return GOTOSTMT_EDEFAULT == null ? gotostmt != null : !GOTOSTMT_EDEFAULT.equals(gotostmt);
      case MyDslPackage.STATEMENT__FALLTHROUGHSTMT:
        return FALLTHROUGHSTMT_EDEFAULT == null ? fallthroughstmt != null : !FALLTHROUGHSTMT_EDEFAULT.equals(fallthroughstmt);
      case MyDslPackage.STATEMENT__BLOCK:
        return block != null;
      case MyDslPackage.STATEMENT__IFSTMT:
        return ifstmt != null;
      case MyDslPackage.STATEMENT__SWITCHSTMT:
        return switchstmt != null;
      case MyDslPackage.STATEMENT__SELECTSTMT:
        return selectstmt != null;
      case MyDslPackage.STATEMENT__FORSTMT:
        return forstmt != null;
      case MyDslPackage.STATEMENT__DEFERSTMT:
        return deferstmt != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (breakstmt: ");
    result.append(breakstmt);
    result.append(", continuestmt: ");
    result.append(continuestmt);
    result.append(", gotostmt: ");
    result.append(gotostmt);
    result.append(", fallthroughstmt: ");
    result.append(fallthroughstmt);
    result.append(')');
    return result.toString();
  }

} //statementImpl
