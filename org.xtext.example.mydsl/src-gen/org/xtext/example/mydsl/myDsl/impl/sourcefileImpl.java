/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.sourcefile;
import org.xtext.example.mydsl.myDsl.topleveldecl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>sourcefile</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.sourcefileImpl#getPackageclause <em>Packageclause</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.sourcefileImpl#getImportdecl <em>Importdecl</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.sourcefileImpl#getTopleveldecl <em>Topleveldecl</em>}</li>
 * </ul>
 *
 * @generated
 */
public class sourcefileImpl extends MinimalEObjectImpl.Container implements sourcefile
{
  /**
   * The cached value of the '{@link #getPackageclause() <em>Packageclause</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPackageclause()
   * @generated
   * @ordered
   */
  protected EList<String> packageclause;

  /**
   * The cached value of the '{@link #getImportdecl() <em>Importdecl</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportdecl()
   * @generated
   * @ordered
   */
  protected EList<String> importdecl;

  /**
   * The cached value of the '{@link #getTopleveldecl() <em>Topleveldecl</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTopleveldecl()
   * @generated
   * @ordered
   */
  protected EList<topleveldecl> topleveldecl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected sourcefileImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SOURCEFILE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getPackageclause()
  {
    if (packageclause == null)
    {
      packageclause = new EDataTypeEList<String>(String.class, this, MyDslPackage.SOURCEFILE__PACKAGECLAUSE);
    }
    return packageclause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getImportdecl()
  {
    if (importdecl == null)
    {
      importdecl = new EDataTypeEList<String>(String.class, this, MyDslPackage.SOURCEFILE__IMPORTDECL);
    }
    return importdecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<topleveldecl> getTopleveldecl()
  {
    if (topleveldecl == null)
    {
      topleveldecl = new EObjectContainmentEList<topleveldecl>(topleveldecl.class, this, MyDslPackage.SOURCEFILE__TOPLEVELDECL);
    }
    return topleveldecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.SOURCEFILE__TOPLEVELDECL:
        return ((InternalEList<?>)getTopleveldecl()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SOURCEFILE__PACKAGECLAUSE:
        return getPackageclause();
      case MyDslPackage.SOURCEFILE__IMPORTDECL:
        return getImportdecl();
      case MyDslPackage.SOURCEFILE__TOPLEVELDECL:
        return getTopleveldecl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SOURCEFILE__PACKAGECLAUSE:
        getPackageclause().clear();
        getPackageclause().addAll((Collection<? extends String>)newValue);
        return;
      case MyDslPackage.SOURCEFILE__IMPORTDECL:
        getImportdecl().clear();
        getImportdecl().addAll((Collection<? extends String>)newValue);
        return;
      case MyDslPackage.SOURCEFILE__TOPLEVELDECL:
        getTopleveldecl().clear();
        getTopleveldecl().addAll((Collection<? extends topleveldecl>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SOURCEFILE__PACKAGECLAUSE:
        getPackageclause().clear();
        return;
      case MyDslPackage.SOURCEFILE__IMPORTDECL:
        getImportdecl().clear();
        return;
      case MyDslPackage.SOURCEFILE__TOPLEVELDECL:
        getTopleveldecl().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SOURCEFILE__PACKAGECLAUSE:
        return packageclause != null && !packageclause.isEmpty();
      case MyDslPackage.SOURCEFILE__IMPORTDECL:
        return importdecl != null && !importdecl.isEmpty();
      case MyDslPackage.SOURCEFILE__TOPLEVELDECL:
        return topleveldecl != null && !topleveldecl.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (packageclause: ");
    result.append(packageclause);
    result.append(", importdecl: ");
    result.append(importdecl);
    result.append(')');
    return result.toString();
  }

} //sourcefileImpl
