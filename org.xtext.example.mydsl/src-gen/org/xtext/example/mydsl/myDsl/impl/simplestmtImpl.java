/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.assignment;
import org.xtext.example.mydsl.myDsl.expressionstmt;
import org.xtext.example.mydsl.myDsl.incdecstmt;
import org.xtext.example.mydsl.myDsl.poststmt;
import org.xtext.example.mydsl.myDsl.sendstmt;
import org.xtext.example.mydsl.myDsl.shortvardecl;
import org.xtext.example.mydsl.myDsl.simplestmt;
import org.xtext.example.mydsl.myDsl.typecaseclause;
import org.xtext.example.mydsl.myDsl.typeswitchguard;
import org.xtext.example.mydsl.myDsl.typeswitchstmt;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>simplestmt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getTypeswitchguard <em>Typeswitchguard</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getTypecaseclause <em>Typecaseclause</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getEmptystmt <em>Emptystmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getExpressionstmt <em>Expressionstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getSendstmt <em>Sendstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getIncdecstmt <em>Incdecstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getAssignment <em>Assignment</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.simplestmtImpl#getShortvardecl <em>Shortvardecl</em>}</li>
 * </ul>
 *
 * @generated
 */
public class simplestmtImpl extends initstmtImpl implements simplestmt
{
  /**
   * The cached value of the '{@link #getTypeswitchguard() <em>Typeswitchguard</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeswitchguard()
   * @generated
   * @ordered
   */
  protected typeswitchguard typeswitchguard;

  /**
   * The cached value of the '{@link #getTypecaseclause() <em>Typecaseclause</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypecaseclause()
   * @generated
   * @ordered
   */
  protected EList<typecaseclause> typecaseclause;

  /**
   * The default value of the '{@link #getEmptystmt() <em>Emptystmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmptystmt()
   * @generated
   * @ordered
   */
  protected static final String EMPTYSTMT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEmptystmt() <em>Emptystmt</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmptystmt()
   * @generated
   * @ordered
   */
  protected String emptystmt = EMPTYSTMT_EDEFAULT;

  /**
   * The cached value of the '{@link #getExpressionstmt() <em>Expressionstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpressionstmt()
   * @generated
   * @ordered
   */
  protected expressionstmt expressionstmt;

  /**
   * The cached value of the '{@link #getSendstmt() <em>Sendstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSendstmt()
   * @generated
   * @ordered
   */
  protected sendstmt sendstmt;

  /**
   * The cached value of the '{@link #getIncdecstmt() <em>Incdecstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIncdecstmt()
   * @generated
   * @ordered
   */
  protected incdecstmt incdecstmt;

  /**
   * The cached value of the '{@link #getAssignment() <em>Assignment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssignment()
   * @generated
   * @ordered
   */
  protected assignment assignment;

  /**
   * The cached value of the '{@link #getShortvardecl() <em>Shortvardecl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShortvardecl()
   * @generated
   * @ordered
   */
  protected shortvardecl shortvardecl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected simplestmtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SIMPLESTMT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public typeswitchguard getTypeswitchguard()
  {
    return typeswitchguard;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeswitchguard(typeswitchguard newTypeswitchguard, NotificationChain msgs)
  {
    typeswitchguard oldTypeswitchguard = typeswitchguard;
    typeswitchguard = newTypeswitchguard;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD, oldTypeswitchguard, newTypeswitchguard);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeswitchguard(typeswitchguard newTypeswitchguard)
  {
    if (newTypeswitchguard != typeswitchguard)
    {
      NotificationChain msgs = null;
      if (typeswitchguard != null)
        msgs = ((InternalEObject)typeswitchguard).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD, null, msgs);
      if (newTypeswitchguard != null)
        msgs = ((InternalEObject)newTypeswitchguard).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD, null, msgs);
      msgs = basicSetTypeswitchguard(newTypeswitchguard, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD, newTypeswitchguard, newTypeswitchguard));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<typecaseclause> getTypecaseclause()
  {
    if (typecaseclause == null)
    {
      typecaseclause = new EObjectContainmentEList<typecaseclause>(typecaseclause.class, this, MyDslPackage.SIMPLESTMT__TYPECASECLAUSE);
    }
    return typecaseclause;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEmptystmt()
  {
    return emptystmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEmptystmt(String newEmptystmt)
  {
    String oldEmptystmt = emptystmt;
    emptystmt = newEmptystmt;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__EMPTYSTMT, oldEmptystmt, emptystmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expressionstmt getExpressionstmt()
  {
    return expressionstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpressionstmt(expressionstmt newExpressionstmt, NotificationChain msgs)
  {
    expressionstmt oldExpressionstmt = expressionstmt;
    expressionstmt = newExpressionstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT, oldExpressionstmt, newExpressionstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpressionstmt(expressionstmt newExpressionstmt)
  {
    if (newExpressionstmt != expressionstmt)
    {
      NotificationChain msgs = null;
      if (expressionstmt != null)
        msgs = ((InternalEObject)expressionstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT, null, msgs);
      if (newExpressionstmt != null)
        msgs = ((InternalEObject)newExpressionstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT, null, msgs);
      msgs = basicSetExpressionstmt(newExpressionstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT, newExpressionstmt, newExpressionstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public sendstmt getSendstmt()
  {
    return sendstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSendstmt(sendstmt newSendstmt, NotificationChain msgs)
  {
    sendstmt oldSendstmt = sendstmt;
    sendstmt = newSendstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__SENDSTMT, oldSendstmt, newSendstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSendstmt(sendstmt newSendstmt)
  {
    if (newSendstmt != sendstmt)
    {
      NotificationChain msgs = null;
      if (sendstmt != null)
        msgs = ((InternalEObject)sendstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__SENDSTMT, null, msgs);
      if (newSendstmt != null)
        msgs = ((InternalEObject)newSendstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__SENDSTMT, null, msgs);
      msgs = basicSetSendstmt(newSendstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__SENDSTMT, newSendstmt, newSendstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public incdecstmt getIncdecstmt()
  {
    return incdecstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIncdecstmt(incdecstmt newIncdecstmt, NotificationChain msgs)
  {
    incdecstmt oldIncdecstmt = incdecstmt;
    incdecstmt = newIncdecstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__INCDECSTMT, oldIncdecstmt, newIncdecstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIncdecstmt(incdecstmt newIncdecstmt)
  {
    if (newIncdecstmt != incdecstmt)
    {
      NotificationChain msgs = null;
      if (incdecstmt != null)
        msgs = ((InternalEObject)incdecstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__INCDECSTMT, null, msgs);
      if (newIncdecstmt != null)
        msgs = ((InternalEObject)newIncdecstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__INCDECSTMT, null, msgs);
      msgs = basicSetIncdecstmt(newIncdecstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__INCDECSTMT, newIncdecstmt, newIncdecstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public assignment getAssignment()
  {
    return assignment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAssignment(assignment newAssignment, NotificationChain msgs)
  {
    assignment oldAssignment = assignment;
    assignment = newAssignment;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__ASSIGNMENT, oldAssignment, newAssignment);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAssignment(assignment newAssignment)
  {
    if (newAssignment != assignment)
    {
      NotificationChain msgs = null;
      if (assignment != null)
        msgs = ((InternalEObject)assignment).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__ASSIGNMENT, null, msgs);
      if (newAssignment != null)
        msgs = ((InternalEObject)newAssignment).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__ASSIGNMENT, null, msgs);
      msgs = basicSetAssignment(newAssignment, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__ASSIGNMENT, newAssignment, newAssignment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public shortvardecl getShortvardecl()
  {
    return shortvardecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetShortvardecl(shortvardecl newShortvardecl, NotificationChain msgs)
  {
    shortvardecl oldShortvardecl = shortvardecl;
    shortvardecl = newShortvardecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__SHORTVARDECL, oldShortvardecl, newShortvardecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setShortvardecl(shortvardecl newShortvardecl)
  {
    if (newShortvardecl != shortvardecl)
    {
      NotificationChain msgs = null;
      if (shortvardecl != null)
        msgs = ((InternalEObject)shortvardecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__SHORTVARDECL, null, msgs);
      if (newShortvardecl != null)
        msgs = ((InternalEObject)newShortvardecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SIMPLESTMT__SHORTVARDECL, null, msgs);
      msgs = basicSetShortvardecl(newShortvardecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SIMPLESTMT__SHORTVARDECL, newShortvardecl, newShortvardecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD:
        return basicSetTypeswitchguard(null, msgs);
      case MyDslPackage.SIMPLESTMT__TYPECASECLAUSE:
        return ((InternalEList<?>)getTypecaseclause()).basicRemove(otherEnd, msgs);
      case MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT:
        return basicSetExpressionstmt(null, msgs);
      case MyDslPackage.SIMPLESTMT__SENDSTMT:
        return basicSetSendstmt(null, msgs);
      case MyDslPackage.SIMPLESTMT__INCDECSTMT:
        return basicSetIncdecstmt(null, msgs);
      case MyDslPackage.SIMPLESTMT__ASSIGNMENT:
        return basicSetAssignment(null, msgs);
      case MyDslPackage.SIMPLESTMT__SHORTVARDECL:
        return basicSetShortvardecl(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD:
        return getTypeswitchguard();
      case MyDslPackage.SIMPLESTMT__TYPECASECLAUSE:
        return getTypecaseclause();
      case MyDslPackage.SIMPLESTMT__EMPTYSTMT:
        return getEmptystmt();
      case MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT:
        return getExpressionstmt();
      case MyDslPackage.SIMPLESTMT__SENDSTMT:
        return getSendstmt();
      case MyDslPackage.SIMPLESTMT__INCDECSTMT:
        return getIncdecstmt();
      case MyDslPackage.SIMPLESTMT__ASSIGNMENT:
        return getAssignment();
      case MyDslPackage.SIMPLESTMT__SHORTVARDECL:
        return getShortvardecl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD:
        setTypeswitchguard((typeswitchguard)newValue);
        return;
      case MyDslPackage.SIMPLESTMT__TYPECASECLAUSE:
        getTypecaseclause().clear();
        getTypecaseclause().addAll((Collection<? extends typecaseclause>)newValue);
        return;
      case MyDslPackage.SIMPLESTMT__EMPTYSTMT:
        setEmptystmt((String)newValue);
        return;
      case MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT:
        setExpressionstmt((expressionstmt)newValue);
        return;
      case MyDslPackage.SIMPLESTMT__SENDSTMT:
        setSendstmt((sendstmt)newValue);
        return;
      case MyDslPackage.SIMPLESTMT__INCDECSTMT:
        setIncdecstmt((incdecstmt)newValue);
        return;
      case MyDslPackage.SIMPLESTMT__ASSIGNMENT:
        setAssignment((assignment)newValue);
        return;
      case MyDslPackage.SIMPLESTMT__SHORTVARDECL:
        setShortvardecl((shortvardecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD:
        setTypeswitchguard((typeswitchguard)null);
        return;
      case MyDslPackage.SIMPLESTMT__TYPECASECLAUSE:
        getTypecaseclause().clear();
        return;
      case MyDslPackage.SIMPLESTMT__EMPTYSTMT:
        setEmptystmt(EMPTYSTMT_EDEFAULT);
        return;
      case MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT:
        setExpressionstmt((expressionstmt)null);
        return;
      case MyDslPackage.SIMPLESTMT__SENDSTMT:
        setSendstmt((sendstmt)null);
        return;
      case MyDslPackage.SIMPLESTMT__INCDECSTMT:
        setIncdecstmt((incdecstmt)null);
        return;
      case MyDslPackage.SIMPLESTMT__ASSIGNMENT:
        setAssignment((assignment)null);
        return;
      case MyDslPackage.SIMPLESTMT__SHORTVARDECL:
        setShortvardecl((shortvardecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD:
        return typeswitchguard != null;
      case MyDslPackage.SIMPLESTMT__TYPECASECLAUSE:
        return typecaseclause != null && !typecaseclause.isEmpty();
      case MyDslPackage.SIMPLESTMT__EMPTYSTMT:
        return EMPTYSTMT_EDEFAULT == null ? emptystmt != null : !EMPTYSTMT_EDEFAULT.equals(emptystmt);
      case MyDslPackage.SIMPLESTMT__EXPRESSIONSTMT:
        return expressionstmt != null;
      case MyDslPackage.SIMPLESTMT__SENDSTMT:
        return sendstmt != null;
      case MyDslPackage.SIMPLESTMT__INCDECSTMT:
        return incdecstmt != null;
      case MyDslPackage.SIMPLESTMT__ASSIGNMENT:
        return assignment != null;
      case MyDslPackage.SIMPLESTMT__SHORTVARDECL:
        return shortvardecl != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == poststmt.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == typeswitchstmt.class)
    {
      switch (derivedFeatureID)
      {
        case MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD: return MyDslPackage.TYPESWITCHSTMT__TYPESWITCHGUARD;
        case MyDslPackage.SIMPLESTMT__TYPECASECLAUSE: return MyDslPackage.TYPESWITCHSTMT__TYPECASECLAUSE;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == poststmt.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == typeswitchstmt.class)
    {
      switch (baseFeatureID)
      {
        case MyDslPackage.TYPESWITCHSTMT__TYPESWITCHGUARD: return MyDslPackage.SIMPLESTMT__TYPESWITCHGUARD;
        case MyDslPackage.TYPESWITCHSTMT__TYPECASECLAUSE: return MyDslPackage.SIMPLESTMT__TYPECASECLAUSE;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (emptystmt: ");
    result.append(emptystmt);
    result.append(')');
    return result.toString();
  }

} //simplestmtImpl
