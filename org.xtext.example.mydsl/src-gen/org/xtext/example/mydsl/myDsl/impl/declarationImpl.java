/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.constdecl;
import org.xtext.example.mydsl.myDsl.declaration;
import org.xtext.example.mydsl.myDsl.typedecl;
import org.xtext.example.mydsl.myDsl.vardecl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.declarationImpl#getConstdecl <em>Constdecl</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.declarationImpl#getTypedecl <em>Typedecl</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.declarationImpl#getVardecl <em>Vardecl</em>}</li>
 * </ul>
 *
 * @generated
 */
public class declarationImpl extends topleveldeclImpl implements declaration
{
  /**
   * The cached value of the '{@link #getConstdecl() <em>Constdecl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstdecl()
   * @generated
   * @ordered
   */
  protected constdecl constdecl;

  /**
   * The cached value of the '{@link #getTypedecl() <em>Typedecl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypedecl()
   * @generated
   * @ordered
   */
  protected typedecl typedecl;

  /**
   * The cached value of the '{@link #getVardecl() <em>Vardecl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVardecl()
   * @generated
   * @ordered
   */
  protected vardecl vardecl;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected declarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constdecl getConstdecl()
  {
    return constdecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstdecl(constdecl newConstdecl, NotificationChain msgs)
  {
    constdecl oldConstdecl = constdecl;
    constdecl = newConstdecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION__CONSTDECL, oldConstdecl, newConstdecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstdecl(constdecl newConstdecl)
  {
    if (newConstdecl != constdecl)
    {
      NotificationChain msgs = null;
      if (constdecl != null)
        msgs = ((InternalEObject)constdecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION__CONSTDECL, null, msgs);
      if (newConstdecl != null)
        msgs = ((InternalEObject)newConstdecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION__CONSTDECL, null, msgs);
      msgs = basicSetConstdecl(newConstdecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION__CONSTDECL, newConstdecl, newConstdecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public typedecl getTypedecl()
  {
    return typedecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypedecl(typedecl newTypedecl, NotificationChain msgs)
  {
    typedecl oldTypedecl = typedecl;
    typedecl = newTypedecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION__TYPEDECL, oldTypedecl, newTypedecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypedecl(typedecl newTypedecl)
  {
    if (newTypedecl != typedecl)
    {
      NotificationChain msgs = null;
      if (typedecl != null)
        msgs = ((InternalEObject)typedecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION__TYPEDECL, null, msgs);
      if (newTypedecl != null)
        msgs = ((InternalEObject)newTypedecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION__TYPEDECL, null, msgs);
      msgs = basicSetTypedecl(newTypedecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION__TYPEDECL, newTypedecl, newTypedecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public vardecl getVardecl()
  {
    return vardecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVardecl(vardecl newVardecl, NotificationChain msgs)
  {
    vardecl oldVardecl = vardecl;
    vardecl = newVardecl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION__VARDECL, oldVardecl, newVardecl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVardecl(vardecl newVardecl)
  {
    if (newVardecl != vardecl)
    {
      NotificationChain msgs = null;
      if (vardecl != null)
        msgs = ((InternalEObject)vardecl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION__VARDECL, null, msgs);
      if (newVardecl != null)
        msgs = ((InternalEObject)newVardecl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.DECLARATION__VARDECL, null, msgs);
      msgs = basicSetVardecl(newVardecl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DECLARATION__VARDECL, newVardecl, newVardecl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION__CONSTDECL:
        return basicSetConstdecl(null, msgs);
      case MyDslPackage.DECLARATION__TYPEDECL:
        return basicSetTypedecl(null, msgs);
      case MyDslPackage.DECLARATION__VARDECL:
        return basicSetVardecl(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION__CONSTDECL:
        return getConstdecl();
      case MyDslPackage.DECLARATION__TYPEDECL:
        return getTypedecl();
      case MyDslPackage.DECLARATION__VARDECL:
        return getVardecl();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION__CONSTDECL:
        setConstdecl((constdecl)newValue);
        return;
      case MyDslPackage.DECLARATION__TYPEDECL:
        setTypedecl((typedecl)newValue);
        return;
      case MyDslPackage.DECLARATION__VARDECL:
        setVardecl((vardecl)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION__CONSTDECL:
        setConstdecl((constdecl)null);
        return;
      case MyDslPackage.DECLARATION__TYPEDECL:
        setTypedecl((typedecl)null);
        return;
      case MyDslPackage.DECLARATION__VARDECL:
        setVardecl((vardecl)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DECLARATION__CONSTDECL:
        return constdecl != null;
      case MyDslPackage.DECLARATION__TYPEDECL:
        return typedecl != null;
      case MyDslPackage.DECLARATION__VARDECL:
        return vardecl != null;
    }
    return super.eIsSet(featureID);
  }

} //declarationImpl
