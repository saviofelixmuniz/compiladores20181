/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.functionbody;
import org.xtext.example.mydsl.myDsl.methoddecl;
import org.xtext.example.mydsl.myDsl.receiver;
import org.xtext.example.mydsl.myDsl.signature;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>methoddecl</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.methoddeclImpl#getReceiver <em>Receiver</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.methoddeclImpl#getMethodname <em>Methodname</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.methoddeclImpl#getSignature <em>Signature</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.methoddeclImpl#getFunctionbody <em>Functionbody</em>}</li>
 * </ul>
 *
 * @generated
 */
public class methoddeclImpl extends MinimalEObjectImpl.Container implements methoddecl
{
  /**
   * The cached value of the '{@link #getReceiver() <em>Receiver</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReceiver()
   * @generated
   * @ordered
   */
  protected receiver receiver;

  /**
   * The default value of the '{@link #getMethodname() <em>Methodname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodname()
   * @generated
   * @ordered
   */
  protected static final String METHODNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMethodname() <em>Methodname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodname()
   * @generated
   * @ordered
   */
  protected String methodname = METHODNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getSignature() <em>Signature</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSignature()
   * @generated
   * @ordered
   */
  protected signature signature;

  /**
   * The cached value of the '{@link #getFunctionbody() <em>Functionbody</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionbody()
   * @generated
   * @ordered
   */
  protected functionbody functionbody;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected methoddeclImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.METHODDECL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public receiver getReceiver()
  {
    return receiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReceiver(receiver newReceiver, NotificationChain msgs)
  {
    receiver oldReceiver = receiver;
    receiver = newReceiver;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.METHODDECL__RECEIVER, oldReceiver, newReceiver);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReceiver(receiver newReceiver)
  {
    if (newReceiver != receiver)
    {
      NotificationChain msgs = null;
      if (receiver != null)
        msgs = ((InternalEObject)receiver).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.METHODDECL__RECEIVER, null, msgs);
      if (newReceiver != null)
        msgs = ((InternalEObject)newReceiver).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.METHODDECL__RECEIVER, null, msgs);
      msgs = basicSetReceiver(newReceiver, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.METHODDECL__RECEIVER, newReceiver, newReceiver));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMethodname()
  {
    return methodname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMethodname(String newMethodname)
  {
    String oldMethodname = methodname;
    methodname = newMethodname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.METHODDECL__METHODNAME, oldMethodname, methodname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public signature getSignature()
  {
    return signature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSignature(signature newSignature, NotificationChain msgs)
  {
    signature oldSignature = signature;
    signature = newSignature;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.METHODDECL__SIGNATURE, oldSignature, newSignature);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSignature(signature newSignature)
  {
    if (newSignature != signature)
    {
      NotificationChain msgs = null;
      if (signature != null)
        msgs = ((InternalEObject)signature).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.METHODDECL__SIGNATURE, null, msgs);
      if (newSignature != null)
        msgs = ((InternalEObject)newSignature).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.METHODDECL__SIGNATURE, null, msgs);
      msgs = basicSetSignature(newSignature, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.METHODDECL__SIGNATURE, newSignature, newSignature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public functionbody getFunctionbody()
  {
    return functionbody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunctionbody(functionbody newFunctionbody, NotificationChain msgs)
  {
    functionbody oldFunctionbody = functionbody;
    functionbody = newFunctionbody;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.METHODDECL__FUNCTIONBODY, oldFunctionbody, newFunctionbody);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunctionbody(functionbody newFunctionbody)
  {
    if (newFunctionbody != functionbody)
    {
      NotificationChain msgs = null;
      if (functionbody != null)
        msgs = ((InternalEObject)functionbody).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.METHODDECL__FUNCTIONBODY, null, msgs);
      if (newFunctionbody != null)
        msgs = ((InternalEObject)newFunctionbody).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.METHODDECL__FUNCTIONBODY, null, msgs);
      msgs = basicSetFunctionbody(newFunctionbody, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.METHODDECL__FUNCTIONBODY, newFunctionbody, newFunctionbody));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.METHODDECL__RECEIVER:
        return basicSetReceiver(null, msgs);
      case MyDslPackage.METHODDECL__SIGNATURE:
        return basicSetSignature(null, msgs);
      case MyDslPackage.METHODDECL__FUNCTIONBODY:
        return basicSetFunctionbody(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.METHODDECL__RECEIVER:
        return getReceiver();
      case MyDslPackage.METHODDECL__METHODNAME:
        return getMethodname();
      case MyDslPackage.METHODDECL__SIGNATURE:
        return getSignature();
      case MyDslPackage.METHODDECL__FUNCTIONBODY:
        return getFunctionbody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.METHODDECL__RECEIVER:
        setReceiver((receiver)newValue);
        return;
      case MyDslPackage.METHODDECL__METHODNAME:
        setMethodname((String)newValue);
        return;
      case MyDslPackage.METHODDECL__SIGNATURE:
        setSignature((signature)newValue);
        return;
      case MyDslPackage.METHODDECL__FUNCTIONBODY:
        setFunctionbody((functionbody)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.METHODDECL__RECEIVER:
        setReceiver((receiver)null);
        return;
      case MyDslPackage.METHODDECL__METHODNAME:
        setMethodname(METHODNAME_EDEFAULT);
        return;
      case MyDslPackage.METHODDECL__SIGNATURE:
        setSignature((signature)null);
        return;
      case MyDslPackage.METHODDECL__FUNCTIONBODY:
        setFunctionbody((functionbody)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.METHODDECL__RECEIVER:
        return receiver != null;
      case MyDslPackage.METHODDECL__METHODNAME:
        return METHODNAME_EDEFAULT == null ? methodname != null : !METHODNAME_EDEFAULT.equals(methodname);
      case MyDslPackage.METHODDECL__SIGNATURE:
        return signature != null;
      case MyDslPackage.METHODDECL__FUNCTIONBODY:
        return functionbody != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (methodname: ");
    result.append(methodname);
    result.append(')');
    return result.toString();
  }

} //methoddeclImpl
