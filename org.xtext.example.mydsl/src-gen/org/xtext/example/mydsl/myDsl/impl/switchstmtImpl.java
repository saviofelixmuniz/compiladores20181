/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.exprswitchstmt;
import org.xtext.example.mydsl.myDsl.switchstmt;
import org.xtext.example.mydsl.myDsl.typeswitchstmt;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>switchstmt</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.switchstmtImpl#getExprswitchstmt <em>Exprswitchstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.switchstmtImpl#getTypeswitchstmt <em>Typeswitchstmt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class switchstmtImpl extends MinimalEObjectImpl.Container implements switchstmt
{
  /**
   * The cached value of the '{@link #getExprswitchstmt() <em>Exprswitchstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExprswitchstmt()
   * @generated
   * @ordered
   */
  protected exprswitchstmt exprswitchstmt;

  /**
   * The cached value of the '{@link #getTypeswitchstmt() <em>Typeswitchstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeswitchstmt()
   * @generated
   * @ordered
   */
  protected typeswitchstmt typeswitchstmt;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected switchstmtImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SWITCHSTMT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public exprswitchstmt getExprswitchstmt()
  {
    return exprswitchstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExprswitchstmt(exprswitchstmt newExprswitchstmt, NotificationChain msgs)
  {
    exprswitchstmt oldExprswitchstmt = exprswitchstmt;
    exprswitchstmt = newExprswitchstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT, oldExprswitchstmt, newExprswitchstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExprswitchstmt(exprswitchstmt newExprswitchstmt)
  {
    if (newExprswitchstmt != exprswitchstmt)
    {
      NotificationChain msgs = null;
      if (exprswitchstmt != null)
        msgs = ((InternalEObject)exprswitchstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT, null, msgs);
      if (newExprswitchstmt != null)
        msgs = ((InternalEObject)newExprswitchstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT, null, msgs);
      msgs = basicSetExprswitchstmt(newExprswitchstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT, newExprswitchstmt, newExprswitchstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public typeswitchstmt getTypeswitchstmt()
  {
    return typeswitchstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeswitchstmt(typeswitchstmt newTypeswitchstmt, NotificationChain msgs)
  {
    typeswitchstmt oldTypeswitchstmt = typeswitchstmt;
    typeswitchstmt = newTypeswitchstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT, oldTypeswitchstmt, newTypeswitchstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeswitchstmt(typeswitchstmt newTypeswitchstmt)
  {
    if (newTypeswitchstmt != typeswitchstmt)
    {
      NotificationChain msgs = null;
      if (typeswitchstmt != null)
        msgs = ((InternalEObject)typeswitchstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT, null, msgs);
      if (newTypeswitchstmt != null)
        msgs = ((InternalEObject)newTypeswitchstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT, null, msgs);
      msgs = basicSetTypeswitchstmt(newTypeswitchstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT, newTypeswitchstmt, newTypeswitchstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT:
        return basicSetExprswitchstmt(null, msgs);
      case MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT:
        return basicSetTypeswitchstmt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT:
        return getExprswitchstmt();
      case MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT:
        return getTypeswitchstmt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT:
        setExprswitchstmt((exprswitchstmt)newValue);
        return;
      case MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT:
        setTypeswitchstmt((typeswitchstmt)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT:
        setExprswitchstmt((exprswitchstmt)null);
        return;
      case MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT:
        setTypeswitchstmt((typeswitchstmt)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SWITCHSTMT__EXPRSWITCHSTMT:
        return exprswitchstmt != null;
      case MyDslPackage.SWITCHSTMT__TYPESWITCHSTMT:
        return typeswitchstmt != null;
    }
    return super.eIsSet(featureID);
  }

} //switchstmtImpl
