/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.commcase;
import org.xtext.example.mydsl.myDsl.expression;
import org.xtext.example.mydsl.myDsl.recvstmt;
import org.xtext.example.mydsl.myDsl.sendstmt;
import org.xtext.example.mydsl.myDsl.statementlist;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>commcase</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.commcaseImpl#getStatementlist <em>Statementlist</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.commcaseImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.commcaseImpl#getSendstmt <em>Sendstmt</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.commcaseImpl#getRecvstmt <em>Recvstmt</em>}</li>
 * </ul>
 *
 * @generated
 */
public class commcaseImpl extends commclauseImpl implements commcase
{
  /**
   * The cached value of the '{@link #getStatementlist() <em>Statementlist</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStatementlist()
   * @generated
   * @ordered
   */
  protected statementlist statementlist;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected expression expression;

  /**
   * The cached value of the '{@link #getSendstmt() <em>Sendstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSendstmt()
   * @generated
   * @ordered
   */
  protected sendstmt sendstmt;

  /**
   * The cached value of the '{@link #getRecvstmt() <em>Recvstmt</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecvstmt()
   * @generated
   * @ordered
   */
  protected recvstmt recvstmt;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected commcaseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.COMMCASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public statementlist getStatementlist()
  {
    return statementlist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStatementlist(statementlist newStatementlist, NotificationChain msgs)
  {
    statementlist oldStatementlist = statementlist;
    statementlist = newStatementlist;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__STATEMENTLIST, oldStatementlist, newStatementlist);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStatementlist(statementlist newStatementlist)
  {
    if (newStatementlist != statementlist)
    {
      NotificationChain msgs = null;
      if (statementlist != null)
        msgs = ((InternalEObject)statementlist).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__STATEMENTLIST, null, msgs);
      if (newStatementlist != null)
        msgs = ((InternalEObject)newStatementlist).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__STATEMENTLIST, null, msgs);
      msgs = basicSetStatementlist(newStatementlist, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__STATEMENTLIST, newStatementlist, newStatementlist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public expression getExpression()
  {
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpression(expression newExpression, NotificationChain msgs)
  {
    expression oldExpression = expression;
    expression = newExpression;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__EXPRESSION, oldExpression, newExpression);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExpression(expression newExpression)
  {
    if (newExpression != expression)
    {
      NotificationChain msgs = null;
      if (expression != null)
        msgs = ((InternalEObject)expression).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__EXPRESSION, null, msgs);
      if (newExpression != null)
        msgs = ((InternalEObject)newExpression).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__EXPRESSION, null, msgs);
      msgs = basicSetExpression(newExpression, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__EXPRESSION, newExpression, newExpression));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public sendstmt getSendstmt()
  {
    return sendstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSendstmt(sendstmt newSendstmt, NotificationChain msgs)
  {
    sendstmt oldSendstmt = sendstmt;
    sendstmt = newSendstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__SENDSTMT, oldSendstmt, newSendstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSendstmt(sendstmt newSendstmt)
  {
    if (newSendstmt != sendstmt)
    {
      NotificationChain msgs = null;
      if (sendstmt != null)
        msgs = ((InternalEObject)sendstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__SENDSTMT, null, msgs);
      if (newSendstmt != null)
        msgs = ((InternalEObject)newSendstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__SENDSTMT, null, msgs);
      msgs = basicSetSendstmt(newSendstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__SENDSTMT, newSendstmt, newSendstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public recvstmt getRecvstmt()
  {
    return recvstmt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRecvstmt(recvstmt newRecvstmt, NotificationChain msgs)
  {
    recvstmt oldRecvstmt = recvstmt;
    recvstmt = newRecvstmt;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__RECVSTMT, oldRecvstmt, newRecvstmt);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRecvstmt(recvstmt newRecvstmt)
  {
    if (newRecvstmt != recvstmt)
    {
      NotificationChain msgs = null;
      if (recvstmt != null)
        msgs = ((InternalEObject)recvstmt).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__RECVSTMT, null, msgs);
      if (newRecvstmt != null)
        msgs = ((InternalEObject)newRecvstmt).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.COMMCASE__RECVSTMT, null, msgs);
      msgs = basicSetRecvstmt(newRecvstmt, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.COMMCASE__RECVSTMT, newRecvstmt, newRecvstmt));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMCASE__STATEMENTLIST:
        return basicSetStatementlist(null, msgs);
      case MyDslPackage.COMMCASE__EXPRESSION:
        return basicSetExpression(null, msgs);
      case MyDslPackage.COMMCASE__SENDSTMT:
        return basicSetSendstmt(null, msgs);
      case MyDslPackage.COMMCASE__RECVSTMT:
        return basicSetRecvstmt(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMCASE__STATEMENTLIST:
        return getStatementlist();
      case MyDslPackage.COMMCASE__EXPRESSION:
        return getExpression();
      case MyDslPackage.COMMCASE__SENDSTMT:
        return getSendstmt();
      case MyDslPackage.COMMCASE__RECVSTMT:
        return getRecvstmt();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMCASE__STATEMENTLIST:
        setStatementlist((statementlist)newValue);
        return;
      case MyDslPackage.COMMCASE__EXPRESSION:
        setExpression((expression)newValue);
        return;
      case MyDslPackage.COMMCASE__SENDSTMT:
        setSendstmt((sendstmt)newValue);
        return;
      case MyDslPackage.COMMCASE__RECVSTMT:
        setRecvstmt((recvstmt)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMCASE__STATEMENTLIST:
        setStatementlist((statementlist)null);
        return;
      case MyDslPackage.COMMCASE__EXPRESSION:
        setExpression((expression)null);
        return;
      case MyDslPackage.COMMCASE__SENDSTMT:
        setSendstmt((sendstmt)null);
        return;
      case MyDslPackage.COMMCASE__RECVSTMT:
        setRecvstmt((recvstmt)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.COMMCASE__STATEMENTLIST:
        return statementlist != null;
      case MyDslPackage.COMMCASE__EXPRESSION:
        return expression != null;
      case MyDslPackage.COMMCASE__SENDSTMT:
        return sendstmt != null;
      case MyDslPackage.COMMCASE__RECVSTMT:
        return recvstmt != null;
    }
    return super.eIsSet(featureID);
  }

} //commcaseImpl
