/*
 * generated by Xtext 2.14.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "sourcefile";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulesourcefile
entryRulesourcefile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourcefileRule()); }
	iv_rulesourcefile=rulesourcefile
	{ $current=$iv_rulesourcefile.current; }
	EOF;

// Rule sourcefile
rulesourcefile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSourcefileAccess().getPackageclausePackageclauseParserRuleCall_0_0());
				}
				lv_packageclause_0_0=rulepackageclause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourcefileRule());
					}
					add(
						$current,
						"packageclause",
						lv_packageclause_0_0,
						"org.xtext.example.mydsl.MyDsl.packageclause");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=';'
		{
			newLeafNode(otherlv_1, grammarAccess.getSourcefileAccess().getSemicolonKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSourcefileAccess().getImportdeclImportdeclParserRuleCall_2_0_0());
					}
					lv_importdecl_2_0=ruleimportdecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourcefileRule());
						}
						add(
							$current,
							"importdecl",
							lv_importdecl_2_0,
							"org.xtext.example.mydsl.MyDsl.importdecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getSourcefileAccess().getSemicolonKeyword_2_1());
			}
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSourcefileAccess().getTopleveldeclTopleveldeclParserRuleCall_3_0_0());
					}
					lv_topleveldecl_4_0=ruletopleveldecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSourcefileRule());
						}
						add(
							$current,
							"topleveldecl",
							lv_topleveldecl_4_0,
							"org.xtext.example.mydsl.MyDsl.topleveldecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getSourcefileAccess().getSemicolonKeyword_3_1());
			}
		)*
	)
;

// Entry rule entryRuleimportdecl
entryRuleimportdecl returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportdeclRule()); }
	iv_ruleimportdecl=ruleimportdecl
	{ $current=$iv_ruleimportdecl.current.getText(); }
	EOF;

// Rule importdecl
ruleimportdecl returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='import'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getImportdeclAccess().getImportKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getImportdeclAccess().getImportspecParserRuleCall_1_0());
			}
			this_importspec_1=ruleimportspec
			{
				$current.merge(this_importspec_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			(
				kw='('
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportdeclAccess().getLeftParenthesisKeyword_1_1_0());
				}
				(
					{
						newCompositeNode(grammarAccess.getImportdeclAccess().getImportspecParserRuleCall_1_1_1_0());
					}
					this_importspec_3=ruleimportspec
					{
						$current.merge(this_importspec_3);
					}
					{
						afterParserOrEnumRuleCall();
					}
					kw=';'
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getImportdeclAccess().getSemicolonKeyword_1_1_1_1());
					}
				)*
				kw='}'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getImportdeclAccess().getRightCurlyBracketKeyword_1_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleimportspec
entryRuleimportspec returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportspecRule()); }
	iv_ruleimportspec=ruleimportspec
	{ $current=$iv_ruleimportspec.current.getText(); }
	EOF;

// Rule importspec
ruleimportspec returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getImportspecAccess().getFullStopKeyword_0_0());
			}
			    |
			{
				newCompositeNode(grammarAccess.getImportspecAccess().getPackagenameParserRuleCall_0_1());
			}
			this_packagename_1=rulepackagename
			{
				$current.merge(this_packagename_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
		{
			newCompositeNode(grammarAccess.getImportspecAccess().getImportpathParserRuleCall_1());
		}
		this_importpath_2=ruleimportpath
		{
			$current.merge(this_importpath_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleimportpath
entryRuleimportpath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImportpathRule()); }
	iv_ruleimportpath=ruleimportpath
	{ $current=$iv_ruleimportpath.current.getText(); }
	EOF;

// Rule importpath
ruleimportpath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getImportpathAccess().getString_litParserRuleCall());
	}
	this_string_lit_0=rulestring_lit
	{
		$current.merge(this_string_lit_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulepackageclause
entryRulepackageclause returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackageclauseRule()); }
	iv_rulepackageclause=rulepackageclause
	{ $current=$iv_rulepackageclause.current.getText(); }
	EOF;

// Rule packageclause
rulepackageclause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='package'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPackageclauseAccess().getPackageKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getPackageclauseAccess().getPackagenameParserRuleCall_1());
		}
		this_packagename_1=rulepackagename
		{
			$current.merge(this_packagename_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleexpression
entryRuleexpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleexpression=ruleexpression
	{ $current=$iv_ruleexpression.current; }
	EOF;

// Rule expression
ruleexpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getUnaryexprParserRuleCall_0());
		}
		this_unaryexpr_0=ruleunaryexpr
		{
			$current = $this_unaryexpr_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getExpressionauxExpressionauxParserRuleCall_1_0());
				}
				lv_expressionaux_1_0=ruleexpressionaux
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					add(
						$current,
						"expressionaux",
						lv_expressionaux_1_0,
						"org.xtext.example.mydsl.MyDsl.expressionaux");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleexpressionaux
entryRuleexpressionaux returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionauxRule()); }
	iv_ruleexpressionaux=ruleexpressionaux
	{ $current=$iv_ruleexpressionaux.current; }
	EOF;

// Rule expressionaux
ruleexpressionaux returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionauxAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionauxRule());
					}
					add(
						$current,
						"expression",
						lv_expression_0_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_BINARY_OP_1_0=RULE_BINARY_OP
				{
					newLeafNode(lv_BINARY_OP_1_0, grammarAccess.getExpressionauxAccess().getBINARY_OPBINARY_OPTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpressionauxRule());
					}
					setWithLastConsumed(
						$current,
						"BINARY_OP",
						lv_BINARY_OP_1_0,
						"org.xtext.example.mydsl.MyDsl.BINARY_OP");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionauxAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionauxRule());
					}
					add(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleunaryexpr
entryRuleunaryexpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryexprRule()); }
	iv_ruleunaryexpr=ruleunaryexpr
	{ $current=$iv_ruleunaryexpr.current; }
	EOF;

// Rule unaryexpr
ruleunaryexpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryexprAccess().getPrimaryexprPrimaryexprParserRuleCall_0_0());
				}
				lv_primaryexpr_0_0=ruleprimaryexpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryexprRule());
					}
					set(
						$current,
						"primaryexpr",
						lv_primaryexpr_0_0,
						"org.xtext.example.mydsl.MyDsl.primaryexpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_UNARY_OP_1_0=RULE_UNARY_OP
					{
						newLeafNode(lv_UNARY_OP_1_0, grammarAccess.getUnaryexprAccess().getUNARY_OPUNARY_OPTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnaryexprRule());
						}
						setWithLastConsumed(
							$current,
							"UNARY_OP",
							lv_UNARY_OP_1_0,
							"org.xtext.example.mydsl.MyDsl.UNARY_OP");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryexprAccess().getUnaryexprUnaryexprParserRuleCall_1_1_0());
					}
					lv_unaryexpr_2_0=ruleunaryexpr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryexprRule());
						}
						set(
							$current,
							"unaryexpr",
							lv_unaryexpr_2_0,
							"org.xtext.example.mydsl.MyDsl.unaryexpr");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleprimaryexpr
entryRuleprimaryexpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryexprRule()); }
	iv_ruleprimaryexpr=ruleprimaryexpr
	{ $current=$iv_ruleprimaryexpr.current; }
	EOF;

// Rule primaryexpr
ruleprimaryexpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				((
					ruleoperand
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprAccess().getOperandOperandParserRuleCall_0_0_0());
					}
					lv_operand_0_0=ruleoperand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
						}
						set(
							$current,
							"operand",
							lv_operand_0_0,
							"org.xtext.example.mydsl.MyDsl.operand");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_0_1_0());
					}
					lv_primaryexpraux_1_0=ruleprimaryexpraux
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
						}
						set(
							$current,
							"primaryexpraux",
							lv_primaryexpraux_1_0,
							"org.xtext.example.mydsl.MyDsl.primaryexpraux");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprAccess().getTypeTypeauxParserRuleCall_1_0_0());
					}
					lv_type_2_0=ruletypeaux
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"org.xtext.example.mydsl.MyDsl.typeaux");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryexprAccess().getConversionConversionParserRuleCall_1_1_0_0());
						}
						lv_conversion_3_0=ruleconversion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
							}
							set(
								$current,
								"conversion",
								lv_conversion_3_0,
								"org.xtext.example.mydsl.MyDsl.conversion");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryexprAccess().getMethodexprMethodexprParserRuleCall_1_1_1_0());
						}
						lv_methodexpr_4_0=rulemethodexpr
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
							}
							set(
								$current,
								"methodexpr",
								lv_methodexpr_4_0,
								"org.xtext.example.mydsl.MyDsl.methodexpr");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_1_2_0());
					}
					lv_primaryexpraux_5_0=ruleprimaryexpraux
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
						}
						set(
							$current,
							"primaryexpraux",
							lv_primaryexpraux_5_0,
							"org.xtext.example.mydsl.MyDsl.primaryexpraux");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprAccess().getTypenameTypenameParserRuleCall_2_0_0());
					}
					lv_typename_6_0=ruletypename
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
						}
						set(
							$current,
							"typename",
							lv_typename_6_0,
							"org.xtext.example.mydsl.MyDsl.typename");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_2_1_0());
					}
					lv_primaryexpraux_7_0=ruleprimaryexpraux
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprRule());
						}
						set(
							$current,
							"primaryexpraux",
							lv_primaryexpraux_7_0,
							"org.xtext.example.mydsl.MyDsl.primaryexpraux");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleoperand
entryRuleoperand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperandRule()); }
	iv_ruleoperand=ruleoperand
	{ $current=$iv_ruleoperand.current; }
	EOF;

// Rule operand
ruleoperand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				'('
				(
					(
						ruleexpression
					)
				)
				')'
			)
			)=>
			(
				otherlv_0='('
				{
					newLeafNode(otherlv_0, grammarAccess.getOperandAccess().getLeftParenthesisKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperandAccess().getExpressionExpressionParserRuleCall_0_0_1_0());
						}
						lv_expression_1_0=ruleexpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperandRule());
							}
							set(
								$current,
								"expression",
								lv_expression_1_0,
								"org.xtext.example.mydsl.MyDsl.expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2=')'
				{
					newLeafNode(otherlv_2, grammarAccess.getOperandAccess().getRightParenthesisKeyword_0_0_2());
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOperandAccess().getLiteralLiteralParserRuleCall_1_0());
				}
				lv_literal_3_0=ruleliteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperandRule());
					}
					set(
						$current,
						"literal",
						lv_literal_3_0,
						"org.xtext.example.mydsl.MyDsl.literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuletype
entryRuletype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruletype=ruletype
	{ $current=$iv_ruletype.current; }
	EOF;

// Rule type
ruletype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getTypeTypeParserRuleCall_0_1_0());
					}
					lv_type_1_0=ruletype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"org.xtext.example.mydsl.MyDsl.type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypenameTypenameParserRuleCall_1_0());
				}
				lv_typename_3_0=ruletypename
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"typename",
						lv_typename_3_0,
						"org.xtext.example.mydsl.MyDsl.typename");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeAccess().getTypelitTypelitParserRuleCall_2_0());
				}
				lv_typelit_4_0=ruletypelit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeRule());
					}
					set(
						$current,
						"typelit",
						lv_typelit_4_0,
						"org.xtext.example.mydsl.MyDsl.typelit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuletypeaux
entryRuletypeaux returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeauxRule()); }
	iv_ruletypeaux=ruletypeaux
	{ $current=$iv_ruletypeaux.current; }
	EOF;

// Rule typeaux
ruletypeaux returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeauxAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeauxAccess().getTypeTypeParserRuleCall_0_1_0());
					}
					lv_type_1_0=ruletype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeauxRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"org.xtext.example.mydsl.MyDsl.type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeauxAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeauxAccess().getTypelitTypelitParserRuleCall_1_0());
				}
				lv_typelit_3_0=ruletypelit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeauxRule());
					}
					set(
						$current,
						"typelit",
						lv_typelit_3_0,
						"org.xtext.example.mydsl.MyDsl.typelit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulemethodexpr
entryRulemethodexpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodexprRule()); }
	iv_rulemethodexpr=rulemethodexpr
	{ $current=$iv_rulemethodexpr.current; }
	EOF;

// Rule methodexpr
rulemethodexpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodexprAccess().getFullStopKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodexprAccess().getMethodnameMethodnameParserRuleCall_1_0());
				}
				lv_methodname_1_0=rulemethodname
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodexprRule());
					}
					set(
						$current,
						"methodname",
						lv_methodname_1_0,
						"org.xtext.example.mydsl.MyDsl.methodname");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleconversion
entryRuleconversion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConversionRule()); }
	iv_ruleconversion=ruleconversion
	{ $current=$iv_ruleconversion.current; }
	EOF;

// Rule conversion
ruleconversion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getConversionAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConversionAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConversionRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getConversionAccess().getCommaKeyword_2());
			}
		)?
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getConversionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleprimaryexpraux
entryRuleprimaryexpraux returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryexprauxRule()); }
	iv_ruleprimaryexpraux=ruleprimaryexpraux
	{ $current=$iv_ruleprimaryexpraux.current; }
	EOF;

// Rule primaryexpraux
ruleprimaryexpraux returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='.'
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryexprauxAccess().getFullStopKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getSelectorSelectorParserRuleCall_0_1_0_0());
						}
						lv_selector_1_0=ruleselector
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
							}
							set(
								$current,
								"selector",
								lv_selector_1_0,
								"org.xtext.example.mydsl.MyDsl.selector");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getTypeassertionTypeassertionParserRuleCall_0_1_1_0());
						}
						lv_typeassertion_2_0=ruletypeassertion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
							}
							set(
								$current,
								"typeassertion",
								lv_typeassertion_2_0,
								"org.xtext.example.mydsl.MyDsl.typeassertion");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_0_2_0());
					}
					lv_primaryexpraux_3_0=ruleprimaryexpraux
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
						}
						set(
							$current,
							"primaryexpraux",
							lv_primaryexpraux_3_0,
							"org.xtext.example.mydsl.MyDsl.primaryexpraux");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			otherlv_4='['
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryexprauxAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					((
						ruleslice
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getSliceSliceParserRuleCall_1_1_0_0());
						}
						lv_slice_5_0=ruleslice
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
							}
							set(
								$current,
								"slice",
								lv_slice_5_0,
								"org.xtext.example.mydsl.MyDsl.slice");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getIndexIndexParserRuleCall_1_1_1_0());
						}
						lv_index_6_0=ruleindex
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
							}
							set(
								$current,
								"index",
								lv_index_6_0,
								"org.xtext.example.mydsl.MyDsl.index");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_1_2_0());
					}
					lv_primaryexpraux_7_0=ruleprimaryexpraux
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
						}
						set(
							$current,
							"primaryexpraux",
							lv_primaryexpraux_7_0,
							"org.xtext.example.mydsl.MyDsl.primaryexpraux");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getArgumentsArgumentsParserRuleCall_2_0_0());
					}
					lv_arguments_8_0=rulearguments
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
						}
						set(
							$current,
							"arguments",
							lv_arguments_8_0,
							"org.xtext.example.mydsl.MyDsl.arguments");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxPrimaryexprauxParserRuleCall_2_1_0());
					}
					lv_primaryexpraux_9_0=ruleprimaryexpraux
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryexprauxRule());
						}
						set(
							$current,
							"primaryexpraux",
							lv_primaryexpraux_9_0,
							"org.xtext.example.mydsl.MyDsl.primaryexpraux");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryexprauxAccess().getPrimaryexprauxAction_3_0(),
						$current);
				}
			)
			this_WS_11=RULE_WS
			{
				newLeafNode(this_WS_11, grammarAccess.getPrimaryexprauxAccess().getWSTerminalRuleCall_3_1());
			}
		)
	)
;

// Entry rule entryRulearguments
entryRulearguments returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentsRule()); }
	iv_rulearguments=rulearguments
	{ $current=$iv_rulearguments.current; }
	EOF;

// Rule arguments
rulearguments returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArgumentsAccess().getArgumentsAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getArgumentsAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionlistParserRuleCall_2_0_0_0());
						}
						lv_expressionlist_2_0=ruleexpressionlist
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgumentsRule());
							}
							set(
								$current,
								"expressionlist",
								lv_expressionlist_2_0,
								"org.xtext.example.mydsl.MyDsl.expressionlist");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						((
							ruletype
						)
						)=>
						(
							{
								newCompositeNode(grammarAccess.getArgumentsAccess().getTypeTypeParserRuleCall_2_0_1_0_0());
							}
							lv_type_3_0=ruletype
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getArgumentsRule());
								}
								set(
									$current,
									"type",
									lv_type_3_0,
									"org.xtext.example.mydsl.MyDsl.type");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_4=','
						{
							newLeafNode(otherlv_4, grammarAccess.getArgumentsAccess().getCommaKeyword_2_0_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getArgumentsAccess().getExpressionlistExpressionlistParserRuleCall_2_0_1_1_1_0());
								}
								lv_expressionlist_5_0=ruleexpressionlist
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getArgumentsRule());
									}
									set(
										$current,
										"expressionlist",
										lv_expressionlist_5_0,
										"org.xtext.example.mydsl.MyDsl.expressionlist");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)
			(
				otherlv_6='...'
				{
					newLeafNode(otherlv_6, grammarAccess.getArgumentsAccess().getFullStopFullStopFullStopKeyword_2_1());
				}
			)?
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getArgumentsAccess().getCommaKeyword_2_2());
				}
			)?
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getArgumentsAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleindex
entryRuleindex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleindex=ruleindex
	{ $current=$iv_ruleindex.current; }
	EOF;

// Rule index
ruleindex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIndexAccess().getExpressionParserRuleCall_0());
		}
		this_expression_0=ruleexpression
		{
			$current = $this_expression_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=']'
		{
			newLeafNode(otherlv_1, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_1());
		}
	)
;

// Entry rule entryRuleslice
entryRuleslice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSliceRule()); }
	iv_ruleslice=ruleslice
	{ $current=$iv_ruleslice.current; }
	EOF;

// Rule slice
ruleslice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSliceAccess().getSliceAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSliceRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSliceAccess().getColonKeyword_2());
		}
		(
			(
				((
					(
						(
							ruleexpression
						)
					)
					':'
					(
						(
							ruleexpression
						)
					)
				)
				)=>
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_3_0_0_0_0());
							}
							lv_expression_3_0=ruleexpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSliceRule());
								}
								add(
									$current,
									"expression",
									lv_expression_3_0,
									"org.xtext.example.mydsl.MyDsl.expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_4=':'
					{
						newLeafNode(otherlv_4, grammarAccess.getSliceAccess().getColonKeyword_3_0_0_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_3_0_0_2_0());
							}
							lv_expression_5_0=ruleexpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSliceRule());
								}
								add(
									$current,
									"expression",
									lv_expression_5_0,
									"org.xtext.example.mydsl.MyDsl.expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSliceAccess().getExpressionExpressionParserRuleCall_3_1_0());
					}
					lv_expression_6_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSliceRule());
						}
						add(
							$current,
							"expression",
							lv_expression_6_0,
							"org.xtext.example.mydsl.MyDsl.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getSliceAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuletypeassertion
entryRuletypeassertion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeassertionRule()); }
	iv_ruletypeassertion=ruletypeassertion
	{ $current=$iv_ruletypeassertion.current; }
	EOF;

// Rule typeassertion
ruletypeassertion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeassertionAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getTypeassertionAccess().getTypeParserRuleCall_1());
		}
		this_type_1=ruletype
		{
			$current = $this_type_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeassertionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleselector
entryRuleselector returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	iv_ruleselector=ruleselector
	{ $current=$iv_ruleselector.current.getText(); }
	EOF;

// Rule selector
ruleselector returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getSelectorAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRulecompositelit
entryRulecompositelit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositelitRule()); }
	iv_rulecompositelit=rulecompositelit
	{ $current=$iv_rulecompositelit.current; }
	EOF;

// Rule compositelit
rulecompositelit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositelitAccess().getLiteraltypeLiteraltypeParserRuleCall_0_0());
				}
				lv_literaltype_0_0=ruleliteraltype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositelitRule());
					}
					set(
						$current,
						"literaltype",
						lv_literaltype_0_0,
						"org.xtext.example.mydsl.MyDsl.literaltype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositelitAccess().getLiteralvalueLiteralvalueParserRuleCall_1_0());
				}
				lv_literalvalue_1_0=ruleliteralvalue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositelitRule());
					}
					set(
						$current,
						"literalvalue",
						lv_literalvalue_1_0,
						"org.xtext.example.mydsl.MyDsl.literalvalue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleliteraltype
entryRuleliteraltype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteraltypeRule()); }
	iv_ruleliteraltype=ruleliteraltype
	{ $current=$iv_ruleliteraltype.current; }
	EOF;

// Rule literaltype
ruleliteraltype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteraltypeAccess().getStructtypeStructtypeParserRuleCall_0_0());
				}
				lv_structtype_0_0=rulestructtype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteraltypeRule());
					}
					set(
						$current,
						"structtype",
						lv_structtype_0_0,
						"org.xtext.example.mydsl.MyDsl.structtype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getLiteraltypeAccess().getLeftSquareBracketKeyword_1_0());
			}
			otherlv_2='...'
			{
				newLeafNode(otherlv_2, grammarAccess.getLiteraltypeAccess().getFullStopFullStopFullStopKeyword_1_1());
			}
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getLiteraltypeAccess().getRightSquareBracketKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteraltypeAccess().getElementtypeElementtypeParserRuleCall_1_3_0());
					}
					lv_elementtype_4_0=ruleelementtype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteraltypeRule());
						}
						set(
							$current,
							"elementtype",
							lv_elementtype_4_0,
							"org.xtext.example.mydsl.MyDsl.elementtype");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteraltypeAccess().getSlicetypeSlicetypeParserRuleCall_2_0());
				}
				lv_slicetype_5_0=ruleslicetype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteraltypeRule());
					}
					set(
						$current,
						"slicetype",
						lv_slicetype_5_0,
						"org.xtext.example.mydsl.MyDsl.slicetype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteraltypeAccess().getMaptypeMaptypeParserRuleCall_3_0());
				}
				lv_maptype_6_0=rulemaptype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteraltypeRule());
					}
					set(
						$current,
						"maptype",
						lv_maptype_6_0,
						"org.xtext.example.mydsl.MyDsl.maptype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteraltypeAccess().getTypenameTypenameParserRuleCall_4_0());
				}
				lv_typename_7_0=ruletypename
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteraltypeRule());
					}
					set(
						$current,
						"typename",
						lv_typename_7_0,
						"org.xtext.example.mydsl.MyDsl.typename");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleliteralvalue
entryRuleliteralvalue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralvalueRule()); }
	iv_ruleliteralvalue=ruleliteralvalue
	{ $current=$iv_ruleliteralvalue.current; }
	EOF;

// Rule literalvalue
ruleliteralvalue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLiteralvalueAccess().getLiteralvalueAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLiteralvalueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLiteralvalueAccess().getElementlistElementlistParserRuleCall_2_0_0());
					}
					lv_elementlist_2_0=ruleelementlist
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLiteralvalueRule());
						}
						set(
							$current,
							"elementlist",
							lv_elementlist_2_0,
							"org.xtext.example.mydsl.MyDsl.elementlist");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getLiteralvalueAccess().getCommaKeyword_2_1());
				}
			)?
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getLiteralvalueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleelementlist
entryRuleelementlist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementlistRule()); }
	iv_ruleelementlist=ruleelementlist
	{ $current=$iv_ruleelementlist.current; }
	EOF;

// Rule elementlist
ruleelementlist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementlistAccess().getKeyedelementParserRuleCall_0());
		}
		this_keyedelement_0=rulekeyedelement
		{
			$current = $this_keyedelement_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getElementlistAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getElementlistAccess().getKeyedelementKeyedelementParserRuleCall_1_1_0());
					}
					lv_keyedelement_2_0=rulekeyedelement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementlistRule());
						}
						add(
							$current,
							"keyedelement",
							lv_keyedelement_2_0,
							"org.xtext.example.mydsl.MyDsl.keyedelement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulekeyedelement
entryRulekeyedelement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyedelementRule()); }
	iv_rulekeyedelement=rulekeyedelement
	{ $current=$iv_rulekeyedelement.current; }
	EOF;

// Rule keyedelement
rulekeyedelement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(rulekey)=>
				{
					newCompositeNode(grammarAccess.getKeyedelementAccess().getKeyParserRuleCall_0_0());
				}
				this_key_0=rulekey
				{
					$current = $this_key_0.current;
					afterParserOrEnumRuleCall();
				}
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getKeyedelementAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyedelementAccess().getElementElementParserRuleCall_1_0());
				}
				lv_element_2_0=ruleelement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyedelementRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"org.xtext.example.mydsl.MyDsl.element");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulekey
entryRulekey returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyRule()); }
	iv_rulekey=rulekey
	{ $current=$iv_rulekey.current; }
	EOF;

// Rule key
rulekey returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getKeyAccess().getKeyAction_0_0(),
						$current);
				}
			)
			(
				((
					ruleexpression
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getKeyAccess().getExpressionExpressionParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getKeyRule());
						}
						set(
							$current,
							"expression",
							lv_expression_1_0,
							"org.xtext.example.mydsl.MyDsl.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_IDENTIFIER_2_0=RULE_IDENTIFIER
				{
					newLeafNode(lv_IDENTIFIER_2_0, grammarAccess.getKeyAccess().getIDENTIFIERIDENTIFIERTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyRule());
					}
					setWithLastConsumed(
						$current,
						"IDENTIFIER",
						lv_IDENTIFIER_2_0,
						"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyAccess().getLiteralvalueLiteralvalueParserRuleCall_2_0());
				}
				lv_literalvalue_3_0=ruleliteralvalue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyRule());
					}
					set(
						$current,
						"literalvalue",
						lv_literalvalue_3_0,
						"org.xtext.example.mydsl.MyDsl.literalvalue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleelement
entryRuleelement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleelement=ruleelement
	{ $current=$iv_ruleelement.current; }
	EOF;

// Rule element
ruleelement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getExpressionParserRuleCall_0());
		}
		this_expression_0=ruleexpression
		{
			$current = $this_expression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getLiteralvalueParserRuleCall_1());
		}
		this_literalvalue_1=ruleliteralvalue
		{
			$current = $this_literalvalue_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulefunctionlit
entryRulefunctionlit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionlitRule()); }
	iv_rulefunctionlit=rulefunctionlit
	{ $current=$iv_rulefunctionlit.current; }
	EOF;

// Rule functionlit
rulefunctionlit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionlitAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionlitAccess().getSignatureSignatureParserRuleCall_1_0());
				}
				lv_signature_1_0=rulesignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionlitRule());
					}
					set(
						$current,
						"signature",
						lv_signature_1_0,
						"org.xtext.example.mydsl.MyDsl.signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionlitAccess().getFunctionbodyFunctionbodyParserRuleCall_2_0());
				}
				lv_functionbody_2_0=rulefunctionbody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionlitRule());
					}
					set(
						$current,
						"functionbody",
						lv_functionbody_2_0,
						"org.xtext.example.mydsl.MyDsl.functionbody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulestatement
entryRulestatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_rulestatement=rulestatement
	{ $current=$iv_rulestatement.current; }
	EOF;

// Rule statement
rulestatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				rulesimplestmt
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSimplestmtSimplestmtParserRuleCall_0_0());
				}
				lv_simplestmt_0_0=rulesimplestmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"simplestmt",
						lv_simplestmt_0_0,
						"org.xtext.example.mydsl.MyDsl.simplestmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getDeclarationDeclarationParserRuleCall_1_0());
				}
				lv_declaration_1_0=ruledeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_1_0,
						"org.xtext.example.mydsl.MyDsl.declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getLabeledstmtLabeledstmtParserRuleCall_2_0());
				}
				lv_labeledstmt_2_0=rulelabeledstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"labeledstmt",
						lv_labeledstmt_2_0,
						"org.xtext.example.mydsl.MyDsl.labeledstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGotstmtGotstmtParserRuleCall_3_0());
				}
				lv_gotstmt_3_0=rulegotstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"gotstmt",
						lv_gotstmt_3_0,
						"org.xtext.example.mydsl.MyDsl.gotstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getReturnstmtReturnstmtParserRuleCall_4_0());
				}
				lv_returnstmt_4_0=rulereturnstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"returnstmt",
						lv_returnstmt_4_0,
						"org.xtext.example.mydsl.MyDsl.returnstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBreakstmtBreakstmtParserRuleCall_5_0());
				}
				lv_breakstmt_5_0=rulebreakstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"breakstmt",
						lv_breakstmt_5_0,
						"org.xtext.example.mydsl.MyDsl.breakstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getContinuestmtContinuestmtParserRuleCall_6_0());
				}
				lv_continuestmt_6_0=rulecontinuestmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"continuestmt",
						lv_continuestmt_6_0,
						"org.xtext.example.mydsl.MyDsl.continuestmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getGotostmtGotostmtParserRuleCall_7_0());
				}
				lv_gotostmt_7_0=rulegotostmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"gotostmt",
						lv_gotostmt_7_0,
						"org.xtext.example.mydsl.MyDsl.gotostmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getFallthroughstmtFallthroughstmtParserRuleCall_8_0());
				}
				lv_fallthroughstmt_8_0=rulefallthroughstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"fallthroughstmt",
						lv_fallthroughstmt_8_0,
						"org.xtext.example.mydsl.MyDsl.fallthroughstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getBlockBlockParserRuleCall_9_0());
				}
				lv_block_9_0=ruleblock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"block",
						lv_block_9_0,
						"org.xtext.example.mydsl.MyDsl.block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getIfstmtIfstmtParserRuleCall_10_0());
				}
				lv_ifstmt_10_0=ruleifstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"ifstmt",
						lv_ifstmt_10_0,
						"org.xtext.example.mydsl.MyDsl.ifstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSwitchstmtSwitchstmtParserRuleCall_11_0());
				}
				lv_switchstmt_11_0=ruleswitchstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"switchstmt",
						lv_switchstmt_11_0,
						"org.xtext.example.mydsl.MyDsl.switchstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getSelectstmtSelectstmtParserRuleCall_12_0());
				}
				lv_selectstmt_12_0=ruleselectstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"selectstmt",
						lv_selectstmt_12_0,
						"org.xtext.example.mydsl.MyDsl.selectstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getForstmtForstmtParserRuleCall_13_0());
				}
				lv_forstmt_13_0=ruleforstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"forstmt",
						lv_forstmt_13_0,
						"org.xtext.example.mydsl.MyDsl.forstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getStatementAccess().getDeferstmtDeferstmtParserRuleCall_14_0());
				}
				lv_deferstmt_14_0=ruledeferstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatementRule());
					}
					set(
						$current,
						"deferstmt",
						lv_deferstmt_14_0,
						"org.xtext.example.mydsl.MyDsl.deferstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuledeclaration
entryRuledeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruledeclaration=ruledeclaration
	{ $current=$iv_ruledeclaration.current; }
	EOF;

// Rule declaration
ruledeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getConstdeclConstdeclParserRuleCall_0_0());
				}
				lv_constdecl_0_0=ruleconstdecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"constdecl",
						lv_constdecl_0_0,
						"org.xtext.example.mydsl.MyDsl.constdecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getTypedeclTypedeclParserRuleCall_1_0());
				}
				lv_typedecl_1_0=ruletypedecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"typedecl",
						lv_typedecl_1_0,
						"org.xtext.example.mydsl.MyDsl.typedecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getVardeclVardeclParserRuleCall_2_0());
				}
				lv_vardecl_2_0=rulevardecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"vardecl",
						lv_vardecl_2_0,
						"org.xtext.example.mydsl.MyDsl.vardecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulevardecl
entryRulevardecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVardeclRule()); }
	iv_rulevardecl=rulevardecl
	{ $current=$iv_rulevardecl.current; }
	EOF;

// Rule vardecl
rulevardecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVardeclAccess().getVardeclAction_0(),
					$current);
			}
		)
		otherlv_1='var'
		{
			newLeafNode(otherlv_1, grammarAccess.getVardeclAccess().getVarKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVardeclAccess().getVarspecVarspecParserRuleCall_2_0_0());
					}
					lv_varspec_2_0=rulevarspec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVardeclRule());
						}
						add(
							$current,
							"varspec",
							lv_varspec_2_0,
							"org.xtext.example.mydsl.MyDsl.varspec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getVardeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getVardeclAccess().getVarspecVarspecParserRuleCall_2_1_1_0_0());
							}
							lv_varspec_4_0=rulevarspec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVardeclRule());
								}
								add(
									$current,
									"varspec",
									lv_varspec_4_0,
									"org.xtext.example.mydsl.MyDsl.varspec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getVardeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getVardeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRulevarspec
entryRulevarspec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarspecRule()); }
	iv_rulevarspec=rulevarspec
	{ $current=$iv_rulevarspec.current; }
	EOF;

// Rule varspec
rulevarspec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVarspecAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0());
				}
				lv_identifierlist_0_0=ruleidentifierlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarspecRule());
					}
					set(
						$current,
						"identifierlist",
						lv_identifierlist_0_0,
						"org.xtext.example.mydsl.MyDsl.identifierlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getVarspecAccess().getTypeTypeParserRuleCall_1_0_0_0());
						}
						lv_type_1_0=ruletype
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarspecRule());
							}
							set(
								$current,
								"type",
								lv_type_1_0,
								"org.xtext.example.mydsl.MyDsl.type");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2='='
					{
						newLeafNode(otherlv_2, grammarAccess.getVarspecAccess().getEqualsSignKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getVarspecAccess().getExpressionlistExpressionlistParserRuleCall_1_0_1_1_0());
							}
							lv_expressionlist_3_0=ruleexpressionlist
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getVarspecRule());
								}
								set(
									$current,
									"expressionlist",
									lv_expressionlist_3_0,
									"org.xtext.example.mydsl.MyDsl.expressionlist");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getVarspecAccess().getEqualsSignKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVarspecAccess().getExpressionlistExpressionlistParserRuleCall_1_1_1_0());
						}
						lv_expressionlist_5_0=ruleexpressionlist
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVarspecRule());
							}
							set(
								$current,
								"expressionlist",
								lv_expressionlist_5_0,
								"org.xtext.example.mydsl.MyDsl.expressionlist");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuletypedecl
entryRuletypedecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedeclRule()); }
	iv_ruletypedecl=ruletypedecl
	{ $current=$iv_ruletypedecl.current; }
	EOF;

// Rule typedecl
ruletypedecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypedeclAccess().getTypedeclAction_0(),
					$current);
			}
		)
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypedeclAccess().getTypeKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypedeclAccess().getTypespecTypespecParserRuleCall_2_0_0());
					}
					lv_typespec_2_0=ruletypespec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypedeclRule());
						}
						add(
							$current,
							"typespec",
							lv_typespec_2_0,
							"org.xtext.example.mydsl.MyDsl.typespec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getTypedeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getTypedeclAccess().getTypespecTypespecParserRuleCall_2_1_1_0_0());
							}
							lv_typespec_4_0=ruletypespec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTypedeclRule());
								}
								add(
									$current,
									"typespec",
									lv_typespec_4_0,
									"org.xtext.example.mydsl.MyDsl.typespec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getTypedeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getTypedeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuletypespec
entryRuletypespec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypespecRule()); }
	iv_ruletypespec=ruletypespec
	{ $current=$iv_ruletypespec.current; }
	EOF;

// Rule typespec
ruletypespec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_IDENTIFIER_0_0=RULE_IDENTIFIER
				{
					newLeafNode(lv_IDENTIFIER_0_0, grammarAccess.getTypespecAccess().getIDENTIFIERIDENTIFIERTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypespecRule());
					}
					setWithLastConsumed(
						$current,
						"IDENTIFIER",
						lv_IDENTIFIER_0_0,
						"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTypespecAccess().getTypespecauxTypespecauxParserRuleCall_1_0());
				}
				lv_typespecaux_1_0=ruletypespecaux
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypespecRule());
					}
					set(
						$current,
						"typespecaux",
						lv_typespecaux_1_0,
						"org.xtext.example.mydsl.MyDsl.typespecaux");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuletypespecaux
entryRuletypespecaux returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypespecauxRule()); }
	iv_ruletypespecaux=ruletypespecaux
	{ $current=$iv_ruletypespecaux.current; }
	EOF;

// Rule typespecaux
ruletypespecaux returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypespecauxAccess().getTypedefParserRuleCall_0());
		}
		this_typedef_0=ruletypedef
		{
			$current = $this_typedef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypespecauxAccess().getAliasdeclParserRuleCall_1());
		}
		this_aliasdecl_1=rulealiasdecl
		{
			$current = $this_aliasdecl_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuletypedef
entryRuletypedef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedefRule()); }
	iv_ruletypedef=ruletypedef
	{ $current=$iv_ruletypedef.current; }
	EOF;

// Rule typedef
ruletypedef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypedefAccess().getTypeTypeParserRuleCall_0());
			}
			lv_type_0_0=ruletype
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypedefRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.example.mydsl.MyDsl.type");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRulealiasdecl
entryRulealiasdecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAliasdeclRule()); }
	iv_rulealiasdecl=rulealiasdecl
	{ $current=$iv_rulealiasdecl.current; }
	EOF;

// Rule aliasdecl
rulealiasdecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='='
		{
			newLeafNode(otherlv_0, grammarAccess.getAliasdeclAccess().getEqualsSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAliasdeclAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruletype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAliasdeclRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.MyDsl.type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuletopleveldecl
entryRuletopleveldecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTopleveldeclRule()); }
	iv_ruletopleveldecl=ruletopleveldecl
	{ $current=$iv_ruletopleveldecl.current; }
	EOF;

// Rule topleveldecl
ruletopleveldecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTopleveldeclAccess().getDeclarationParserRuleCall_0());
		}
		this_declaration_0=ruledeclaration
		{
			$current = $this_declaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTopleveldeclAccess().getFunctiondeclFunctiondeclParserRuleCall_1_0());
				}
				lv_functiondecl_1_0=rulefunctiondecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopleveldeclRule());
					}
					set(
						$current,
						"functiondecl",
						lv_functiondecl_1_0,
						"org.xtext.example.mydsl.MyDsl.functiondecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTopleveldeclAccess().getMethoddeclMethoddeclParserRuleCall_2_0());
				}
				lv_methoddecl_2_0=rulemethoddecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTopleveldeclRule());
					}
					set(
						$current,
						"methoddecl",
						lv_methoddecl_2_0,
						"org.xtext.example.mydsl.MyDsl.methoddecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulemethoddecl
entryRulemethoddecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethoddeclRule()); }
	iv_rulemethoddecl=rulemethoddecl
	{ $current=$iv_rulemethoddecl.current; }
	EOF;

// Rule methoddecl
rulemethoddecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethoddeclAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMethoddeclAccess().getReceiverReceiverParserRuleCall_1_0());
				}
				lv_receiver_1_0=rulereceiver
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethoddeclRule());
					}
					set(
						$current,
						"receiver",
						lv_receiver_1_0,
						"org.xtext.example.mydsl.MyDsl.receiver");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethoddeclAccess().getMethodnameMethodnameParserRuleCall_2_0());
				}
				lv_methodname_2_0=rulemethodname
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethoddeclRule());
					}
					set(
						$current,
						"methodname",
						lv_methodname_2_0,
						"org.xtext.example.mydsl.MyDsl.methodname");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethoddeclAccess().getSignatureSignatureParserRuleCall_3_0());
				}
				lv_signature_3_0=rulesignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethoddeclRule());
					}
					set(
						$current,
						"signature",
						lv_signature_3_0,
						"org.xtext.example.mydsl.MyDsl.signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethoddeclAccess().getFunctionbodyFunctionbodyParserRuleCall_4_0());
				}
				lv_functionbody_4_0=rulefunctionbody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethoddeclRule());
					}
					set(
						$current,
						"functionbody",
						lv_functionbody_4_0,
						"org.xtext.example.mydsl.MyDsl.functionbody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulereceiver
entryRulereceiver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReceiverRule()); }
	iv_rulereceiver=rulereceiver
	{ $current=$iv_rulereceiver.current; }
	EOF;

// Rule receiver
rulereceiver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getReceiverAccess().getParametersParserRuleCall());
	}
	this_parameters_0=ruleparameters
	{
		$current = $this_parameters_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulefunctiondecl
entryRulefunctiondecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctiondeclRule()); }
	iv_rulefunctiondecl=rulefunctiondecl
	{ $current=$iv_rulefunctiondecl.current; }
	EOF;

// Rule functiondecl
rulefunctiondecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctiondeclAccess().getFuncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctiondeclAccess().getFunctionnameFunctionnameParserRuleCall_1_0());
				}
				lv_functionname_1_0=rulefunctionname
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctiondeclRule());
					}
					set(
						$current,
						"functionname",
						lv_functionname_1_0,
						"org.xtext.example.mydsl.MyDsl.functionname");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctiondeclAccess().getSignatureSignatureParserRuleCall_2_0());
				}
				lv_signature_2_0=rulesignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctiondeclRule());
					}
					set(
						$current,
						"signature",
						lv_signature_2_0,
						"org.xtext.example.mydsl.MyDsl.signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctiondeclAccess().getFunctionbodyFunctionbodyParserRuleCall_3_0());
				}
				lv_functionbody_3_0=rulefunctionbody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctiondeclRule());
					}
					set(
						$current,
						"functionbody",
						lv_functionbody_3_0,
						"org.xtext.example.mydsl.MyDsl.functionbody");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRulefunctionname
entryRulefunctionname returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFunctionnameRule()); }
	iv_rulefunctionname=rulefunctionname
	{ $current=$iv_rulefunctionname.current.getText(); }
	EOF;

// Rule functionname
rulefunctionname returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getFunctionnameAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRuleconstdecl
entryRuleconstdecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstdeclRule()); }
	iv_ruleconstdecl=ruleconstdecl
	{ $current=$iv_ruleconstdecl.current; }
	EOF;

// Rule constdecl
ruleconstdecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstdeclAccess().getConstdeclAction_0(),
					$current);
			}
		)
		otherlv_1='const'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstdeclAccess().getConstKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstdeclAccess().getConstspecConstspecParserRuleCall_2_0_0());
					}
					lv_constspec_2_0=ruleconstspec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstdeclRule());
						}
						add(
							$current,
							"constspec",
							lv_constspec_2_0,
							"org.xtext.example.mydsl.MyDsl.constspec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getConstdeclAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConstdeclAccess().getConstspecConstspecParserRuleCall_2_1_1_0_0());
							}
							lv_constspec_4_0=ruleconstspec
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConstdeclRule());
								}
								add(
									$current,
									"constspec",
									lv_constspec_4_0,
									"org.xtext.example.mydsl.MyDsl.constspec");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_5=';'
					{
						newLeafNode(otherlv_5, grammarAccess.getConstdeclAccess().getSemicolonKeyword_2_1_1_1());
					}
				)*
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getConstdeclAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleconstspec
entryRuleconstspec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstspecRule()); }
	iv_ruleconstspec=ruleconstspec
	{ $current=$iv_ruleconstspec.current; }
	EOF;

// Rule constspec
ruleconstspec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstspecAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0());
				}
				lv_identifierlist_0_0=ruleidentifierlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstspecRule());
					}
					set(
						$current,
						"identifierlist",
						lv_identifierlist_0_0,
						"org.xtext.example.mydsl.MyDsl.identifierlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstspecAccess().getTypeTypeParserRuleCall_1_0_0());
					}
					lv_type_1_0=ruletype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstspecRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"org.xtext.example.mydsl.MyDsl.type");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getConstspecAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConstspecAccess().getExpressionlistExpressionlistParserRuleCall_1_2_0());
					}
					lv_expressionlist_3_0=ruleexpressionlist
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstspecRule());
						}
						set(
							$current,
							"expressionlist",
							lv_expressionlist_3_0,
							"org.xtext.example.mydsl.MyDsl.expressionlist");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRulesimplestmt
entryRulesimplestmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimplestmtRule()); }
	iv_rulesimplestmt=rulesimplestmt
	{ $current=$iv_rulesimplestmt.current; }
	EOF;

// Rule simplestmt
rulesimplestmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSimplestmtAccess().getExpressionExpressionParserRuleCall_0_0_0());
					}
					lv_expression_0_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSimplestmtRule());
						}
						set(
							$current,
							"expression",
							lv_expression_0_0,
							"org.xtext.example.mydsl.MyDsl.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					((
						(
							rulesendstmtaux
						)
					)
					)=>
					(
						(
							{
								newCompositeNode(grammarAccess.getSimplestmtAccess().getSendstmtSendstmtauxParserRuleCall_0_1_0_0_0());
							}
							lv_sendstmt_1_0=rulesendstmtaux
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSimplestmtRule());
								}
								set(
									$current,
									"sendstmt",
									lv_sendstmt_1_0,
									"org.xtext.example.mydsl.MyDsl.sendstmtaux");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getSimplestmtAccess().getIncdecstmtIncdecstmtauxParserRuleCall_0_1_1_0());
						}
						lv_incdecstmt_2_0=ruleincdecstmtaux
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimplestmtRule());
							}
							set(
								$current,
								"incdecstmt",
								lv_incdecstmt_2_0,
								"org.xtext.example.mydsl.MyDsl.incdecstmtaux");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getSimplestmtAccess().getAssignmentAssignmentauxParserRuleCall_0_1_2_0());
						}
						lv_assignment_3_0=ruleassignmentaux
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSimplestmtRule());
							}
							set(
								$current,
								"assignment",
								lv_assignment_3_0,
								"org.xtext.example.mydsl.MyDsl.assignmentaux");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSimplestmtAccess().getShortvardeclShortvardeclParserRuleCall_1_0());
				}
				lv_shortvardecl_4_0=ruleshortvardecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimplestmtRule());
					}
					set(
						$current,
						"shortvardecl",
						lv_shortvardecl_4_0,
						"org.xtext.example.mydsl.MyDsl.shortvardecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleshortvardecl
entryRuleshortvardecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShortvardeclRule()); }
	iv_ruleshortvardecl=ruleshortvardecl
	{ $current=$iv_ruleshortvardecl.current; }
	EOF;

// Rule shortvardecl
ruleshortvardecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getShortvardeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0());
				}
				lv_identifierlist_0_0=ruleidentifierlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortvardeclRule());
					}
					set(
						$current,
						"identifierlist",
						lv_identifierlist_0_0,
						"org.xtext.example.mydsl.MyDsl.identifierlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getShortvardeclAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShortvardeclAccess().getExpressionlistExpressionlistParserRuleCall_2_0());
				}
				lv_expressionlist_2_0=ruleexpressionlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShortvardeclRule());
					}
					set(
						$current,
						"expressionlist",
						lv_expressionlist_2_0,
						"org.xtext.example.mydsl.MyDsl.expressionlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuledeferstmt
entryRuledeferstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeferstmtRule()); }
	iv_ruledeferstmt=ruledeferstmt
	{ $current=$iv_ruledeferstmt.current; }
	EOF;

// Rule deferstmt
ruledeferstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='defer'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeferstmtAccess().getDeferKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getDeferstmtAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulegotostmt
entryRulegotostmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getGotostmtRule()); }
	iv_rulegotostmt=rulegotostmt
	{ $current=$iv_rulegotostmt.current.getText(); }
	EOF;

// Rule gotostmt
rulegotostmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='goto'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getGotostmtAccess().getGotoKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getGotostmtAccess().getLabelParserRuleCall_1());
		}
		this_label_1=rulelabel
		{
			$current.merge(this_label_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulecontinuestmt
entryRulecontinuestmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getContinuestmtRule()); }
	iv_rulecontinuestmt=rulecontinuestmt
	{ $current=$iv_rulecontinuestmt.current.getText(); }
	EOF;

// Rule continuestmt
rulecontinuestmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='continue'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getContinuestmtAccess().getContinueKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getContinuestmtAccess().getLabelParserRuleCall_1());
			}
			this_label_1=rulelabel
			{
				$current.merge(this_label_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRulebreakstmt
entryRulebreakstmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBreakstmtRule()); }
	iv_rulebreakstmt=rulebreakstmt
	{ $current=$iv_rulebreakstmt.current.getText(); }
	EOF;

// Rule breakstmt
rulebreakstmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='break'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBreakstmtAccess().getBreakKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getBreakstmtAccess().getLabelParserRuleCall_1());
			}
			this_label_1=rulelabel
			{
				$current.merge(this_label_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRulereturnstmt
entryRulereturnstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnstmtRule()); }
	iv_rulereturnstmt=rulereturnstmt
	{ $current=$iv_rulereturnstmt.current; }
	EOF;

// Rule returnstmt
rulereturnstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnstmtAccess().getReturnstmtAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnstmtAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnstmtAccess().getExpressionlistExpressionlistParserRuleCall_2_0());
				}
				lv_expressionlist_2_0=ruleexpressionlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnstmtRule());
					}
					set(
						$current,
						"expressionlist",
						lv_expressionlist_2_0,
						"org.xtext.example.mydsl.MyDsl.expressionlist");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleselectstmt
entryRuleselectstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectstmtRule()); }
	iv_ruleselectstmt=ruleselectstmt
	{ $current=$iv_ruleselectstmt.current; }
	EOF;

// Rule selectstmt
ruleselectstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectstmtAccess().getSelectstmtAction_0(),
					$current);
			}
		)
		otherlv_1='select'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectstmtAccess().getSelectKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectstmtAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectstmtAccess().getCommclauseCommclauseParserRuleCall_3_0());
				}
				lv_commclause_3_0=rulecommclause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectstmtRule());
					}
					add(
						$current,
						"commclause",
						lv_commclause_3_0,
						"org.xtext.example.mydsl.MyDsl.commclause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectstmtAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulecommclause
entryRulecommclause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommclauseRule()); }
	iv_rulecommclause=rulecommclause
	{ $current=$iv_rulecommclause.current; }
	EOF;

// Rule commclause
rulecommclause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommclauseAccess().getCommcaseParserRuleCall_0());
		}
		this_commcase_0=rulecommcase
		{
			$current = $this_commcase_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommclauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommclauseAccess().getStatementlistStatementlistParserRuleCall_2_0());
				}
				lv_statementlist_2_0=rulestatementlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommclauseRule());
					}
					set(
						$current,
						"statementlist",
						lv_statementlist_2_0,
						"org.xtext.example.mydsl.MyDsl.statementlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulecommcase
entryRulecommcase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommcaseRule()); }
	iv_rulecommcase=rulecommcase
	{ $current=$iv_rulecommcase.current; }
	EOF;

// Rule commcase
rulecommcase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='case'
			{
				newLeafNode(otherlv_0, grammarAccess.getCommcaseAccess().getCaseKeyword_0_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCommcaseAccess().getSendstmtSendstmtParserRuleCall_0_1_0_0());
						}
						lv_sendstmt_1_0=rulesendstmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommcaseRule());
							}
							set(
								$current,
								"sendstmt",
								lv_sendstmt_1_0,
								"org.xtext.example.mydsl.MyDsl.sendstmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					((
						rulerecvstmt
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getCommcaseAccess().getRecvstmtRecvstmtParserRuleCall_0_1_1_0());
						}
						lv_recvstmt_2_0=rulerecvstmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommcaseRule());
							}
							set(
								$current,
								"recvstmt",
								lv_recvstmt_2_0,
								"org.xtext.example.mydsl.MyDsl.recvstmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCommcaseAccess().getCommcaseAction_1_0(),
						$current);
				}
			)
			otherlv_4='default'
			{
				newLeafNode(otherlv_4, grammarAccess.getCommcaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRulesendstmt
entryRulesendstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendstmtRule()); }
	iv_rulesendstmt=rulesendstmt
	{ $current=$iv_rulesendstmt.current; }
	EOF;

// Rule sendstmt
rulesendstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSendstmtAccess().getExpressionExpressionParserRuleCall_0_0());
				}
				lv_expression_0_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendstmtRule());
					}
					add(
						$current,
						"expression",
						lv_expression_0_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='<-'
		{
			newLeafNode(otherlv_1, grammarAccess.getSendstmtAccess().getLessThanSignHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSendstmtAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendstmtRule());
					}
					add(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulesendstmtaux
entryRulesendstmtaux returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendstmtauxRule()); }
	iv_rulesendstmtaux=rulesendstmtaux
	{ $current=$iv_rulesendstmtaux.current; }
	EOF;

// Rule sendstmtaux
rulesendstmtaux returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		((
			'<-'
			(
				(
					ruleexpression
				)
			)
		)
		)=>
		(
			otherlv_0='<-'
			{
				newLeafNode(otherlv_0, grammarAccess.getSendstmtauxAccess().getLessThanSignHyphenMinusKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSendstmtauxAccess().getExpressionExpressionParserRuleCall_0_1_0());
					}
					lv_expression_1_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSendstmtauxRule());
						}
						add(
							$current,
							"expression",
							lv_expression_1_0,
							"org.xtext.example.mydsl.MyDsl.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulerecvstmt
entryRulerecvstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecvstmtRule()); }
	iv_rulerecvstmt=rulerecvstmt
	{ $current=$iv_rulerecvstmt.current; }
	EOF;

// Rule recvstmt
rulerecvstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRecvstmtAccess().getExpressionlistParserRuleCall_0_0_0());
				}
				this_expressionlist_0=ruleexpressionlist
				{
					$current = $this_expressionlist_0.current;
					afterParserOrEnumRuleCall();
				}
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getRecvstmtAccess().getEqualsSignKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRecvstmtAccess().getIdentifierlistIdentifierlistParserRuleCall_0_1_0_0());
						}
						lv_identifierlist_2_0=ruleidentifierlist
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRecvstmtRule());
							}
							set(
								$current,
								"identifierlist",
								lv_identifierlist_2_0,
								"org.xtext.example.mydsl.MyDsl.identifierlist");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=':='
				{
					newLeafNode(otherlv_3, grammarAccess.getRecvstmtAccess().getColonEqualsSignKeyword_0_1_1());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRecvstmtAccess().getRecvexprRecvexprParserRuleCall_1_0());
				}
				lv_recvexpr_4_0=rulerecvexpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecvstmtRule());
					}
					set(
						$current,
						"recvexpr",
						lv_recvexpr_4_0,
						"org.xtext.example.mydsl.MyDsl.recvexpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleexpressionlist
entryRuleexpressionlist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionlistRule()); }
	iv_ruleexpressionlist=ruleexpressionlist
	{ $current=$iv_ruleexpressionlist.current; }
	EOF;

// Rule expressionlist
ruleexpressionlist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionlistAccess().getExpressionParserRuleCall_0());
		}
		this_expression_0=ruleexpression
		{
			$current = $this_expression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getExpressionlistAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionlistAccess().getExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_expression_2_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionlistRule());
						}
						add(
							$current,
							"expression",
							lv_expression_2_0,
							"org.xtext.example.mydsl.MyDsl.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulepostexpressionlist
entryRulepostexpressionlist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostexpressionlistRule()); }
	iv_rulepostexpressionlist=rulepostexpressionlist
	{ $current=$iv_rulepostexpressionlist.current; }
	EOF;

// Rule postexpressionlist
rulepostexpressionlist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPostexpressionlistAccess().getPostexpressionlistAction_0(),
					$current);
			}
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getPostexpressionlistAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPostexpressionlistAccess().getExpressionExpressionParserRuleCall_1_1_0());
					}
					lv_expression_2_0=ruleexpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPostexpressionlistRule());
						}
						add(
							$current,
							"expression",
							lv_expression_2_0,
							"org.xtext.example.mydsl.MyDsl.expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulerecvexpr
entryRulerecvexpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecvexprRule()); }
	iv_rulerecvexpr=rulerecvexpr
	{ $current=$iv_rulerecvexpr.current; }
	EOF;

// Rule recvexpr
rulerecvexpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getRecvexprAccess().getExpressionParserRuleCall());
	}
	this_expression_0=ruleexpression
	{
		$current = $this_expression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulegotstmt
entryRulegotstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGotstmtRule()); }
	iv_rulegotstmt=rulegotstmt
	{ $current=$iv_rulegotstmt.current; }
	EOF;

// Rule gotstmt
rulegotstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='go'
		{
			newLeafNode(otherlv_0, grammarAccess.getGotstmtAccess().getGoKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getGotstmtAccess().getExpressionParserRuleCall_1());
		}
		this_expression_1=ruleexpression
		{
			$current = $this_expression_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleforstmt
entryRuleforstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForstmtRule()); }
	iv_ruleforstmt=ruleforstmt
	{ $current=$iv_ruleforstmt.current; }
	EOF;

// Rule forstmt
ruleforstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForstmtAccess().getForKeyword_0());
		}
		(
			(
				(ruleforclause)=>
				{
					newCompositeNode(grammarAccess.getForstmtAccess().getForclauseParserRuleCall_1_0());
				}
				this_forclause_1=ruleforclause
				{
					$current = $this_forclause_1.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				{
					newCompositeNode(grammarAccess.getForstmtAccess().getExpressionParserRuleCall_1_1_0());
				}
				this_expression_2=ruleexpression
				{
					$current = $this_expression_2.current;
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getForstmtAccess().getRangeclauseRangeclauseParserRuleCall_1_1_1_0());
						}
						lv_rangeclause_3_0=rulerangeclause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForstmtRule());
							}
							set(
								$current,
								"rangeclause",
								lv_rangeclause_3_0,
								"org.xtext.example.mydsl.MyDsl.rangeclause");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getForstmtAccess().getBlockBlockParserRuleCall_2_0());
				}
				lv_block_4_0=ruleblock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForstmtRule());
					}
					set(
						$current,
						"block",
						lv_block_4_0,
						"org.xtext.example.mydsl.MyDsl.block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulerangeclause
entryRulerangeclause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeclauseRule()); }
	iv_rulerangeclause=rulerangeclause
	{ $current=$iv_rulerangeclause.current; }
	EOF;

// Rule rangeclause
rulerangeclause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRangeclauseAccess().getExpressionlistPostexpressionlistParserRuleCall_0_0_0_0());
						}
						lv_expressionlist_0_0=rulepostexpressionlist
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangeclauseRule());
							}
							set(
								$current,
								"expressionlist",
								lv_expressionlist_0_0,
								"org.xtext.example.mydsl.MyDsl.postexpressionlist");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_1='='
				{
					newLeafNode(otherlv_1, grammarAccess.getRangeclauseAccess().getEqualsSignKeyword_0_0_1());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRangeclauseAccess().getIdentifierlistIdentifierlistParserRuleCall_0_1_0_0());
						}
						lv_identifierlist_2_0=ruleidentifierlist
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangeclauseRule());
							}
							set(
								$current,
								"identifierlist",
								lv_identifierlist_2_0,
								"org.xtext.example.mydsl.MyDsl.identifierlist");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3=':='
				{
					newLeafNode(otherlv_3, grammarAccess.getRangeclauseAccess().getColonEqualsSignKeyword_0_1_1());
				}
			)
		)?
		otherlv_4='range'
		{
			newLeafNode(otherlv_4, grammarAccess.getRangeclauseAccess().getRangeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRangeclauseAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_5_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRangeclauseRule());
					}
					set(
						$current,
						"expression",
						lv_expression_5_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleforclause
entryRuleforclause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForclauseRule()); }
	iv_ruleforclause=ruleforclause
	{ $current=$iv_ruleforclause.current; }
	EOF;

// Rule forclause
ruleforclause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForclauseAccess().getForclauseAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForclauseAccess().getSimplestmtSimplestmtParserRuleCall_1_0());
				}
				lv_simplestmt_1_0=rulesimplestmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForclauseRule());
					}
					add(
						$current,
						"simplestmt",
						lv_simplestmt_1_0,
						"org.xtext.example.mydsl.MyDsl.simplestmt");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getForclauseAccess().getSemicolonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForclauseAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForclauseRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getForclauseAccess().getSemicolonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForclauseAccess().getSimplestmtSimplestmtParserRuleCall_5_0());
				}
				lv_simplestmt_5_0=rulesimplestmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForclauseRule());
					}
					add(
						$current,
						"simplestmt",
						lv_simplestmt_5_0,
						"org.xtext.example.mydsl.MyDsl.simplestmt");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleswitchstmt
entryRuleswitchstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchstmtRule()); }
	iv_ruleswitchstmt=ruleswitchstmt
	{ $current=$iv_ruleswitchstmt.current; }
	EOF;

// Rule switchstmt
ruleswitchstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchstmtAccess().getExprswitchstmtExprswitchstmtParserRuleCall_0_0());
				}
				lv_exprswitchstmt_0_0=ruleexprswitchstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchstmtRule());
					}
					set(
						$current,
						"exprswitchstmt",
						lv_exprswitchstmt_0_0,
						"org.xtext.example.mydsl.MyDsl.exprswitchstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			((
				ruletypeswitchstmt
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getSwitchstmtAccess().getTypeswitchstmtTypeswitchstmtParserRuleCall_1_0());
				}
				lv_typeswitchstmt_1_0=ruletypeswitchstmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchstmtRule());
					}
					set(
						$current,
						"typeswitchstmt",
						lv_typeswitchstmt_1_0,
						"org.xtext.example.mydsl.MyDsl.typeswitchstmt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleexprswitchstmt
entryRuleexprswitchstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprswitchstmtRule()); }
	iv_ruleexprswitchstmt=ruleexprswitchstmt
	{ $current=$iv_ruleexprswitchstmt.current; }
	EOF;

// Rule exprswitchstmt
ruleexprswitchstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExprswitchstmtAccess().getExprswitchstmtAction_0(),
					$current);
			}
		)
		otherlv_1='switch'
		{
			newLeafNode(otherlv_1, grammarAccess.getExprswitchstmtAccess().getSwitchKeyword_1());
		}
		(
			(
				((
					rulesimplestmt
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getExprswitchstmtAccess().getSimplestmtSimplestmtParserRuleCall_2_0_0());
					}
					lv_simplestmt_2_0=rulesimplestmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprswitchstmtRule());
						}
						set(
							$current,
							"simplestmt",
							lv_simplestmt_2_0,
							"org.xtext.example.mydsl.MyDsl.simplestmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=';'
			{
				newLeafNode(otherlv_3, grammarAccess.getExprswitchstmtAccess().getSemicolonKeyword_2_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getExprswitchstmtAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_4_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprswitchstmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getExprswitchstmtAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExprswitchstmtAccess().getExprcaseclauseExprcaseclauseParserRuleCall_5_0());
				}
				lv_exprcaseclause_6_0=ruleexprcaseclause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprswitchstmtRule());
					}
					add(
						$current,
						"exprcaseclause",
						lv_exprcaseclause_6_0,
						"org.xtext.example.mydsl.MyDsl.exprcaseclause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getExprswitchstmtAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleexprcaseclause
entryRuleexprcaseclause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprcaseclauseRule()); }
	iv_ruleexprcaseclause=ruleexprcaseclause
	{ $current=$iv_ruleexprcaseclause.current; }
	EOF;

// Rule exprcaseclause
ruleexprcaseclause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprcaseclauseAccess().getExprswitchcaseExprswitchcaseParserRuleCall_0_0());
				}
				lv_exprswitchcase_0_0=ruleexprswitchcase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprcaseclauseRule());
					}
					set(
						$current,
						"exprswitchcase",
						lv_exprswitchcase_0_0,
						"org.xtext.example.mydsl.MyDsl.exprswitchcase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getExprcaseclauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExprcaseclauseAccess().getStatementlistStatementlistParserRuleCall_2_0());
				}
				lv_statementlist_2_0=rulestatementlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprcaseclauseRule());
					}
					set(
						$current,
						"statementlist",
						lv_statementlist_2_0,
						"org.xtext.example.mydsl.MyDsl.statementlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleexprswitchcase
entryRuleexprswitchcase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprswitchcaseRule()); }
	iv_ruleexprswitchcase=ruleexprswitchcase
	{ $current=$iv_ruleexprswitchcase.current; }
	EOF;

// Rule exprswitchcase
ruleexprswitchcase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='case'
			{
				newLeafNode(otherlv_0, grammarAccess.getExprswitchcaseAccess().getCaseKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExprswitchcaseAccess().getExpressionlistExpressionlistParserRuleCall_0_1_0());
					}
					lv_expressionlist_1_0=ruleexpressionlist
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExprswitchcaseRule());
						}
						set(
							$current,
							"expressionlist",
							lv_expressionlist_1_0,
							"org.xtext.example.mydsl.MyDsl.expressionlist");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExprswitchcaseAccess().getExprswitchcaseAction_1_0(),
						$current);
				}
			)
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getExprswitchcaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuletypeswitchstmt
entryRuletypeswitchstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeswitchstmtRule()); }
	iv_ruletypeswitchstmt=ruletypeswitchstmt
	{ $current=$iv_ruletypeswitchstmt.current; }
	EOF;

// Rule typeswitchstmt
ruletypeswitchstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeswitchstmtAccess().getSwitchKeyword_0());
		}
		(
			(
				(rulesimplestmt)=>
				{
					newCompositeNode(grammarAccess.getTypeswitchstmtAccess().getSimplestmtParserRuleCall_1_0());
				}
				this_simplestmt_1=rulesimplestmt
				{
					$current = $this_simplestmt_1.current;
					afterParserOrEnumRuleCall();
				}
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getTypeswitchstmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeswitchstmtAccess().getTypeswitchguardTypeswitchguardParserRuleCall_2_0());
				}
				lv_typeswitchguard_3_0=ruletypeswitchguard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeswitchstmtRule());
					}
					set(
						$current,
						"typeswitchguard",
						lv_typeswitchguard_3_0,
						"org.xtext.example.mydsl.MyDsl.typeswitchguard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeswitchstmtAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeswitchstmtAccess().getTypecaseclauseTypecaseclauseParserRuleCall_4_0());
				}
				lv_typecaseclause_5_0=ruletypecaseclause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeswitchstmtRule());
					}
					add(
						$current,
						"typecaseclause",
						lv_typecaseclause_5_0,
						"org.xtext.example.mydsl.MyDsl.typecaseclause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeswitchstmtAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuletypeswitchguard
entryRuletypeswitchguard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeswitchguardRule()); }
	iv_ruletypeswitchguard=ruletypeswitchguard
	{ $current=$iv_ruletypeswitchguard.current; }
	EOF;

// Rule typeswitchguard
ruletypeswitchguard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_IDENTIFIER_0_0=RULE_IDENTIFIER
					{
						newLeafNode(lv_IDENTIFIER_0_0, grammarAccess.getTypeswitchguardAccess().getIDENTIFIERIDENTIFIERTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeswitchguardRule());
						}
						setWithLastConsumed(
							$current,
							"IDENTIFIER",
							lv_IDENTIFIER_0_0,
							"org.xtext.example.mydsl.MyDsl.IDENTIFIER");
					}
				)
			)
			otherlv_1=':='
			{
				newLeafNode(otherlv_1, grammarAccess.getTypeswitchguardAccess().getColonEqualsSignKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTypeswitchguardAccess().getPrimaryexprPrimaryexprParserRuleCall_1_0());
				}
				lv_primaryexpr_2_0=ruleprimaryexpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypeswitchguardRule());
					}
					set(
						$current,
						"primaryexpr",
						lv_primaryexpr_2_0,
						"org.xtext.example.mydsl.MyDsl.primaryexpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeswitchguardAccess().getFullStopKeyword_2());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getTypeswitchguardAccess().getLeftParenthesisKeyword_3());
		}
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeswitchguardAccess().getTypeKeyword_4());
		}
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getTypeswitchguardAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuletypecaseclause
entryRuletypecaseclause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypecaseclauseRule()); }
	iv_ruletypecaseclause=ruletypecaseclause
	{ $current=$iv_ruletypecaseclause.current; }
	EOF;

// Rule typecaseclause
ruletypecaseclause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTypecaseclauseAccess().getTypeswitchcaseTypeswitchcaseParserRuleCall_0_0());
				}
				lv_typeswitchcase_0_0=ruletypeswitchcase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypecaseclauseRule());
					}
					set(
						$current,
						"typeswitchcase",
						lv_typeswitchcase_0_0,
						"org.xtext.example.mydsl.MyDsl.typeswitchcase");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypecaseclauseAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypecaseclauseAccess().getStatementlistStatementlistParserRuleCall_2_0());
				}
				lv_statementlist_2_0=rulestatementlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypecaseclauseRule());
					}
					set(
						$current,
						"statementlist",
						lv_statementlist_2_0,
						"org.xtext.example.mydsl.MyDsl.statementlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuletypeswitchcase
entryRuletypeswitchcase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeswitchcaseRule()); }
	iv_ruletypeswitchcase=ruletypeswitchcase
	{ $current=$iv_ruletypeswitchcase.current; }
	EOF;

// Rule typeswitchcase
ruletypeswitchcase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='case'
			{
				newLeafNode(otherlv_0, grammarAccess.getTypeswitchcaseAccess().getCaseKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeswitchcaseAccess().getTypelistTypelistParserRuleCall_0_1_0());
					}
					lv_typelist_1_0=ruletypelist
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeswitchcaseRule());
						}
						set(
							$current,
							"typelist",
							lv_typelist_1_0,
							"org.xtext.example.mydsl.MyDsl.typelist");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTypeswitchcaseAccess().getTypeswitchcaseAction_1_0(),
						$current);
				}
			)
			otherlv_3='default'
			{
				newLeafNode(otherlv_3, grammarAccess.getTypeswitchcaseAccess().getDefaultKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuletypelist
entryRuletypelist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypelistRule()); }
	iv_ruletypelist=ruletypelist
	{ $current=$iv_ruletypelist.current; }
	EOF;

// Rule typelist
ruletypelist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypelistAccess().getTypelistAction_0(),
					$current);
			}
		)
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypelistAccess().getTypeKeyword_1());
		}
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTypelistAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTypelistAccess().getTypeTypeParserRuleCall_2_1_0());
					}
					lv_type_3_0=ruletype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypelistRule());
						}
						add(
							$current,
							"type",
							lv_type_3_0,
							"org.xtext.example.mydsl.MyDsl.type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleifstmt
entryRuleifstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfstmtRule()); }
	iv_ruleifstmt=ruleifstmt
	{ $current=$iv_ruleifstmt.current; }
	EOF;

// Rule ifstmt
ruleifstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfstmtAccess().getIfKeyword_0());
		}
		(
			(
				((
					rulesimplestmt
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getIfstmtAccess().getSimplestmtSimplestmtParserRuleCall_1_0_0());
					}
					lv_simplestmt_1_0=rulesimplestmt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfstmtRule());
						}
						set(
							$current,
							"simplestmt",
							lv_simplestmt_1_0,
							"org.xtext.example.mydsl.MyDsl.simplestmt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getIfstmtAccess().getSemicolonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIfstmtAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_3_0=ruleexpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfstmtRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.example.mydsl.MyDsl.expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfstmtAccess().getBlockBlockParserRuleCall_3_0());
				}
				lv_block_4_0=ruleblock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfstmtRule());
					}
					add(
						$current,
						"block",
						lv_block_4_0,
						"org.xtext.example.mydsl.MyDsl.block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfstmtAccess().getElseKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getIfstmtAccess().getIfstmtIfstmtParserRuleCall_4_1_0_0());
						}
						lv_ifstmt_6_0=ruleifstmt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfstmtRule());
							}
							set(
								$current,
								"ifstmt",
								lv_ifstmt_6_0,
								"org.xtext.example.mydsl.MyDsl.ifstmt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getIfstmtAccess().getBlockBlockParserRuleCall_4_1_1_0());
						}
						lv_block_7_0=ruleblock
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIfstmtRule());
							}
							add(
								$current,
								"block",
								lv_block_7_0,
								"org.xtext.example.mydsl.MyDsl.block");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleassignmentaux
entryRuleassignmentaux returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentauxRule()); }
	iv_ruleassignmentaux=ruleassignmentaux
	{ $current=$iv_ruleassignmentaux.current; }
	EOF;

// Rule assignmentaux
ruleassignmentaux returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentauxAccess().getPostexpressionlistPostexpressionlistParserRuleCall_0_0());
				}
				lv_postexpressionlist_0_0=rulepostexpressionlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentauxRule());
					}
					add(
						$current,
						"postexpressionlist",
						lv_postexpressionlist_0_0,
						"org.xtext.example.mydsl.MyDsl.postexpressionlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_ASSIGN_OP_1_0=RULE_ASSIGN_OP
				{
					newLeafNode(lv_ASSIGN_OP_1_0, grammarAccess.getAssignmentauxAccess().getASSIGN_OPASSIGN_OPTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignmentauxRule());
					}
					setWithLastConsumed(
						$current,
						"ASSIGN_OP",
						lv_ASSIGN_OP_1_0,
						"org.xtext.example.mydsl.MyDsl.ASSIGN_OP");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentauxAccess().getExpressionlistExpressionlistParserRuleCall_2_0());
				}
				lv_expressionlist_2_0=ruleexpressionlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentauxRule());
					}
					add(
						$current,
						"expressionlist",
						lv_expressionlist_2_0,
						"org.xtext.example.mydsl.MyDsl.expressionlist");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleincdecstmtaux
entryRuleincdecstmtaux returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIncdecstmtauxRule()); }
	iv_ruleincdecstmtaux=ruleincdecstmtaux
	{ $current=$iv_ruleincdecstmtaux.current.getText(); }
	EOF;

// Rule incdecstmtaux
ruleincdecstmtaux returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='++'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIncdecstmtauxAccess().getPlusSignPlusSignKeyword_0());
		}
		    |
		kw='--'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIncdecstmtauxAccess().getHyphenMinusHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRulelabeledstmt
entryRulelabeledstmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledstmtRule()); }
	iv_rulelabeledstmt=rulelabeledstmt
	{ $current=$iv_rulelabeledstmt.current; }
	EOF;

// Rule labeledstmt
rulelabeledstmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledstmtAccess().getLabelLabelParserRuleCall_0_0());
				}
				lv_label_0_0=rulelabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledstmtRule());
					}
					set(
						$current,
						"label",
						lv_label_0_0,
						"org.xtext.example.mydsl.MyDsl.label");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabeledstmtAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledstmtAccess().getStatementStatementParserRuleCall_2_0());
				}
				lv_statement_2_0=rulestatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledstmtRule());
					}
					set(
						$current,
						"statement",
						lv_statement_2_0,
						"org.xtext.example.mydsl.MyDsl.statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulelabel
entryRulelabel returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_rulelabel=rulelabel
	{ $current=$iv_rulelabel.current.getText(); }
	EOF;

// Rule label
rulelabel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getLabelAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRulefallthroughstmt
entryRulefallthroughstmt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFallthroughstmtRule()); }
	iv_rulefallthroughstmt=rulefallthroughstmt
	{ $current=$iv_rulefallthroughstmt.current.getText(); }
	EOF;

// Rule fallthroughstmt
rulefallthroughstmt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='fallthrough'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getFallthroughstmtAccess().getFallthroughKeyword());
	}
;

// Entry rule entryRuleblock
entryRuleblock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleblock=ruleblock
	{ $current=$iv_ruleblock.current; }
	EOF;

// Rule block
ruleblock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getBlockAccess().getStatementlistParserRuleCall_1());
		}
		this_statementlist_1=rulestatementlist
		{
			$current = $this_statementlist_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRulestatementlist
entryRulestatementlist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementlistRule()); }
	iv_rulestatementlist=rulestatementlist
	{ $current=$iv_rulestatementlist.current; }
	EOF;

// Rule statementlist
rulestatementlist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStatementlistAccess().getStatementlistAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStatementlistAccess().getStatementStatementParserRuleCall_1_0_0());
					}
					lv_statement_1_0=rulestatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatementlistRule());
						}
						add(
							$current,
							"statement",
							lv_statement_1_0,
							"org.xtext.example.mydsl.MyDsl.statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getStatementlistAccess().getSemicolonKeyword_1_1());
			}
		)*
	)
;

// Entry rule entryRulefunctionbody
entryRulefunctionbody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionbodyRule()); }
	iv_rulefunctionbody=rulefunctionbody
	{ $current=$iv_rulefunctionbody.current; }
	EOF;

// Rule functionbody
rulefunctionbody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFunctionbodyAccess().getBlockParserRuleCall());
	}
	this_block_0=ruleblock
	{
		$current = $this_block_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleliteral
entryRuleliteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleliteral=ruleliteral
	{ $current=$iv_ruleliteral.current; }
	EOF;

// Rule literal
ruleliteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getBasiclitBasiclitParserRuleCall_0_0());
				}
				lv_basiclit_0_0=rulebasiclit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"basiclit",
						lv_basiclit_0_0,
						"org.xtext.example.mydsl.MyDsl.basiclit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getCompositelitCompositelitParserRuleCall_1_0());
				}
				lv_compositelit_1_0=rulecompositelit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"compositelit",
						lv_compositelit_1_0,
						"org.xtext.example.mydsl.MyDsl.compositelit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getFunctionlitFunctionlitParserRuleCall_2_0());
				}
				lv_functionlit_2_0=rulefunctionlit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"functionlit",
						lv_functionlit_2_0,
						"org.xtext.example.mydsl.MyDsl.functionlit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulebasiclit
entryRulebasiclit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBasiclitRule()); }
	iv_rulebasiclit=rulebasiclit
	{ $current=$iv_rulebasiclit.current.getText(); }
	EOF;

// Rule basiclit
rulebasiclit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleint_lit)=>
			{
				newCompositeNode(grammarAccess.getBasiclitAccess().getInt_litParserRuleCall_0());
			}
			this_int_lit_0=ruleint_lit
			{
				$current.merge(this_int_lit_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(rulefloat_lit)=>
			{
				newCompositeNode(grammarAccess.getBasiclitAccess().getFloat_litParserRuleCall_1());
			}
			this_float_lit_1=rulefloat_lit
			{
				$current.merge(this_float_lit_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getBasiclitAccess().getImaginary_litParserRuleCall_2());
		}
		this_imaginary_lit_2=ruleimaginary_lit
		{
			$current.merge(this_imaginary_lit_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasiclitAccess().getRune_litParserRuleCall_3());
		}
		this_rune_lit_3=rulerune_lit
		{
			$current.merge(this_rune_lit_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBasiclitAccess().getString_litParserRuleCall_4());
		}
		this_string_lit_4=rulestring_lit
		{
			$current.merge(this_string_lit_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulequalified_ident
entryRulequalified_ident returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualified_identRule()); }
	iv_rulequalified_ident=rulequalified_ident
	{ $current=$iv_rulequalified_ident.current.getText(); }
	EOF;

// Rule qualified_ident
rulequalified_ident returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQualified_identAccess().getFullStopKeyword_0());
		}
		this_IDENTIFIER_1=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_1);
		}
		{
			newLeafNode(this_IDENTIFIER_1, grammarAccess.getQualified_identAccess().getIDENTIFIERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleslicetype
entryRuleslicetype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSlicetypeRule()); }
	iv_ruleslicetype=ruleslicetype
	{ $current=$iv_ruleslicetype.current; }
	EOF;

// Rule slicetype
ruleslicetype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getSlicetypeAccess().getLeftSquareBracketKeyword_0());
		}
		otherlv_1=']'
		{
			newLeafNode(otherlv_1, grammarAccess.getSlicetypeAccess().getRightSquareBracketKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getSlicetypeAccess().getElementtypeParserRuleCall_2());
		}
		this_elementtype_2=ruleelementtype
		{
			$current = $this_elementtype_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulepointertype
entryRulepointertype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPointertypeRule()); }
	iv_rulepointertype=rulepointertype
	{ $current=$iv_rulepointertype.current; }
	EOF;

// Rule pointertype
rulepointertype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='*'
		{
			newLeafNode(otherlv_0, grammarAccess.getPointertypeAccess().getAsteriskKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getPointertypeAccess().getBasetypeParserRuleCall_1());
		}
		this_basetype_1=rulebasetype
		{
			$current = $this_basetype_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulebasetype
entryRulebasetype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasetypeRule()); }
	iv_rulebasetype=rulebasetype
	{ $current=$iv_rulebasetype.current; }
	EOF;

// Rule basetype
rulebasetype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getBasetypeAccess().getTypeParserRuleCall());
	}
	this_type_0=ruletype
	{
		$current = $this_type_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulechanneltype
entryRulechanneltype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChanneltypeRule()); }
	iv_rulechanneltype=rulechanneltype
	{ $current=$iv_rulechanneltype.current; }
	EOF;

// Rule channeltype
rulechanneltype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				((
					'chan'
					'<-'
				)
				)=>
				(
					otherlv_0='chan'
					{
						newLeafNode(otherlv_0, grammarAccess.getChanneltypeAccess().getChanKeyword_0_0_0_0());
					}
					otherlv_1='<-'
					{
						newLeafNode(otherlv_1, grammarAccess.getChanneltypeAccess().getLessThanSignHyphenMinusKeyword_0_0_0_1());
					}
				)
			)
			    |
			otherlv_2='chan'
			{
				newLeafNode(otherlv_2, grammarAccess.getChanneltypeAccess().getChanKeyword_0_1());
			}
			    |
			(
				otherlv_3='<-'
				{
					newLeafNode(otherlv_3, grammarAccess.getChanneltypeAccess().getLessThanSignHyphenMinusKeyword_0_2_0());
				}
				otherlv_4='chan'
				{
					newLeafNode(otherlv_4, grammarAccess.getChanneltypeAccess().getChanKeyword_0_2_1());
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getChanneltypeAccess().getElementtypeParserRuleCall_1());
		}
		this_elementtype_5=ruleelementtype
		{
			$current = $this_elementtype_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulemaptype
entryRulemaptype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaptypeRule()); }
	iv_rulemaptype=rulemaptype
	{ $current=$iv_rulemaptype.current; }
	EOF;

// Rule maptype
rulemaptype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='map'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaptypeAccess().getMapKeyword_0());
		}
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getMaptypeAccess().getLeftSquareBracketKeyword_1());
		}
		{
			newCompositeNode(grammarAccess.getMaptypeAccess().getKeytypeParserRuleCall_2());
		}
		this_keytype_2=rulekeytype
		{
			$current = $this_keytype_2.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getMaptypeAccess().getRightSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaptypeAccess().getElementtypeElementtypeParserRuleCall_4_0());
				}
				lv_elementtype_4_0=ruleelementtype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaptypeRule());
					}
					set(
						$current,
						"elementtype",
						lv_elementtype_4_0,
						"org.xtext.example.mydsl.MyDsl.elementtype");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulekeytype
entryRulekeytype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeytypeRule()); }
	iv_rulekeytype=rulekeytype
	{ $current=$iv_rulekeytype.current; }
	EOF;

// Rule keytype
rulekeytype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getKeytypeAccess().getTypeParserRuleCall());
	}
	this_type_0=ruletype
	{
		$current = $this_type_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleelementtype
entryRuleelementtype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementtypeRule()); }
	iv_ruleelementtype=ruleelementtype
	{ $current=$iv_ruleelementtype.current; }
	EOF;

// Rule elementtype
ruleelementtype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getElementtypeAccess().getTypeParserRuleCall());
	}
	this_type_0=ruletype
	{
		$current = $this_type_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleinterfacetype
entryRuleinterfacetype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfacetypeRule()); }
	iv_ruleinterfacetype=ruleinterfacetype
	{ $current=$iv_ruleinterfacetype.current; }
	EOF;

// Rule interfacetype
ruleinterfacetype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInterfacetypeAccess().getInterfacetypeAction_0(),
					$current);
			}
		)
		otherlv_1='interface'
		{
			newLeafNode(otherlv_1, grammarAccess.getInterfacetypeAccess().getInterfaceKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfacetypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfacetypeAccess().getMethodspecMethodspecParserRuleCall_3_0_0());
					}
					lv_methodspec_3_0=rulemethodspec
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfacetypeRule());
						}
						add(
							$current,
							"methodspec",
							lv_methodspec_3_0,
							"org.xtext.example.mydsl.MyDsl.methodspec");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getInterfacetypeAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getInterfacetypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulemethodspec
entryRulemethodspec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodspecRule()); }
	iv_rulemethodspec=rulemethodspec
	{ $current=$iv_rulemethodspec.current; }
	EOF;

// Rule methodspec
rulemethodspec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodspecAccess().getMethodnameMethodnameParserRuleCall_0_0_0());
					}
					lv_methodname_0_0=rulemethodname
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodspecRule());
						}
						set(
							$current,
							"methodname",
							lv_methodname_0_0,
							"org.xtext.example.mydsl.MyDsl.methodname");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodspecAccess().getSignatureSignatureParserRuleCall_0_1_0());
					}
					lv_signature_1_0=rulesignature
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodspecRule());
						}
						set(
							$current,
							"signature",
							lv_signature_1_0,
							"org.xtext.example.mydsl.MyDsl.signature");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodspecAccess().getInterfacetypenameInterfacetypenameParserRuleCall_1_0());
				}
				lv_interfacetypename_2_0=ruleinterfacetypename
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodspecRule());
					}
					set(
						$current,
						"interfacetypename",
						lv_interfacetypename_2_0,
						"org.xtext.example.mydsl.MyDsl.interfacetypename");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulemethodname
entryRulemethodname returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMethodnameRule()); }
	iv_rulemethodname=rulemethodname
	{ $current=$iv_rulemethodname.current.getText(); }
	EOF;

// Rule methodname
rulemethodname returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getMethodnameAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRuleinterfacetypename
entryRuleinterfacetypename returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterfacetypenameRule()); }
	iv_ruleinterfacetypename=ruleinterfacetypename
	{ $current=$iv_ruleinterfacetypename.current.getText(); }
	EOF;

// Rule interfacetypename
ruleinterfacetypename returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInterfacetypenameAccess().getTypenameParserRuleCall());
	}
	this_typename_0=ruletypename
	{
		$current.merge(this_typename_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulefunctiontype
entryRulefunctiontype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctiontypeRule()); }
	iv_rulefunctiontype=rulefunctiontype
	{ $current=$iv_rulefunctiontype.current; }
	EOF;

// Rule functiontype
rulefunctiontype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctiontypeAccess().getFuncKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getFunctiontypeAccess().getSignatureParserRuleCall_1());
		}
		this_signature_1=rulesignature
		{
			$current = $this_signature_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulesignature
entryRulesignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignatureRule()); }
	iv_rulesignature=rulesignature
	{ $current=$iv_rulesignature.current; }
	EOF;

// Rule signature
rulesignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getParametersParametersParserRuleCall_0_0());
				}
				lv_parameters_0_0=ruleparameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"parameters",
						lv_parameters_0_0,
						"org.xtext.example.mydsl.MyDsl.parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			((
				ruleresult
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getResultResultParserRuleCall_1_0());
				}
				lv_result_1_0=ruleresult
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					set(
						$current,
						"result",
						lv_result_1_0,
						"org.xtext.example.mydsl.MyDsl.result");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleresult
entryRuleresult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultRule()); }
	iv_ruleresult=ruleresult
	{ $current=$iv_ruleresult.current; }
	EOF;

// Rule result
ruleresult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruletype)=>
			{
				newCompositeNode(grammarAccess.getResultAccess().getTypeParserRuleCall_0());
			}
			this_type_0=ruletype
			{
				$current = $this_type_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getResultAccess().getParametersParserRuleCall_1());
		}
		this_parameters_1=ruleparameters
		{
			$current = $this_parameters_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleparameters
entryRuleparameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	iv_ruleparameters=ruleparameters
	{ $current=$iv_ruleparameters.current; }
	EOF;

// Rule parameters
ruleparameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParametersAccess().getParametersAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getParametersAccess().getParameterlistParameterlistParserRuleCall_2_0_0());
					}
					lv_parameterlist_2_0=ruleparameterlist
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParametersRule());
						}
						set(
							$current,
							"parameterlist",
							lv_parameterlist_2_0,
							"org.xtext.example.mydsl.MyDsl.parameterlist");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getParametersAccess().getCommaKeyword_2_1());
				}
			)?
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getParametersAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleparameterlist
entryRuleparameterlist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterlistRule()); }
	iv_ruleparameterlist=ruleparameterlist
	{ $current=$iv_ruleparameterlist.current; }
	EOF;

// Rule parameterlist
ruleparameterlist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterlistAccess().getParameterdeclParameterdeclParserRuleCall_0_0());
				}
				lv_parameterdecl_0_0=ruleparameterdecl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterlistRule());
					}
					add(
						$current,
						"parameterdecl",
						lv_parameterdecl_0_0,
						"org.xtext.example.mydsl.MyDsl.parameterdecl");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterlistAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterlistAccess().getParameterdeclParameterdeclParserRuleCall_1_1_0());
					}
					lv_parameterdecl_2_0=ruleparameterdecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterlistRule());
						}
						add(
							$current,
							"parameterdecl",
							lv_parameterdecl_2_0,
							"org.xtext.example.mydsl.MyDsl.parameterdecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleparameterdecl
entryRuleparameterdecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterdeclRule()); }
	iv_ruleparameterdecl=ruleparameterdecl
	{ $current=$iv_ruleparameterdecl.current; }
	EOF;

// Rule parameterdecl
ruleparameterdecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterdeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0());
				}
				lv_identifierlist_0_0=ruleidentifierlist
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterdeclRule());
					}
					set(
						$current,
						"identifierlist",
						lv_identifierlist_0_0,
						"org.xtext.example.mydsl.MyDsl.identifierlist");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_1='...'
			{
				newLeafNode(otherlv_1, grammarAccess.getParameterdeclAccess().getFullStopFullStopFullStopKeyword_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterdeclAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruletype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterdeclRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleidentifierlist
entryRuleidentifierlist returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIdentifierlistRule()); }
	iv_ruleidentifierlist=ruleidentifierlist
	{ $current=$iv_ruleidentifierlist.current.getText(); }
	EOF;

// Rule identifierlist
ruleidentifierlist returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IDENTIFIER_0=RULE_IDENTIFIER
		{
			$current.merge(this_IDENTIFIER_0);
		}
		{
			newLeafNode(this_IDENTIFIER_0, grammarAccess.getIdentifierlistAccess().getIDENTIFIERTerminalRuleCall_0());
		}
		(
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIdentifierlistAccess().getCommaKeyword_1_0());
			}
			this_IDENTIFIER_2=RULE_IDENTIFIER
			{
				$current.merge(this_IDENTIFIER_2);
			}
			{
				newLeafNode(this_IDENTIFIER_2, grammarAccess.getIdentifierlistAccess().getIDENTIFIERTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRulestructtype
entryRulestructtype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructtypeRule()); }
	iv_rulestructtype=rulestructtype
	{ $current=$iv_rulestructtype.current; }
	EOF;

// Rule structtype
rulestructtype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStructtypeAccess().getStructtypeAction_0(),
					$current);
			}
		)
		otherlv_1='struct'
		{
			newLeafNode(otherlv_1, grammarAccess.getStructtypeAccess().getStructKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStructtypeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStructtypeAccess().getFielddeclFielddeclParserRuleCall_3_0_0());
					}
					lv_fielddecl_3_0=rulefielddecl
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStructtypeRule());
						}
						add(
							$current,
							"fielddecl",
							lv_fielddecl_3_0,
							"org.xtext.example.mydsl.MyDsl.fielddecl");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getStructtypeAccess().getSemicolonKeyword_3_1());
			}
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getStructtypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulefielddecl
entryRulefielddecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFielddeclRule()); }
	iv_rulefielddecl=rulefielddecl
	{ $current=$iv_rulefielddecl.current; }
	EOF;

// Rule fielddecl
rulefielddecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFielddeclAccess().getIdentifierlistIdentifierlistParserRuleCall_0_0_0_0());
						}
						lv_identifierlist_0_0=ruleidentifierlist
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFielddeclRule());
							}
							set(
								$current,
								"identifierlist",
								lv_identifierlist_0_0,
								"org.xtext.example.mydsl.MyDsl.identifierlist");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getFielddeclAccess().getTypeTypeParserRuleCall_0_0_1_0());
						}
						lv_type_1_0=ruletype
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFielddeclRule());
							}
							set(
								$current,
								"type",
								lv_type_1_0,
								"org.xtext.example.mydsl.MyDsl.type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFielddeclAccess().getEmbeddedfieldEmbeddedfieldParserRuleCall_0_1_0());
					}
					lv_embeddedfield_2_0=ruleembeddedfield
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFielddeclRule());
						}
						set(
							$current,
							"embeddedfield",
							lv_embeddedfield_2_0,
							"org.xtext.example.mydsl.MyDsl.embeddedfield");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFielddeclAccess().getTagTagParserRuleCall_1_0());
				}
				lv_tag_3_0=ruletag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFielddeclRule());
					}
					set(
						$current,
						"tag",
						lv_tag_3_0,
						"org.xtext.example.mydsl.MyDsl.tag");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleembeddedfield
entryRuleembeddedfield returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmbeddedfieldRule()); }
	iv_ruleembeddedfield=ruleembeddedfield
	{ $current=$iv_ruleembeddedfield.current.getText(); }
	EOF;

// Rule embeddedfield
ruleembeddedfield returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEmbeddedfieldAccess().getAsteriskKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getEmbeddedfieldAccess().getTypenameParserRuleCall_1());
		}
		this_typename_1=ruletypename
		{
			$current.merge(this_typename_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuletypelit
entryRuletypelit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypelitRule()); }
	iv_ruletypelit=ruletypelit
	{ $current=$iv_ruletypelit.current; }
	EOF;

// Rule typelit
ruletypelit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				'['
				(
					(
						ruleexpression
					)
				)
				']'
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getArraytypeArraytypeParserRuleCall_0_0());
				}
				lv_arraytype_0_0=rulearraytype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"arraytype",
						lv_arraytype_0_0,
						"org.xtext.example.mydsl.MyDsl.arraytype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getStructtypeStructtypeParserRuleCall_1_0());
				}
				lv_structtype_1_0=rulestructtype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"structtype",
						lv_structtype_1_0,
						"org.xtext.example.mydsl.MyDsl.structtype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getPointertypePointertypeParserRuleCall_2_0());
				}
				lv_pointertype_2_0=rulepointertype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"pointertype",
						lv_pointertype_2_0,
						"org.xtext.example.mydsl.MyDsl.pointertype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getFunctiontypeFunctiontypeParserRuleCall_3_0());
				}
				lv_functiontype_3_0=rulefunctiontype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"functiontype",
						lv_functiontype_3_0,
						"org.xtext.example.mydsl.MyDsl.functiontype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getInterfacetypeInterfacetypeParserRuleCall_4_0());
				}
				lv_interfacetype_4_0=ruleinterfacetype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"interfacetype",
						lv_interfacetype_4_0,
						"org.xtext.example.mydsl.MyDsl.interfacetype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getSlicetypeSlicetypeParserRuleCall_5_0());
				}
				lv_slicetype_5_0=ruleslicetype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"slicetype",
						lv_slicetype_5_0,
						"org.xtext.example.mydsl.MyDsl.slicetype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getMaptypeMaptypeParserRuleCall_6_0());
				}
				lv_maptype_6_0=rulemaptype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"maptype",
						lv_maptype_6_0,
						"org.xtext.example.mydsl.MyDsl.maptype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTypelitAccess().getChanneltypeChanneltypeParserRuleCall_7_0());
				}
				lv_channeltype_7_0=rulechanneltype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypelitRule());
					}
					set(
						$current,
						"channeltype",
						lv_channeltype_7_0,
						"org.xtext.example.mydsl.MyDsl.channeltype");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulearraytype
entryRulearraytype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArraytypeRule()); }
	iv_rulearraytype=rulearraytype
	{ $current=$iv_rulearraytype.current; }
	EOF;

// Rule arraytype
rulearraytype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				'['
				(
					(
						ruleexpression
					)
				)
				']'
			)
			)=>
			(
				otherlv_0='['
				{
					newLeafNode(otherlv_0, grammarAccess.getArraytypeAccess().getLeftSquareBracketKeyword_0_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArraytypeAccess().getExpressionExpressionParserRuleCall_0_0_1_0());
						}
						lv_expression_1_0=ruleexpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArraytypeRule());
							}
							set(
								$current,
								"expression",
								lv_expression_1_0,
								"org.xtext.example.mydsl.MyDsl.expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2=']'
				{
					newLeafNode(otherlv_2, grammarAccess.getArraytypeAccess().getRightSquareBracketKeyword_0_0_2());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArraytypeAccess().getElementtypeElementtypeParserRuleCall_1_0());
				}
				lv_elementtype_3_0=ruleelementtype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArraytypeRule());
					}
					set(
						$current,
						"elementtype",
						lv_elementtype_3_0,
						"org.xtext.example.mydsl.MyDsl.elementtype");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuletag
entryRuletag returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruletag=ruletag
	{ $current=$iv_ruletag.current.getText(); }
	EOF;

// Rule tag
ruletag returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getTagAccess().getString_litParserRuleCall());
	}
	this_string_lit_0=rulestring_lit
	{
		$current.merge(this_string_lit_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuletypename
entryRuletypename returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypenameRule()); }
	iv_ruletypename=ruletypename
	{ $current=$iv_ruletypename.current.getText(); }
	EOF;

// Rule typename
ruletypename returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				rulepackagename
				rulequalified_ident
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getTypenameAccess().getPackagenameParserRuleCall_0_0_0());
				}
				this_packagename_0=rulepackagename
				{
					$current.merge(this_packagename_0);
				}
				{
					afterParserOrEnumRuleCall();
				}
				{
					newCompositeNode(grammarAccess.getTypenameAccess().getQualified_identParserRuleCall_0_0_1());
				}
				this_qualified_ident_1=rulequalified_ident
				{
					$current.merge(this_qualified_ident_1);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getTypenameAccess().getPackagenameParserRuleCall_1());
		}
		this_packagename_2=rulepackagename
		{
			$current.merge(this_packagename_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulepackagename
entryRulepackagename returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackagenameRule()); }
	iv_rulepackagename=rulepackagename
	{ $current=$iv_rulepackagename.current.getText(); }
	EOF;

// Rule packagename
rulepackagename returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_IDENTIFIER_0=RULE_IDENTIFIER
	{
		$current.merge(this_IDENTIFIER_0);
	}
	{
		newLeafNode(this_IDENTIFIER_0, grammarAccess.getPackagenameAccess().getIDENTIFIERTerminalRuleCall());
	}
;

// Entry rule entryRulestring_lit
entryRulestring_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getString_litRule()); }
	iv_rulestring_lit=rulestring_lit
	{ $current=$iv_rulestring_lit.current.getText(); }
	EOF;

// Rule string_lit
rulestring_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getString_litAccess().getRaw_string_litParserRuleCall_0());
		}
		this_raw_string_lit_0=ruleraw_string_lit
		{
			$current.merge(this_raw_string_lit_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getString_litAccess().getInterpreted_string_litParserRuleCall_1());
		}
		this_interpreted_string_lit_1=ruleinterpreted_string_lit
		{
			$current.merge(this_interpreted_string_lit_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleraw_string_lit
entryRuleraw_string_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRaw_string_litRule()); }
	iv_ruleraw_string_lit=ruleraw_string_lit
	{ $current=$iv_ruleraw_string_lit.current.getText(); }
	EOF;

// Rule raw_string_lit
ruleraw_string_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='`'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRaw_string_litAccess().getGraveAccentKeyword_0());
		}
		(
			this_LETTER_1=RULE_LETTER
			{
				$current.merge(this_LETTER_1);
			}
			{
				newLeafNode(this_LETTER_1, grammarAccess.getRaw_string_litAccess().getLETTERTerminalRuleCall_1_0());
			}
			    |
			this_DECIMAL_DIGIT_2=RULE_DECIMAL_DIGIT
			{
				$current.merge(this_DECIMAL_DIGIT_2);
			}
			{
				newLeafNode(this_DECIMAL_DIGIT_2, grammarAccess.getRaw_string_litAccess().getDECIMAL_DIGITTerminalRuleCall_1_1());
			}
			    |
			kw='\\n'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getRaw_string_litAccess().getNKeyword_1_2());
			}
		)*
		kw='`'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRaw_string_litAccess().getGraveAccentKeyword_2());
		}
	)
;

// Entry rule entryRuleinterpreted_string_lit
entryRuleinterpreted_string_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterpreted_string_litRule()); }
	iv_ruleinterpreted_string_lit=ruleinterpreted_string_lit
	{ $current=$iv_ruleinterpreted_string_lit.current.getText(); }
	EOF;

// Rule interpreted_string_lit
ruleinterpreted_string_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getInterpreted_string_litAccess().getUnicode_valueParserRuleCall_1_0());
			}
			this_unicode_value_1=ruleunicode_value
			{
				$current.merge(this_unicode_value_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getInterpreted_string_litAccess().getByte_valueParserRuleCall_1_1());
			}
			this_byte_value_2=rulebyte_value
			{
				$current.merge(this_byte_value_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
		kw='"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInterpreted_string_litAccess().getQuotationMarkKeyword_2());
		}
	)
;

// Entry rule entryRulerune_lit
entryRulerune_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRune_litRule()); }
	iv_rulerune_lit=rulerune_lit
	{ $current=$iv_rulerune_lit.current.getText(); }
	EOF;

// Rule rune_lit
rulerune_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRune_litAccess().getApostropheKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getRune_litAccess().getUnicode_valueParserRuleCall_1_0());
			}
			this_unicode_value_1=ruleunicode_value
			{
				$current.merge(this_unicode_value_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getRune_litAccess().getByte_valueParserRuleCall_1_1());
			}
			this_byte_value_2=rulebyte_value
			{
				$current.merge(this_byte_value_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRune_litAccess().getApostropheKeyword_2());
		}
	)
;

// Entry rule entryRuleint_lit
entryRuleint_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInt_litRule()); }
	iv_ruleint_lit=ruleint_lit
	{ $current=$iv_ruleint_lit.current.getText(); }
	EOF;

// Rule int_lit
ruleint_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DECIMAL_DIGIT_0=RULE_DECIMAL_DIGIT
		{
			$current.merge(this_DECIMAL_DIGIT_0);
		}
		{
			newLeafNode(this_DECIMAL_DIGIT_0, grammarAccess.getInt_litAccess().getDECIMAL_DIGITTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getInt_litAccess().getHex_litParserRuleCall_1());
		}
		this_hex_lit_1=rulehex_lit
		{
			$current.merge(this_hex_lit_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)*
;

// Entry rule entryRulehex_lit
entryRulehex_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHex_litRule()); }
	iv_rulehex_lit=rulehex_lit
	{ $current=$iv_rulehex_lit.current.getText(); }
	EOF;

// Rule hex_lit
rulehex_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='0'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHex_litAccess().getDigitZeroKeyword_0());
		}
		(
			kw='x'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getHex_litAccess().getXKeyword_1_0());
			}
			    |
			kw='X'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getHex_litAccess().getXKeyword_1_1());
			}
		)
		(
			this_HEX_DIGIT_3=RULE_HEX_DIGIT
			{
				$current.merge(this_HEX_DIGIT_3);
			}
			{
				newLeafNode(this_HEX_DIGIT_3, grammarAccess.getHex_litAccess().getHEX_DIGITTerminalRuleCall_2());
			}
		)+
	)
;

// Entry rule entryRuleimaginary_lit
entryRuleimaginary_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getImaginary_litRule()); }
	iv_ruleimaginary_lit=ruleimaginary_lit
	{ $current=$iv_ruleimaginary_lit.current.getText(); }
	EOF;

// Rule imaginary_lit
ruleimaginary_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getImaginary_litAccess().getDecimalsParserRuleCall_0_0());
			}
			this_decimals_0=ruledecimals
			{
				$current.merge(this_decimals_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getImaginary_litAccess().getFloat_litParserRuleCall_0_1());
			}
			this_float_lit_1=rulefloat_lit
			{
				$current.merge(this_float_lit_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		kw='i'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getImaginary_litAccess().getIKeyword_1());
		}
	)
;

// Entry rule entryRulefloat_lit
entryRulefloat_lit returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloat_litRule()); }
	iv_rulefloat_lit=rulefloat_lit
	{ $current=$iv_rulefloat_lit.current.getText(); }
	EOF;

// Rule float_lit
rulefloat_lit returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_0());
			}
			this_decimals_0=ruledecimals
			{
				$current.merge(this_decimals_0);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloat_litAccess().getFullStopKeyword_0_1());
			}
			(
				{
					newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_0_2());
				}
				this_decimals_2=ruledecimals
				{
					$current.merge(this_decimals_2);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
			(
				{
					newCompositeNode(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_0_3());
				}
				this_exponent_3=ruleexponent
				{
					$current.merge(this_exponent_3);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
		)
		    |
		(
			{
				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_1_0());
			}
			this_decimals_4=ruledecimals
			{
				$current.merge(this_decimals_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_1_1());
			}
			this_exponent_5=ruleexponent
			{
				$current.merge(this_exponent_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFloat_litAccess().getFullStopKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getFloat_litAccess().getDecimalsParserRuleCall_2_1());
			}
			this_decimals_7=ruledecimals
			{
				$current.merge(this_decimals_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			(
				{
					newCompositeNode(grammarAccess.getFloat_litAccess().getExponentParserRuleCall_2_2());
				}
				this_exponent_8=ruleexponent
				{
					$current.merge(this_exponent_8);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
		)
	)
;

// Entry rule entryRuleexponent
entryRuleexponent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExponentRule()); }
	iv_ruleexponent=ruleexponent
	{ $current=$iv_ruleexponent.current.getText(); }
	EOF;

// Rule exponent
ruleexponent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='e'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExponentAccess().getEKeyword_0_0());
			}
			    |
			kw='E'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExponentAccess().getEKeyword_0_1());
			}
		)
		(
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExponentAccess().getPlusSignKeyword_1_0());
			}
			    |
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getExponentAccess().getHyphenMinusKeyword_1_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getExponentAccess().getDecimalsParserRuleCall_2());
		}
		this_decimals_4=ruledecimals
		{
			$current.merge(this_decimals_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuledecimals
entryRuledecimals returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDecimalsRule()); }
	iv_ruledecimals=ruledecimals
	{ $current=$iv_ruledecimals.current.getText(); }
	EOF;

// Rule decimals
ruledecimals returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DECIMAL_DIGIT_0=RULE_DECIMAL_DIGIT
		{
			$current.merge(this_DECIMAL_DIGIT_0);
		}
		{
			newLeafNode(this_DECIMAL_DIGIT_0, grammarAccess.getDecimalsAccess().getDECIMAL_DIGITTerminalRuleCall());
		}
	)+
;

// Entry rule entryRulebyte_value
entryRulebyte_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getByte_valueRule()); }
	iv_rulebyte_value=rulebyte_value
	{ $current=$iv_rulebyte_value.current.getText(); }
	EOF;

// Rule byte_value
rulebyte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getByte_valueAccess().getOctal_byte_valueParserRuleCall_0());
		}
		this_octal_byte_value_0=ruleoctal_byte_value
		{
			$current.merge(this_octal_byte_value_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getByte_valueAccess().getHex_byte_valueParserRuleCall_1());
		}
		this_hex_byte_value_1=rulehex_byte_value
		{
			$current.merge(this_hex_byte_value_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulehex_byte_value
entryRulehex_byte_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHex_byte_valueRule()); }
	iv_rulehex_byte_value=rulehex_byte_value
	{ $current=$iv_rulehex_byte_value.current.getText(); }
	EOF;

// Rule hex_byte_value
rulehex_byte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHex_byte_valueAccess().getBackslashKeyword_0());
		}
		kw='x'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getHex_byte_valueAccess().getXKeyword_1());
		}
		this_HEX_DIGIT_2=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_2);
		}
		{
			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_2());
		}
		this_HEX_DIGIT_3=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_3);
		}
		{
			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getHex_byte_valueAccess().getHEX_DIGITTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleoctal_byte_value
entryRuleoctal_byte_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOctal_byte_valueRule()); }
	iv_ruleoctal_byte_value=ruleoctal_byte_value
	{ $current=$iv_ruleoctal_byte_value.current.getText(); }
	EOF;

// Rule octal_byte_value
ruleoctal_byte_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOctal_byte_valueAccess().getBackslashKeyword_0());
		}
		this_OCTAL_DIGIT_1=RULE_OCTAL_DIGIT
		{
			$current.merge(this_OCTAL_DIGIT_1);
		}
		{
			newLeafNode(this_OCTAL_DIGIT_1, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_1());
		}
		this_OCTAL_DIGIT_2=RULE_OCTAL_DIGIT
		{
			$current.merge(this_OCTAL_DIGIT_2);
		}
		{
			newLeafNode(this_OCTAL_DIGIT_2, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_2());
		}
		this_OCTAL_DIGIT_3=RULE_OCTAL_DIGIT
		{
			$current.merge(this_OCTAL_DIGIT_3);
		}
		{
			newLeafNode(this_OCTAL_DIGIT_3, grammarAccess.getOctal_byte_valueAccess().getOCTAL_DIGITTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleunicode_value
entryRuleunicode_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUnicode_valueRule()); }
	iv_ruleunicode_value=ruleunicode_value
	{ $current=$iv_ruleunicode_value.current.getText(); }
	EOF;

// Rule unicode_value
ruleunicode_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_LETTER_0=RULE_LETTER
			{
				$current.merge(this_LETTER_0);
			}
			{
				newLeafNode(this_LETTER_0, grammarAccess.getUnicode_valueAccess().getLETTERTerminalRuleCall_0_0());
			}
			    |
			this_DECIMAL_DIGIT_1=RULE_DECIMAL_DIGIT
			{
				$current.merge(this_DECIMAL_DIGIT_1);
			}
			{
				newLeafNode(this_DECIMAL_DIGIT_1, grammarAccess.getUnicode_valueAccess().getDECIMAL_DIGITTerminalRuleCall_0_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnicode_valueAccess().getLittle_u_valueParserRuleCall_1());
		}
		this_little_u_value_2=rulelittle_u_value
		{
			$current.merge(this_little_u_value_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getUnicode_valueAccess().getBig_u_valueParserRuleCall_2());
		}
		this_big_u_value_3=rulebig_u_value
		{
			$current.merge(this_big_u_value_3);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ESCAPED_CHAR_4=RULE_ESCAPED_CHAR
		{
			$current.merge(this_ESCAPED_CHAR_4);
		}
		{
			newLeafNode(this_ESCAPED_CHAR_4, grammarAccess.getUnicode_valueAccess().getESCAPED_CHARTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRulebig_u_value
entryRulebig_u_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBig_u_valueRule()); }
	iv_rulebig_u_value=rulebig_u_value
	{ $current=$iv_rulebig_u_value.current.getText(); }
	EOF;

// Rule big_u_value
rulebig_u_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBig_u_valueAccess().getBackslashKeyword_0());
		}
		kw='U'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBig_u_valueAccess().getUKeyword_1());
		}
		this_HEX_DIGIT_2=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_2);
		}
		{
			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_2());
		}
		this_HEX_DIGIT_3=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_3);
		}
		{
			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_3());
		}
		this_HEX_DIGIT_4=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_4);
		}
		{
			newLeafNode(this_HEX_DIGIT_4, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_4());
		}
		this_HEX_DIGIT_5=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_5);
		}
		{
			newLeafNode(this_HEX_DIGIT_5, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_5());
		}
		this_HEX_DIGIT_6=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_6);
		}
		{
			newLeafNode(this_HEX_DIGIT_6, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_6());
		}
		this_HEX_DIGIT_7=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_7);
		}
		{
			newLeafNode(this_HEX_DIGIT_7, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_7());
		}
		this_HEX_DIGIT_8=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_8);
		}
		{
			newLeafNode(this_HEX_DIGIT_8, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_8());
		}
		this_HEX_DIGIT_9=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_9);
		}
		{
			newLeafNode(this_HEX_DIGIT_9, grammarAccess.getBig_u_valueAccess().getHEX_DIGITTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRulelittle_u_value
entryRulelittle_u_value returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLittle_u_valueRule()); }
	iv_rulelittle_u_value=rulelittle_u_value
	{ $current=$iv_rulelittle_u_value.current.getText(); }
	EOF;

// Rule little_u_value
rulelittle_u_value returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLittle_u_valueAccess().getBackslashKeyword_0());
		}
		kw='u'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getLittle_u_valueAccess().getUKeyword_1());
		}
		this_HEX_DIGIT_2=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_2);
		}
		{
			newLeafNode(this_HEX_DIGIT_2, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_2());
		}
		this_HEX_DIGIT_3=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_3);
		}
		{
			newLeafNode(this_HEX_DIGIT_3, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_3());
		}
		this_HEX_DIGIT_4=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_4);
		}
		{
			newLeafNode(this_HEX_DIGIT_4, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_4());
		}
		this_HEX_DIGIT_5=RULE_HEX_DIGIT
		{
			$current.merge(this_HEX_DIGIT_5);
		}
		{
			newLeafNode(this_HEX_DIGIT_5, grammarAccess.getLittle_u_valueAccess().getHEX_DIGITTerminalRuleCall_5());
		}
	)
;

RULE_IDENTIFIER : RULE_LETTER (RULE_LETTER|RULE_DECIMAL_DIGIT)*;

fragment RULE_A_F : ('A'..'F'|'a'..'f');

RULE_LETTER : (RULE_A_F|'g'..'z'|'G'..'Z'|'_');

RULE_HEX_DIGIT : (RULE_DECIMAL_DIGIT|RULE_A_F);

RULE_OCTAL_DIGIT : '0'..'7';

RULE_ESCAPED_CHAR : '\\' ('a'|'b'|'f'|'n'|'r'|'t'|'v'|'\\'|'\''|'"');

RULE_DECIMAL_DIGIT : (RULE_OCTAL_DIGIT|'8'|'9');

RULE_BINARY_OP : ('||'|'&&'|RULE_REL_OP|RULE_ADD_OP|RULE_MUL_OP);

fragment RULE_REL_OP : ('=='|'!='|'<'|'<='|'>'|'>=');

fragment RULE_ADD_OP : ('+'|'-'|'|'|'^');

fragment RULE_MUL_OP : ('*'|'/'|'%'|'<<'|'>>'|'&'|'&^');

RULE_UNARY_OP : ('+'|'-'|'!'|'^'|'*'|'&'|'<-');

RULE_ASSIGN_OP : (RULE_ADD_OP|RULE_MUL_OP)? '=';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
